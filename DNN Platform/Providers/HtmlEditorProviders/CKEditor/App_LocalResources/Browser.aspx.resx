<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System" name="System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System">
    <value>Private</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Close Window</value>
  </data>
  <data name="cmdClose.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="lblConFiles.Text" xml:space="preserve">
    <value>Contained Files:</value>
  </data>
  <data name="lblCurrent.Text" xml:space="preserve">
    <value>Current Directory:</value>
  </data>
  <data name="lblSubDirs.Text" xml:space="preserve">
    <value>Directories:</value>
  </data>
  <data name="cmdDownload.Help" xml:space="preserve">
    <value>Download the selected file.</value>
  </data>
  <data name="cmdDownload.Text" xml:space="preserve">
    <value>Download File</value>
  </data>
  <data name="cmdUpload.Help" xml:space="preserve">
    <value>Upload a new file.</value>
  </data>
  <data name="cmdUpload.Text" xml:space="preserve">
    <value>Upload File</value>
  </data>
  <data name="Error1.Text" xml:space="preserve">
    <value>The user does not have permission to perform this task.</value>
  </data>
  <data name="Error2.Text" xml:space="preserve">
    <value>This file extension is not permitted.</value>
  </data>
  <data name="Error3.Text" xml:space="preserve">
    <value>This file extension is not permitted.</value>
  </data>
  <data name="Error4.Text" xml:space="preserve">
    <value>The user does not have permission to view this folder.</value>
  </data>
  <data name="Error5.Text" xml:space="preserve">
    <value>No file selected.</value>
  </data>
  <data name="cmdUploadCancel.Text" xml:space="preserve">
    <value>Cancel Upload</value>
  </data>
  <data name="cmdUploadNow.Text" xml:space="preserve">
    <value>Upload Now</value>
  </data>
  <data name="lblUrlType.Text" xml:space="preserve">
    <value>Choose URL Type:</value>
  </data>
  <data name="lblChoosetab.Text" xml:space="preserve">
    <value>Choose a Page:</value>
  </data>
  <data name="cmdCreate.Help" xml:space="preserve">
    <value>Create a new sub folder</value>
  </data>
  <data name="cmdCreate.Text" xml:space="preserve">
    <value>Create New Folder</value>
  </data>
  <data name="cmdDelete.Help" xml:space="preserve">
    <value>Delete the selected file.</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Delete File</value>
  </data>
  <data name="cmdCreateFolder.Text" xml:space="preserve">
    <value>Create Now</value>
  </data>
  <data name="chkAspect.Text" xml:space="preserve">
    <value>Maintain Aspect Ratio</value>
  </data>
  <data name="chkHumanFriendy.Text" xml:space="preserve">
    <value>Human Friendly URL</value>
  </data>
  <data name="cmdResizeCancel.Text" xml:space="preserve">
    <value>Cancel Resize</value>
  </data>
  <data name="cmdResizeNow.Text" xml:space="preserve">
    <value>Resize Now</value>
  </data>
  <data name="cmdResizer.Help" xml:space="preserve">
    <value>Edit the selected image.</value>
  </data>
  <data name="cmdResizer.Text" xml:space="preserve">
    <value>Image Editor</value>
  </data>
  <data name="lblHeight.Text" xml:space="preserve">
    <value>New Height:</value>
  </data>
  <data name="lblThumbName.Text" xml:space="preserve">
    <value>New File Name:</value>
  </data>
  <data name="lblWidth.Text" xml:space="preserve">
    <value>New Width:</value>
  </data>
  <data name="AreYouSure.Text" xml:space="preserve">
    <value>Are you sure you want to delete this file?</value>
  </data>
  <data name="lblImgQuality.Text" xml:space="preserve">
    <value>Image Quality (Compression):</value>
  </data>
  <data name="cmdCrop.Text" xml:space="preserve">
    <value>Crop</value>
  </data>
  <data name="cmdCropCancel.Text" xml:space="preserve">
    <value>Edit Cancel</value>
  </data>
  <data name="cmdCropNow.Text" xml:space="preserve">
    <value>Create New Image</value>
  </data>
  <data name="cmdResize2.Text" xml:space="preserve">
    <value>Resize</value>
  </data>
  <data name="cmdRotate.Text" xml:space="preserve">
    <value>Rotate</value>
  </data>
  <data name="cmdZoom.Text" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="imgOriginal.Text" xml:space="preserve">
    <value>Original Image (Scaled to Fit Screen)</value>
  </data>
  <data name="imgResized.Text" xml:space="preserve">
    <value>Preview of the Resized Image (Scaled to Fit Screen)</value>
  </data>
  <data name="lblClearPreview.Text" xml:space="preserve">
    <value>Clear Preview</value>
  </data>
  <data name="lblCropInfo.Text" xml:space="preserve">
    <value>Here you will see the edited new image</value>
  </data>
  <data name="lblOriginal.Text" xml:space="preserve">
    <value>Original:</value>
  </data>
  <data name="lblOtherTools.Text" xml:space="preserve">
    <value>Other Tools:</value>
  </data>
  <data name="lblPreview.Text" xml:space="preserve">
    <value>Preview:</value>
  </data>
  <data name="lblResizeHeader.Text" xml:space="preserve">
    <value>Image Editor : Resize</value>
  </data>
  <data name="lblResizeHeader2.Text" xml:space="preserve">
    <value>Image Editor : Crop, Zoom &amp; Rotate</value>
  </data>
  <data name="lblShowPreview.Text" xml:space="preserve">
    <value>Show Preview</value>
  </data>
  <data name="cmdCreateCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="lblNewFoldName.Text" xml:space="preserve">
    <value>New Folder Name:</value>
  </data>
  <data name="LabelAnchor.Text" xml:space="preserve">
    <value>Select an Page Anchor:</value>
  </data>
  <data name="TrackClicks.Text" xml:space="preserve">
    <value>Track Number of Times This Link Is Clicked:</value>
  </data>
  <data name="absLnk.Text" xml:space="preserve">
    <value>Absolute URL  - &lt;em&gt;'http://www.MyWebsite.com/Images/MyImage.jpg'&lt;/em&gt;</value>
  </data>
  <data name="lnkClick.Text" xml:space="preserve">
    <value>Relative Secured URL  - &lt;em&gt;'/LinkClick.aspx?fileticket=xyz'&lt;/em&gt;</value>
  </data>
  <data name="relLnk.Text" xml:space="preserve">
    <value>Relative URL  - &lt;em&gt;'/Images/MyImage.jpg'&lt;/em&gt;</value>
  </data>
  <data name="Wait.Text" xml:space="preserve">
    <value>Please Wait...</value>
  </data>
  <data name="WaitMessage.Text" xml:space="preserve">
    <value>Loading Page and Parsing Anchors.</value>
  </data>
  <data name="ExtraTabOptions.Text" xml:space="preserve">
    <value>Tab Options:</value>
  </data>
  <data name="LabelTabLanguage.Text" xml:space="preserve">
    <value>Aditional Language Parameter:</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="FileLink.Text" xml:space="preserve">
    <value>File Link</value>
  </data>
  <data name="PageLink.Text" xml:space="preserve">
    <value>Page Link</value>
  </data>
  <data name="DetailView.Text" xml:space="preserve">
    <value>Detail View</value>
  </data>
  <data name="DetailViewTitle.Text" xml:space="preserve">
    <value>Shows Every File With an Large Image Preview, Filename and File Information.</value>
  </data>
  <data name="IconsView.Text" xml:space="preserve">
    <value>Icons View</value>
  </data>
  <data name="IconsViewTitle.Text" xml:space="preserve">
    <value>Shows All Files With Image Preview as Tiles.</value>
  </data>
  <data name="ListView.Text" xml:space="preserve">
    <value>List View</value>
  </data>
  <data name="ListViewTitle.Text" xml:space="preserve">
    <value>Shows Small Image Preview, Filename and File Information.</value>
  </data>
  <data name="FirstPage.Text" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="GoTo.Text" xml:space="preserve">
    <value>Go To </value>
  </data>
  <data name="LastPage.Text" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="NextPage.Text" xml:space="preserve">
    <value>Next Page</value>
  </data>
  <data name="PreviousPage.Text" xml:space="preserve">
    <value>Previous Page</value>
  </data>
  <data name="SortAscending.Help" xml:space="preserve">
    <value>Sort file list by file names in ascending order.</value>
  </data>
  <data name="SortAscending.Text" xml:space="preserve">
    <value>Sort Ascending</value>
  </data>
  <data name="SortDescending.Help" xml:space="preserve">
    <value>Sort file list by file names in descending order.</value>
  </data>
  <data name="SortDescending.Text" xml:space="preserve">
    <value>Sort Descending</value>
  </data>
  <data name="lnkAbsClick.Text" xml:space="preserve">
    <value>Absolute Secured URL  - &lt;em&gt;'http://www.MyWebsite.com/LinkClick.aspx?fileticket=xyz'&lt;/em&gt;</value>
  </data>
  <data name="SpaceUsed.Text" xml:space="preserve">
    <value>Space Used: {0} of {1}</value>
  </data>
  <data name="UnlimitedSpace.Text" xml:space="preserve">
    <value>[unlimited]</value>
  </data>
  <data name="Syncronize.Help" xml:space="preserve">
    <value>Synchronize Folder with Database</value>
  </data>
  <data name="Syncronize.Text" xml:space="preserve">
    <value>Synchronize Folder</value>
  </data>
  <data name="FileSizeRestriction.Text" xml:space="preserve">
    <value>The File Upload Limit is {0} MB. &lt;br /&gt; The Allowed Filetypes are: "{1}"</value>
  </data>
  <data name="FileToBig.Text" xml:space="preserve">
    <value>File is too big to upload.</value>
  </data>
  <data name="OverrideFile.Text" xml:space="preserve">
    <value>Override file if it already exists, otherwise a new file with underscore _1 will be created?</value>
  </data>
  <data name="FileToBigMessage.Text" xml:space="preserve">
    <value>Uploaded file is bigger then the allowed file size.</value>
  </data>
  <data name="AddFiles.Text" xml:space="preserve">
    <value>Add file(s)...</value>
  </data>
  <data name="DropHere.Text" xml:space="preserve">
    <value>Drop file(s) here</value>
  </data>
  <data name="StartUploads.Text" xml:space="preserve">
    <value>Start upload(s)</value>
  </data>  <data name="RootFolder.Text" xml:space="preserve">
    <value>Root Folder</value>
  </data>
  <data name="BrowserModus.Image.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="BrowserModus.Link.Text" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="Created.Text" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="lblBrowserModus.Text" xml:space="preserve">
    <value>Browser-Modus: {0}</value>
  </data>
  <data name="Size.Text" xml:space="preserve">
    <value>Size</value>
  </data>
</root>