@using DotNetNuke.Services.Localization
@using System.Web.Mvc
@using System.Linq
@using System.Linq.Expressions
@using DotNetNuke.Web.MvcPipeline.Models
@using DotNetNuke.Web.MvcPipeline.Modules
@using DotNetNuke.Web.MvcPipeline

@model ModuleSettingsModel

@{
    var LocalResourceFile = "~/admin/Modules/" + Localization.LocalResourceDirectory + "/ModuleSettings.ascx";
    var controllerName = "ModuleSettings";
    var actionName = "UpdateDefaultSettings";
    if (!string.IsNullOrEmpty(Model.ModuleControllerName))
    {
        controllerName = Model.ModuleControllerName;
        actionName = "UpdateSettings";
    }
}

<div class="dnnForm dnnModuleSettings dnnClear" id="dnnModuleSettings" data-returnurl="@Model.ReturnUrl">
    <ul class="dnnAdminTabNav dnnClear">
        <li><a href="#msModuleSettings">@Localization.GetString("ModuleSettings", LocalResourceFile)</a></li>
        <li><a href="#msPermissions">@Localization.GetString("Permissions", LocalResourceFile)</a></li>
        <li><a href="#msPageSettings">@Localization.GetString("PageSettings", LocalResourceFile)</a></li>
        @if (!string.IsNullOrEmpty(Model.ModuleActionName))
        {
            <li id="specificSettingsTab">
                <a href="#msSpecificSettings" id="hlSpecificSettings">@Localization.GetString("ControlTitle_settings", Model.ModuleLocalResourceFile)</a>
            </li>
        }
    </ul>

    @using (Html.BeginForm(actionName, controllerName, new { ModuleId = Model.ModuleId }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "dnnFormMessage dnnFormError" })
        @Html.HiddenFor(model => model.TabId)
        @Html.HiddenFor(model => model.ModuleId)

        <div class="msModuleSettings dnnClear" id="msModuleSettings">
            <div class="dnnFormExpandContent"><a href="">@Localization.GetString("ExpandAll", Localization.SharedResourceFile)</a></div>
            <div class="msmsContent dnnClear">
                <h2 id="dnnPanel-ModuleGeneralDetails" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">@Localization.GetString("GeneralDetails", LocalResourceFile)</a>
                </h2>
                <fieldset>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.ModuleId, LocalResourceFile)
                        <span>@Html.DisplayFor(model => model.ModuleId)</span>
                    </div>
                    <div class="dnnFormItem" id="cultureRow">
                        @Html.DnnLabelFor(model => model.CultureCode, LocalResourceFile)
                        @Model.CultureCode
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.FriendlyName, LocalResourceFile)
                        @Html.TextBoxFor(model => model.FriendlyName, new { disabled = "disabled", @class = "aspNetDisabled" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.ModuleTitle, LocalResourceFile)
                        @Html.EditorFor(model => model.ModuleTitle)
                        @Html.ValidationMessageFor(model => model.ModuleTitle, "", new { @class = "dnnFormMessage dnnFormError" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Tags, LocalResourceFile)
                        @Html.EditorFor(model => model.Tags)
                    </div>
                </fieldset>

                <h2 id="dnnPanel-ModuleSecuritySettings" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">@Localization.GetString("Security", LocalResourceFile)</a>
                </h2>
                <fieldset>
                    <div class="dnnFormItem" id="rowAllTabs">
                        @Html.DnnLabelFor(model => model.AllTabs, LocalResourceFile)
                        @Html.EditorFor(model => model.AllTabs)
                    </div>
                    <div class="dnnFormItem" id="trnewPages">
                        @Html.DnnLabelFor(model => model.NewTabs, LocalResourceFile)
                        @Html.EditorFor(model => model.NewTabs)
                    </div>
                    <div class="dnnFormItem" id="allowIndexRow">
                        @Html.DnnLabelFor(model => model.AllowIndex, LocalResourceFile)
                        @Html.EditorFor(model => model.AllowIndex)
                    </div>
                    <div id="isShareableRow" class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.IsShareable, LocalResourceFile)
                        @Html.EditorFor(model => model.IsShareable)
                    </div>
                    <div id="isShareableRowViewOnly" class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.IsShareableViewOnly, LocalResourceFile)
                        @Html.EditorFor(model => model.IsShareableViewOnly)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.AdminBorder, LocalResourceFile)
                        @Html.EditorFor(model => model.AdminBorder)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Header, LocalResourceFile)
                        @Html.TextAreaFor(model => model.Header, new { rows = "6" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Footer, LocalResourceFile)
                        @Html.TextAreaFor(model => model.Footer, new { rows = "6" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.StartDate, LocalResourceFile)
                        @Html.TextBoxFor(model => model.StartDate, new { type = "datetime-local" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.EndDate, LocalResourceFile)
                        @Html.TextBoxFor(model => model.EndDate, new { type = "datetime-local" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Moniker, LocalResourceFile)
                        @Html.EditorFor(model => model.Moniker)
                    </div>
                </fieldset>

                <h2 id="dnnPanel-ModuleAdditionalPages" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">@Localization.GetString("ModuleInstalledOn", LocalResourceFile)</a>
                </h2>
                <fieldset>
                    <div>
                        <div class="dnnFormItem">
                            @if (Model.InstalledOnTabs != null && Model.InstalledOnTabs.Any())
                            {
                                <table class="dnn-grid">
                                    <thead>
                                        <tr>
                                            <th style="width:150px">Site</th>
                                            <th>Page</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.InstalledOnTabs)
                                        {
                                            <tr>
                                                <td>@item.InstalledOnSite</td>
                                                <td>@item.InstalledOnLink</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="dnnFormMessage dnnFormWarning">
                                    <label>@Localization.GetString("lblNoRecords", LocalResourceFile)</label>
                                </div>
                            }
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="msPermissions dnnClear" id="msPermissions">
            <div class="mspContent dnnClear">
                <fieldset>
                    <div id="permissionsRow">
                        <!-- Ajoutez ici le contrÃ´le pour les permissions -->
                        @Html.Action("Index", "ModulePermissionsGrid", new { tabId = Model.TabId, moduleId = Model.ModuleId, inheritViewPermissionsFromTab = Model.InheritViewPermissions })
                        <div class="dnnClear"></div>
                        @Html.EditorFor(model => model.InheritViewPermissions) @Html.Raw(Localization.GetString("InheritPermissions", LocalResourceFile))
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="msPageSettings dnnClear" id="msPageSettings">
            <div class="dnnFormExpandContent"><a href="">@Localization.GetString("ExpandAll", Localization.SharedResourceFile)</a></div>
            <div class="mspsContent dnnClear">
                <h2 id="dnnPanel-ModuleAppearance" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">@Localization.GetString("Appearance", LocalResourceFile)</a>
                </h2>
                <fieldset>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.IconFile, LocalResourceFile)
                        @Html.EditorFor(model => model.IconFile)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Alignment, LocalResourceFile)
                        @Html.DropDownListFor(model => model.Alignment, new SelectList(
                                                     new List<Object>{
                                                          new { value = "left" , text = "Left"  },
                                                          new { value = "center" , text = "Center" },
                                                          new { value = "right" , text = "Right"},
                                                          new { value = "" , text = "Not_Specified"}
                                                       },
                                                     "value",
                                                     "text",
                                                      Model.Alignment
                                              ), new { @class = "dnnFixedSizeComboBox" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Color, LocalResourceFile)
                        @Html.EditorFor(model => model.Color)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Border, LocalResourceFile)
                        @Html.EditorFor(model => model.Border)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.Visibility, LocalResourceFile)
                        @Html.EnumDropDownListFor(model => model.Visibility, new { @class = "dnnFixedSizeComboBox" })
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.DisplayTitle, LocalResourceFile)
                        @Html.EditorFor(model => model.DisplayTitle)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.DisplayPrint, LocalResourceFile)
                        @Html.EditorFor(model => model.DisplayPrint)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.DisplaySyndicate, LocalResourceFile)
                        @Html.EditorFor(model => model.DisplaySyndicate)
                    </div>
                    @*<div class="dnnFormItem">
                            @Html.DnnLabelFor(model => model.IsWebSlice, LocalResourceFile)
                            @Html.EditorFor(model => model.IsWebSlice)
                        </div>
                        <div class="dnnFormItem" id="webSliceTitle">
                            @Html.DnnLabelFor(model => model.WebSliceTitle, LocalResourceFile)
                            @Html.EditorFor(model => model.WebSliceTitle)
                        </div>
                        <div class="dnnFormItem" id="webSliceExpiry">
                            @Html.DnnLabelFor(model => model.WebSliceExpiryDate, LocalResourceFile)
                            @Html.EditorFor(model => model.WebSliceExpiryDate)
                        </div>
                        <div class="dnnFormItem" id="webSliceTTL">
                            @Html.DnnLabelFor(model => model.WebSliceTTL, LocalResourceFile)
                            @Html.EditorFor(model => model.WebSliceTTL)
                        </div>*@
                    <div class="dnnFormItem dnnContainerPreview">
                        @Html.DnnLabelFor(model => model.ContainerSrc, LocalResourceFile)
                        @Html.DropDownListFor(model => model.ContainerSrc, new SelectList(Model.ContainerOptions, "Value", "Text"), "<" + Localization.GetString("None_Specified", LocalResourceFile) + ">", new { @class = "dnnFixedSizeComboBox" })
                        <a href="#" class="dnnSecondaryAction">@Localization.GetString("ContainerPreview", LocalResourceFile)</a>
                    </div>
                </fieldset>

                <h2 id="dnnPanel-ModuleCacheSettings" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">@Localization.GetString("CacheSettings", LocalResourceFile)</a>
                </h2>
                <fieldset>
                    <div class="dnnFormItem dnnCacheSettings">
                        @Html.DnnLabelFor(model => model.CacheProvider, LocalResourceFile)
                        @Html.DropDownListFor(model => model.CacheProvider, new SelectList(new[] { "None" }@*.Concat(Model.CacheProvider != null ? new[] { Model.CacheProvider } : Enumerable.Empty<string>()*@), "None"), new { class = "dnnFixedSizeComboBox" })
                        @if (Model.CacheInheritedVisible)
                        {
                            <span class="labelCacheInherited">@Localization.GetString("CacheInherited", LocalResourceFile)</span>
                        }
                    </div>
                    <div class="dnnFormItem" id="divCacheDuration" @(string.IsNullOrEmpty(Model.CacheProvider) ? "style='display:none;'" : "")>
                        @if (Model.CacheWarningVisible)
                        {
                            <div class="dnnFormMessage dnnFormWarning">
                                @Localization.GetString("CacheDurationWarning", LocalResourceFile)
                            </div>
                        }
                        @Html.DnnLabelFor(model => model.CacheTime, LocalResourceFile)
                        @Html.EditorFor(model => model.CacheTime, new { @class = "msCacheDuration" })
                    </div>
                </fieldset>

                <h2 id="dnnPanel-ModuleOtherSettings" class="dnnFormSectionHead">
                    <a href="" class="dnnSectionExpanded">
                        <a href="" class="dnnSectionExpanded">@Localization.GetString("OtherSettings", LocalResourceFile)</a>
                    </a>
                </h2>
                <fieldset>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.IsDefaultModule, LocalResourceFile)
                        @Html.EditorFor(model => model.IsDefaultModule)
                    </div>
                    <div class="dnnFormItem">
                        @Html.DnnLabelFor(model => model.AllModules, LocalResourceFile)
                        @Html.EditorFor(model => model.AllModules)
                    </div>
                    <div class="dnnFormItem" id="rowTab">
                        @Html.DnnLabelFor(model => model.TabId, LocalResourceFile)
                        @Html.DropDownListFor(model => model.TabId, new SelectList(Model.AvailableTabs, "Id", "Name"), new { @class = "dnnFixedSizeComboBox" })
                    </div>
                </fieldset>
            </div>
        </div>

        if (!string.IsNullOrEmpty(Model.ModuleActionName))
        {
            <div class="msSpecificSettings dnnClear" id="msSpecificSettings">
                <div class="mspsContent dnnClear">
                    <fieldset id="fsSpecific">
                        @Html.Control(Model.ModuleControlSrc, Model.ModuleId)
                    </fieldset>
                </div>
            </div>
        }
        <ul class="dnnActions dnnClear">
            <li>
                <button type="submit" class="dnnPrimaryAction" id="cmdUpdate">@Localization.GetString("cmdUpdate", LocalResourceFile)</button>
            </li>
            <li>
                <button type="button" data-action="@Url.Action("Delete")" class="dnnSecondaryAction" id="cmdDelete">@Localization.GetString("cmdDelete", LocalResourceFile)</button>
            </li>
            <li>
                <a href="@Model.ReturnUrl" class="dnnSecondaryAction">@Localization.GetString("cmdCancel", LocalResourceFile)</a>
            </li>
        </ul>
    }

    <div class="dnnmsStat dnnClear">
        @*@Html.Action("AuditControl", "ModuleSettings", new { moduleId = Model.ModuleId })*@

        @*<div class="dnnFormItem">
                <label>@Localization.GetString("CreatedBy")</label>
                <span>@Model.CreatedByUserName</span>
            </div>
            <div class="dnnFormItem">
                <label>@Localization.GetString("CreatedOn")</label>
                <span>@Model.CreatedOnDate.ToString("g")</span>
            </div>
            <div class="dnnFormItem">
                <label>@Localization.GetString("LastModifiedBy")</label>
                <span>@Model.LastModifiedByUserName</span>
            </div>
            <div class="dnnFormItem">
                <label>@Localization.GetString("LastModifiedOn")</label>
                <span>@Model.LastModifiedOnDate.ToString("g")</span>
            </div>*@
    </div>
</div>

<script language="javascript" type="text/javascript" nonce="@Html.CspNonce()">
        /*globals jQuery, window */
        (function ($) {
            function setUpDnnModuleSettings() {
                $('#dnnModuleSettings').dnnTabs().dnnPanels();
                $('#msModuleSettings .dnnFormExpandContent a').dnnExpandAll({
                    expandText: '@Localization.GetSafeJSString("ExpandAll", Localization.SharedResourceFile)',
                    collapseText: '@Localization.GetSafeJSString("CollapseAll", Localization.SharedResourceFile)',
                    targetArea: '#msModuleSettings'
                });
                $('#msPageSettings .dnnFormExpandContent a').dnnExpandAll({
                    expandText: '@Localization.GetSafeJSString("ExpandAll", Localization.SharedResourceFile)',
                    collapseText: '@Localization.GetSafeJSString("CollapseAll", Localization.SharedResourceFile)',
                    targetArea: '#msPageSettings'
                });
                $('@Html.IdFor(m => m.CmdDelete)').dnnConfirm({
                    text: '@Localization.GetSafeJSString("DeleteItem.Text", Localization.SharedResourceFile)',
                    yesText: '@Localization.GetSafeJSString("Yes.Text", Localization.SharedResourceFile)',
                    noText: '@Localization.GetSafeJSString("No.Text", Localization.SharedResourceFile)',
                    title: '@Localization.GetSafeJSString("Confirm.Text", Localization.SharedResourceFile)'
                });
                $('.dnnContainerPreview').dnnPreview({
                    containerSelector: '@Html.IdFor(m => m.ModuleContainerCombo)',
                    baseUrl: '@Url.Action("Index", "Home")',
                    noSelectionMessage: '@Localization.GetSafeJSString("PreviewNoSelectionMessage.Text", LocalResourceFile)',
                    alertCloseText: '@Localization.GetSafeJSString("Close.Text", Localization.SharedResourceFile)',
                    alertOkText: '@Localization.GetSafeJSString("Ok.Text", Localization.SharedResourceFile)',
                    useComboBox: true,
                    ModuleId: '@Model.ModuleId'
                });

                toggleShareableRowViewOnly(false);
                $('#@Html.IdFor(m => m.IsShareableCheckBox)').change(function () {
                    toggleShareableRowViewOnly(true);
                });
            }

            function toggleShareableRowViewOnly(animation) {
                var isSharable = $('#@Html.IdFor(m => m.IsShareableCheckBox)').attr("checked");
                if (isSharable == "checked") {
                    animation ? $('#isShareableRowViewOnly').slideDown() : $('#isShareableRowViewOnly').show();
                }
                else {
                    animation ? $('#isShareableRowViewOnly').slideUp('fast') : $('#isShareableRowViewOnly').hide();
                }
            }

            $(document).ready(function () {
                setUpDnnModuleSettings();
                window.compareDate = function (source, arg) {
                    var id = source.controltovalidate;
                    var compareId = source.getAttribute("CompareControl");
                    var time = $('#' + id).val();
                    var compareTime = $('#' + id.substr(0, id.lastIndexOf("_") + 1) + compareId).val();
                    arg.IsValid = compareTime == null || time > compareTime;
                };
            });
        } (jQuery, window.Sys));
</script>
