<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="https://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="https://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountInfo.Text" xml:space="preserve">
    <value>Account Info</value>
  </data>
  <data name="BestPractices.Text" xml:space="preserve">
    <value>You are about to upgrade your website to a more recent version of the application. Applying upgrades on a consistent basis is the best way to ensure that you are protecting the integrity of your investment and the security of your users and assets. Before proceeding with the automated upgrade process please ensure that:
&lt;ul&gt;
&lt;li&gt;you have made plans to first attempt this process in a staging environment
&lt;li&gt;you have documented your current installation characteristics including doing research on the compatibility of any third party modules which you may be using
&lt;li&gt;you have created the necessary backups of your environment so that you will be able to restore your website in the event of an unexpected upgrade failure.
&lt;/ul&gt;</value>
  </data>
  <data name="VersionsMatch.Text" xml:space="preserve">
    <value>Database and application versions match - there is no upgrade to apply.</value>
  </data>
  <data name="VersionsMatchButIncrementalExists.Text" xml:space="preserve">
    <value>Database and application versions match - there is an incremental release you can upgrade to.</value>
  </data>
  <data name="CurrentVersion.Text" xml:space="preserve">
    <value>Current Version - {0}</value>
  </data>
  <data name="DatabaseUpgrade.Text" xml:space="preserve">
    <value>Updating Database</value>
  </data>
  <data name="Error.Text" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorInStep.Text" xml:space="preserve">
    <value>ERROR occured - {0}</value>
  </data>
  <data name="ExtensionsUpgrade.Text" xml:space="preserve">
    <value>Updating Extensions</value>
  </data>
  <data name="IntroDetail.Text" xml:space="preserve">
    <value>&lt;p&gt;Welcome to the DNN Upgrade Page.&lt;/p&gt;

&lt;p&gt;The first step is to choose the language you want to use for the upgrade.&lt;/p&gt;

</value>
  </data>
  <data name="InvalidCredentials.Text" xml:space="preserve">
    <value>Username and Password not recognized.</value>
  </data>
  <data name="Next.Text" xml:space="preserve">
    <value>Upgrade Now</value>
  </data>
  <data name="NoInstallationLog.Text" xml:space="preserve">
    <value>No Installation Log</value>
  </data>
  <data name="Password.Help" xml:space="preserve">
    <value>The password for the Super User account.</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="ImprovementsProgramTitle.Text" xml:space="preserve">
    <value>Product Improvement Program</value>
  </data>
  <data name="ImprovementProgramExplain.Text" xml:space="preserve">
    <value>The product improvement program allows us to better understand how we can
improve DNN for you. The data will help us analyze usage and what is important
for people using the product. All of the data is anonymous and for internal use only. Learn more about the &lt;a href="https://www.dnnsoftware.com/dnn-improvement-program" target="_blank"&gt;Product Improvement Program&lt;/a&gt;.</value>
  </data>
  <data name="ImprovementProgramLabel.Text" xml:space="preserve">
    <value>Send anonymous usage information to DNN</value>
  </data>
  <data name="Retry.Text" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="SeeLogs.Text" xml:space="preserve">
    <value>View Logs</value>
  </data>
  <data name="TimerMinutes.Text" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Upgrade</value>
  </data>
  <data name="Upgrade.Text" xml:space="preserve">
    <value>Upgrade</value>
  </data>
  <data name="UpgradeDone.Text" xml:space="preserve">
    <value>Upgrade Complete</value>
  </data>
  <data name="UpgradingDatabase.Text" xml:space="preserve">
    <value>Upgrading Database</value>
  </data>
  <data name="Username.Help" xml:space="preserve">
    <value>The username for the Super User account.</value>
  </data>
  <data name="Username.Text" xml:space="preserve">
    <value>Host (SuperUser) Username:</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Upgrade - Version {0}</value>
  </data>
  <data name="ViewWebsite.Text" xml:space="preserve">
    <value>View Website</value>
  </data>
  <data name="VisitWebsite.Text" xml:space="preserve">
    <value>Visit Website</value>
  </data>
  <data name="UpgradeStarted.Text" xml:space="preserve">
    <value>Upgrade Started at</value>
  </data>
  <data name="AcceptTerms.Required" xml:space="preserve">
    <value>Accept the terms of the license agreement to continue.</value>
  </data>
  <data name="AcceptTerms.Text" xml:space="preserve">
    <value>I accept the terms of the &lt;a href="../Licenses/Dnn_Corp_License.pdf" target="_blank"&gt;license agreement&lt;/a&gt;</value>
  </data>
</root>