/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/* Update GetRoleGroupByName Stored Procedure */
/**********************************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetRoleGroupByName]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}GetRoleGroupByName
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetRoleGroupByName
	@PortalID		int,
	@RoleGroupName	nvarchar(50)
AS
	SELECT *
		FROM {databaseOwner}{objectQualifier}RoleGroups
		WHERE  PortalId = @PortalID 
			AND RoleGroupName = @RoleGroupName
GO


/* Update DeletePortalInfo */
/***************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DeletePortalInfo]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}DeletePortalInfo
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DeletePortalInfo
	@PortalID int

AS
	/* Delete all the Portal Modules */
	DELETE
	FROM {databaseOwner}{objectQualifier}Modules
	WHERE PortalId = @PortalID

	/* Delete all the Portal Skins */
	DELETE
	FROM {databaseOwner}{objectQualifier}Packages
	WHERE  PortalId = @PortalID

	/* Delete Portal */
	DELETE
	FROM {databaseOwner}{objectQualifier}Portals
	WHERE  PortalId = @PortalID
GO

/* Update UpdatePortalAliasOnInstall */
/*************************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdatePortalAliasOnInstall]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}UpdatePortalAliasOnInstall
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}UpdatePortalAliasOnInstall
	@PortalAlias			nvarchar(200),
	@LastModifiedByUserID	int
AS
	UPDATE {databaseOwner}{objectQualifier}PortalAlias 
		SET HTTPAlias = @PortalAlias,
			LastModifiedByUserID = @LastModifiedByUserID,
			LastModifiedOnDate = getdate()
	WHERE  HTTPAlias = '_default'
GO

/* Update GetSkinPackage */
/*************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetSkinPackage]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}GetSkinPackage
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetSkinPackage
	@PortalID   int,
	@SkinName   nvarchar(50),
	@SkinType   nvarchar(50)

AS
	SELECT *
		FROM  {databaseOwner}{objectQualifier}SkinPackages
		WHERE (PortalID = @PortalID OR @PortalID IS NULL Or PortalID IS Null)
			AND SkinName = @SkinName
			AND SkinType = @SkinType
GO

/* Update GetPackageByName */
/***************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetPackageByName]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}GetPackageByName
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetPackageByName
    @PortalID   int,
	@Name		nvarchar(128)
AS
	SELECT *
		FROM   {databaseOwner}{objectQualifier}Packages
		WHERE  [Name] = @Name 
			AND (PortalID = @PortalID OR @PortalID IS NULL Or PortalID IS Null)
GO

/* Update UpdateServerActivity */
/*******************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateServerActivity]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateServerActivity
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}UpdateServerActivity
    @ServerName			nvarchar(50),
    @IISAppName			nvarchar(200),
    @CreatedDate		datetime,
    @LastActivityDate	datetime 
AS

	DECLARE @ServerID int
	SET @ServerID = (SELECT ServerID FROM {databaseOwner}{objectQualifier}WebServers WHERE ServerName = @ServerName AND IISAppName = @IISAppName)

	IF @ServerID IS NULL
		BEGIN
			-- Insert
			INSERT INTO {databaseOwner}{objectQualifier}WebServers (
				ServerName,
				IISAppName,
				CreatedDate,
				LastActivityDate,
				[Enabled]
			)
			VALUES (
				@ServerName,
				@IISAppName,
				@CreatedDate,
				@LastActivityDate,
				0
			)
		END
	ELSE
		BEGIN
			-- Update
			UPDATE {databaseOwner}{objectQualifier}WebServers 
				SET 
					LastActivityDate = @LastActivityDate
				WHERE  ServerName = @ServerName AND IISAppName = @IISAppName
		END
GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/
