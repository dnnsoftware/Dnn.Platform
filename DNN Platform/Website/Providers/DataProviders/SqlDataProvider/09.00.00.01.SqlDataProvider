/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/* Update version number in DesktopModules */
/*******************************************/
DECLARE @version NVARCHAR(8)
SET @version = '09.00.00'

UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Authentication'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Portals'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='HostSettings'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Scheduler'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='SearchAdmin'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Security'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='SearchResults'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Extensions'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='ViewProfile'
UPDATE {databaseOwner}{objectQualifier}DesktopModules SET Version = @version WHERE ModuleName='Registration'

UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Authentication'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.HostSettings'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Portals'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Scheduler'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.SearchAdmin'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.SearchResults'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Security'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.ACTIONBUTTONSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.ACTIONSSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.BANNERSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.BREADCRUMBSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.COPYRIGHTSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.CURRENTDATESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DOTNETNUKESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DROPDOWNACTIONSSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.HELPSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.HOSTNAMESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.ICONSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LANGUAGESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LINKACTIONSSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LINKSSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LOGINSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LOGOSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.MENUSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.NAVSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.PRINTMODULESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.PRIVACYSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.SEARCHSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.SIGNINSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.TERMSSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.TITLESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.TREEVIEWSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.USERSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.VISIBILITYSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Extensions'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.TEXTSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.STYLESSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.LEFTMENUSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.JQUERYSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.CONTROLPANEL.SkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DefaultAuthentication'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.ViewProfile'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.TagsSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Registration'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.ToastSkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DNNCSSINCLUDESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DNNCSSEXCLUDESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DNNJSINCLUDESkinObject'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.DNNJSEXCLUDESkinObject'

UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.WebServer'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.Database'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.Host'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.Portals'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.Modules'
UPDATE {databaseOwner}{objectQualifier}Packages SET Version = @version WHERE Name='DotNetNuke.Dashboard.Skins'

GO

IF object_id(N'{databaseOwner}[{objectQualifier}GetFolderPermissionsByPortalAndPath]', 'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}GetFolderPermissionsByPortalAndPath]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetFolderPermissionsByPortalAndPath]
    @PortalId int,
    @FolderPath nvarchar(300)
AS
BEGIN
    SET @PortalId = IsNull(@PortalId, -1)

    SELECT *
    FROM   {databaseOwner}[{objectQualifier}vw_FolderPermissions]
    WHERE  PortalID = @PortalId AND (FolderPath = @FolderPath OR @FolderPath IS NULL)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetAllFiles]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetAllFiles]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetAllFiles]
AS
BEGIN
	SELECT   
	  FileId,  
	  PortalId,  
	  [FileName],  
	  Extension,  
	  Size,  
	  Width,  
	  Height,  
	  ContentType,  
	  FolderID,  
	  Folder,  
	  StorageLocation,  
	  IsCached,
	  UniqueId,
	  VersionGuid,
	  SHA1Hash,
	  FolderMappingID,  
	  LastModificationTime,  
	  Title,  
      Description,
	  EnablePublishPeriod,  
	  StartDate,  
	  EndDate,  
	  CreatedByUserID,  
	  CreatedOnDate,  
	  LastModifiedByUserID,  
	  LastModifiedOnDate,  
	  PublishedVersion,  
	  ContentItemID,
      HasBeenPublished
	FROM {databaseOwner}[{objectQualifier}vw_Files] 	
END
GO

/***** DNN-6221: update DoNotRedirect and DoNotRewrite settings to include API path.  *****/
/***** DNN-6221: update DoNotRedirect and DoNotRewrite settings to include API path.  *****/
UPDATE {databaseOwner}[{objectQualifier}PortalSettings]
    SET SettingValue = SettingValue + '|/API/'
    WHERE SettingName='AUM_DoNotRedirectUrlRegex' AND CHARINDEX('|/API/', SettingValue) = 0
GO

UPDATE {databaseOwner}[{objectQualifier}PortalSettings]
    SET SettingValue = SettingValue + '|/API/'
    WHERE SettingName='AUM_DoNotRewriteRegEx' AND CHARINDEX('|/API/', SettingValue) = 0
GO

UPDATE {databaseOwner}[{objectQualifier}HostSettings]
    SET SettingValue = SettingValue + '|/API/'
    WHERE SettingName='AUM_DoNotRedirectUrlRegex' AND CHARINDEX('|/API/', SettingValue) = 0
GO

UPDATE {databaseOwner}[{objectQualifier}HostSettings]
    SET SettingValue = SettingValue + '|/API/'
    WHERE SettingName='AUM_DoNotRewriteRegEx' AND CHARINDEX('|/API/', SettingValue) = 0
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/RelationshipService/AcceptFriend'
    WHERE APICall = 'DesktopModules/InternalServices/API/RelationshipService/AcceptFriend'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/RelationshipService/FollowBack'
    WHERE APICall = 'DesktopModules/InternalServices/API/RelationshipService/FollowBack'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/Journal/NotificationServices/ViewJournal'
    WHERE APICall = 'DesktopModules/Journal/API/NotificationServices/ViewJournal'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/ContentWorkflowService/Approve'
    WHERE APICall = 'DesktopModules/InternalServices/API/ContentWorkflowService/Approve'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/ContentWorkflowService/Reject'
    WHERE APICall = 'DesktopModules/InternalServices/API/ContentWorkflowService/Reject'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/NewUserNotificationService/Authorize'
    WHERE APICall = 'DesktopModules/InternalServices/API/NewUserNotificationService/Authorize'
GO

UPDATE {databaseOwner}[{objectQualifier}CoreMessaging_NotificationTypeActions]
    SET APICall = 'API/InternalServices/NewUserNotificationService/Reject'
    WHERE APICall = 'DesktopModules/InternalServices/API/NewUserNotificationService/Reject'
GO


/* Add GetTabUrls */
/******************/

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetTabUrls]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetTabUrls]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetTabUrls] 
(
	 @PortalId		int 
)
AS
	SELECT 
		tu.TabId,	
		tu.SeqNum,	
		tu.Url,	
		tu.QueryString,
		tu.HttpStatus,	
		tu.CultureCode,
		tu.IsSystem,
		tu.CreatedByUserId,
		tu.LastModifiedByUserId,
		case when parentTu.PortalAliasUsage = 1 /* parent is set to 'child pages inherit' so get parent portal alias id */
			then 
				case when Coalesce(tu.PortalAliasId, 0) < 1 /* if this page has no specific alias id, then use parent*/
					then parentTu.PortalAliasId 
					else tu.PortalAliasId 
				END /* otherwise, use this page alias id */
			else tu.PortalALiasId 
		END as PortalAliasId,

		case when Coalesce(tu.PortalAliasUsage,0) = 0 and coalesce(tu.PortalALiasId,0) < 1 /* default value and no specific alias */
			then /* check for inheritance from parent */
				case when Coalesce(parentTu.PortalALiasUsage,0) = 1 and Coalesce(parentTu.PortalAliasId, 0) > 0 /* parent specifies an alias */
					then 3 /* inherited from parent */
					else 0 
				END /* default value */
			when Coalesce(tu.PortalAliasId,0) > 0 /*specific alias for this tab */
			then 
				case when coalesce(tu.PortalALiasUsage,0) < 1 
					then 1 /* if not set, default to 'child pages inherit'*/
					else tu.PortalAliasUsage 
				END
			else 
				0 /* default - fall through value */
		END as PortalAliasUsage 
	FROM {databaseOwner}{objectQualifier}TabUrls tu
		INNER JOIN {databaseOwner}{objectQualifier}Tabs t on t.TabId = tu.TabId
		LEFT JOIN {databaseOwner}{objectQualifier}TabUrls parentTu on t.ParentId = parentTu.TabId
			AND parentTu.CultureCode = tu.CultureCode
			and parentTu.PortalAliasUsage > 0	   
	WHERE (@portalId = PortalId OR @portalId = -1)
	ORDER BY PortalId, TabOrder, tu.SeqNum


GO

IF EXISTS(SELECT SettingName FROM {databaseOwner}[{objectQualifier}HostSettings] WHERE SettingName = 'ControlPanel' AND SettingValue LIKE '%ControlBar.ascx')
BEGIN
    EXEC {databaseOwner}[{objectQualifier}UpdateHostSetting] @SettingName = N'IgnoreControlPanelWrapper',
        @SettingValue = N'Y',
        @SettingIsSecure = 0,
        @UserID = -1
END
GO
/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/

