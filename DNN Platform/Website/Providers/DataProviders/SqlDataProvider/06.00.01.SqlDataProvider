/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/* DNN-13590 - Adjust GetFileContent for performance */
/*****************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetFileContent]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetFileContent]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetFileContent]
	@FileId int
AS
BEGIN
	SELECT Content
	FROM {databaseOwner}[{objectQualifier}Files]
	WHERE FileId = @FileId
END
GO

/* DNN-13592 - Adjust GetFolderPermissionsByPortal for performance */
/*******************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetFolderPermissionsByPortal]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetFolderPermissionsByPortal]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetFolderPermissionsByPortal]
	@PortalId int
AS
BEGIN
	IF @PortalId IS NOT NULL BEGIN
		SELECT *
		FROM {databaseOwner}{objectQualifier}vw_FolderPermissions
		WHERE PortalID = @PortalID
	END
	ELSE BEGIN
		SELECT *
		FROM {databaseOwner}{objectQualifier}vw_FolderPermissions
		WHERE PortalID IS NULL
	END
END
GO

/* DNN-13815 - Adjust Dashboard_GetControls for performance */
/************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}Dashboard_GetControls]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Dashboard_GetControls]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Dashboard_GetControls] 
	@IsEnabled bit
AS
BEGIN
	IF @IsEnabled = 0 BEGIN
		SELECT *
		FROM {databaseOwner}[{objectQualifier}Dashboard_Controls]
		ORDER BY ViewOrder
	END
	ELSE BEGIN
		SELECT *
		FROM {databaseOwner}[{objectQualifier}Dashboard_Controls]
		WHERE IsEnabled = 1
		ORDER BY ViewOrder
	END
END
GO

/* DNN-13813 - Adjust AddScheduleItemSetting for performance */
/*************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}AddScheduleItemSetting]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}AddScheduleItemSetting]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}AddScheduleItemSetting]
	@ScheduleID int,
	@Name nvarchar(50),
	@Value nvarchar(256)
AS
BEGIN
	UPDATE {databaseOwner}[{objectQualifier}ScheduleItemSettings]
	SET SettingValue = @Value
	WHERE ScheduleID = @ScheduleID
	AND SettingName = @Name

	IF @@ROWCOUNT = 0 BEGIN
		INSERT INTO {databaseOwner}[{objectQualifier}ScheduleItemSettings] (ScheduleID, SettingName, Settingvalue)
		VALUES (@ScheduleID, @Name, @Value)
	END
END
GO

/* DNNPRO-17057 - Folder Provider - Folder icon changes to standard after removal of provider */
/**********************************************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DeleteFolderMapping]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}DeleteFolderMapping]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DeleteFolderMapping]
	@FolderMappingID int
AS
BEGIN
	DELETE
	FROM {databaseOwner}[{objectQualifier}FolderMappings]
	WHERE FolderMappingID = @FolderMappingID
END
GO

/* DNN-17298 - Reduce deadlock risk during execution of stored procedure DeleteSiteLog */
/**************************************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DeleteSiteLog]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}DeleteSiteLog]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DeleteSiteLog]
	@DateTime                      datetime, 
	@PortalID                      int

AS
	DELETE FROM {databaseOwner}{objectQualifier}SiteLog WITH(READPAST)
	WHERE  PortalId = @PortalID
		AND    DateTime < @DateTime
GO

/* DNN-17243 - Sorting in the schedule history grid should be ordered (last started at the top) */
/**************************************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetScheduleHistory]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetScheduleHistory]
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GetScheduleHistory @ScheduleID INT
AS 
    SELECT  S.* ,
            SH.*
    FROM    {databaseOwner}{objectQualifier}Schedule S
            INNER JOIN {databaseOwner}{objectQualifier}ScheduleHistory SH ON S.ScheduleID = SH.ScheduleID
    WHERE   S.ScheduleID = @ScheduleID
            OR @ScheduleID = -1
    ORDER BY SH.StartDate DESC
GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/
