<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdExecute.Text" xml:space="preserve">
    <value>Execute Merge</value>
  </data>
  <data name="cmdUpload.Text" xml:space="preserve">
    <value>Upload XML Merge Script</value>
  </data>
  <data name="ERROR_Merge.Text" xml:space="preserve">
    <value>The system encountered an error applying the specified configuration changes.  Please review the event log for error details.</value>
  </data>
  <data name="plScriptNote.Text" xml:space="preserve">
    <value>*NOTE:</value>
  </data>
  <data name="plScriptNoteDesc.Text" xml:space="preserve">
    <value>once uploaded, you may edit the script in the field below before executing</value>
  </data>
  <data name="plScript.Text" xml:space="preserve">
    <value>Merge Script</value>
  </data>
  <data name="cmdLoad.Text" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Configuration.Text" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Merge.Text" xml:space="preserve">
    <value>Merge Scripts</value>
  </data>
  <data name="plConfigHelp.Text" xml:space="preserve">
    <value>- Select a config file to edit -</value>
  </data>
  <data name="plConfig.Text" xml:space="preserve">
    <value>Configuration File</value>
  </data>
  <data name="SaveWarning.Text" xml:space="preserve">
    <value>Changing the web.config will cause your website to reload and may decrease site performance while the application is reloaded by the webserver.  Do you want to continue?</value>
  </data>
  <data name="ERROR_ConfigurationFormat.Text" xml:space="preserve">
    <value>Your configuration file is not a valid XML file.  Please correct the formatting issue and try again. {0}</value>
  </data>
  <data name="LoadConfigWarning.Text" xml:space="preserve">
    <value>Warning: You will lose your current changes if you load a new config file.</value>
  </data>
  <data name="MergeConfirm.Text" xml:space="preserve">
    <value>Are you sure you want to merge these changes to this config file?</value>
  </data>
  <data name="SaveConfirm.Text" xml:space="preserve">
    <value>Are you sure you want to save changes this config file?</value>
  </data>
  <data name="SelectConfig.Text" xml:space="preserve">
    <value>Select a config file...</value>
  </data>
  <data name="Success.Text" xml:space="preserve">
    <value>The changes were successfully made.</value>
  </data>
  <data name="cmdSave.Text" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="fileLabel.Help" xml:space="preserve">
    <value>You can modify the file before making changes.</value>
  </data>
  <data name="fileLabel.Text" xml:space="preserve">
    <value>File:</value>
  </data>
  <data name="scriptLabel.Help" xml:space="preserve">
    <value>You can edit the merge script before executing it.</value>
  </data>
  <data name="scriptLabel.Text" xml:space="preserve">
    <value>Script:</value>
  </data>
  <data name="ControlTitle_.Text" xml:space="preserve">
    <value>Configuration Manager</value>
  </data>
  <data name="nav_ConfigConsole.Text" xml:space="preserve">
    <value>Config Manager</value>
  </data>
  <data name="ConfigConsole.Text" xml:space="preserve">
    <value>Configuration Manager</value>
  </data>
  <data name="SaveButton.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CancelButton.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ConfigFilesTab.Text" xml:space="preserve">
    <value>Config Files</value>
  </data>
  <data name="MergeScriptsTab.Text" xml:space="preserve">
    <value>Merge Scripts</value>
  </data>
</root>