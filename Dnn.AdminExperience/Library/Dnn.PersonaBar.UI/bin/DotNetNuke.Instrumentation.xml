<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetNuke.Instrumentation</name>
    </assembly>
    <members>
        <member name="M:DotNetNuke.Instrumentation.DnnLog.MethodEntry">
            <summary>
              Standard method to use on method entry
            </summary>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLog.MethodExit(System.Object)">
            <summary>
              Standard method to use on method exit
            </summary>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLog.MethodExit">
            <summary>
              Standard method to use on method exit
            </summary>
        </member>
        <member name="T:DotNetNuke.Instrumentation.DnnLogger">
            <summary>
            Please use LoggerSource.Instance as a more unit testable way to create loggers
            </summary>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.ReloadLevels(log4net.Repository.ILoggerRepository)">
            <summary>
              Virtual method called when the configuration of the repository changes
            </summary>
            <param name = "repository">the repository holding the levels</param>
            <remarks>
              <para>
                Virtual method called when the configuration of the repository changes
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Debug(System.Object)">
            <summary>
              Logs a message object with the <c>DEBUG</c> level.
            </summary>
            <param name = "message">The message object to log.</param>
            <remarks>
              <para>
                This method first checks if this logger is <c>DEBUG</c>
                enabled by comparing the level of this logger with the 
                <c>DEBUG</c> level. If this logger is
                <c>DEBUG</c> enabled, then it converts the message object
                (passed as parameter) to a string by invoking the appropriate
                <see cref = "T:log4net.ObjectRenderer.IObjectRenderer" />. It then 
                proceeds to call all the registered appenders in this logger 
                and also higher in the hierarchy depending on the value of the 
                additivity flag.
              </para>
              <para>
                <b>WARNING</b> Note that passing an <see cref = "T:System.Exception" /> 
                to this method will print the name of the <see cref = "T:System.Exception" /> 
                but no stack trace. To print a stack trace use the 
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object,System.Exception)" /> form instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.DebugFormat(System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>DEBUG</c> level.
            </summary>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                The string is formatted using the <see cref = "P:System.Globalization.CultureInfo.InvariantCulture" />
                format provider. To specify a localized provider use the
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.DebugFormat(System.IFormatProvider,System.String,System.Object[])" /> method.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Debug(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.DebugFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>DEBUG</c> level.
            </summary>
            <param name = "provider">An <see cref = "T:System.IFormatProvider" /> that supplies culture-specific formatting information</param>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Debug(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Info(System.Object)">
            <summary>
              Logs a message object with the <c>INFO</c> level.
            </summary>
            <param name = "message">The message object to log.</param>
            <remarks>
              <para>
                This method first checks if this logger is <c>INFO</c>
                enabled by comparing the level of this logger with the 
                <c>INFO</c> level. If this logger is
                <c>INFO</c> enabled, then it converts the message object
                (passed as parameter) to a string by invoking the appropriate
                <see cref = "T:log4net.ObjectRenderer.IObjectRenderer" />. It then 
                proceeds to call all the registered appenders in this logger 
                and also higher in the hierarchy depending on the value of 
                the additivity flag.
              </para>
              <para>
                <b>WARNING</b> Note that passing an <see cref = "T:System.Exception" /> 
                to this method will print the name of the <see cref = "T:System.Exception" /> 
                but no stack trace. To print a stack trace use the 
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object,System.Exception)" /> form instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.InfoFormat(System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>INFO</c> level.
            </summary>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                The string is formatted using the <see cref = "P:System.Globalization.CultureInfo.InvariantCulture" />
                format provider. To specify a localized provider use the
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.InfoFormat(System.IFormatProvider,System.String,System.Object[])" /> method.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Info(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.InfoFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>INFO</c> level.
            </summary>
            <param name = "provider">An <see cref = "T:System.IFormatProvider" /> that supplies culture-specific formatting information</param>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Info(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object)">
            <summary>
              Logs a message object with the <c>WARN</c> level.
            </summary>
            <param name = "message">the message object to log</param>
            <remarks>
              <para>
                This method first checks if this logger is <c>WARN</c>
                enabled by comparing the level of this logger with the 
                <c>WARN</c> level. If this logger is
                <c>WARN</c> enabled, then it converts the message object
                (passed as parameter) to a string by invoking the appropriate
                <see cref = "T:log4net.ObjectRenderer.IObjectRenderer" />. It then 
                proceeds to call all the registered appenders in this logger and 
                also higher in the hierarchy depending on the value of the 
                additivity flag.
              </para>
              <para>
                <b>WARNING</b> Note that passing an <see cref = "T:System.Exception" /> to this
                method will print the name of the <see cref = "T:System.Exception" /> but no
                stack trace. To print a stack trace use the 
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object,System.Exception)" /> form instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object,System.Exception)">
            <summary>
              Logs a message object with the <c>WARN</c> level
            </summary>
            <param name = "message">The message object to log.</param>
            <param name = "exception">The exception to log, including its stack trace.</param>
            <remarks>
              <para>
                Logs a message object with the <c>WARN</c> level including
                the stack trace of the <see cref = "T:System.Exception" /> <paramref name = "exception" /> 
                passed as a parameter.
              </para>
              <para>
                See the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object)" /> form for more detailed information.
              </para>
            </remarks>
            <seealso cref = "M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object)" />
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.WarnFormat(System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>WARN</c> level.
            </summary>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                The string is formatted using the <see cref = "P:System.Globalization.CultureInfo.InvariantCulture" />
                format provider. To specify a localized provider use the
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.WarnFormat(System.IFormatProvider,System.String,System.Object[])" /> method.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.WarnFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>WARN</c> level.
            </summary>
            <param name = "provider">An <see cref = "T:System.IFormatProvider" /> that supplies culture-specific formatting information</param>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Warn(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object)">
            <summary>
              Logs a message object with the <c>ERROR</c> level.
            </summary>
            <param name = "message">The message object to log.</param>
            <remarks>
              <para>
                This method first checks if this logger is <c>ERROR</c>
                enabled by comparing the level of this logger with the 
                <c>ERROR</c> level. If this logger is
                <c>ERROR</c> enabled, then it converts the message object
                (passed as parameter) to a string by invoking the appropriate
                <see cref = "T:log4net.ObjectRenderer.IObjectRenderer" />. It then 
                proceeds to call all the registered appenders in this logger and 
                also higher in the hierarchy depending on the value of the 
                additivity flag.
              </para>
              <para>
                <b>WARNING</b> Note that passing an <see cref = "T:System.Exception" /> to this
                method will print the name of the <see cref = "T:System.Exception" /> but no
                stack trace. To print a stack trace use the 
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object,System.Exception)" /> form instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object,System.Exception)">
            <summary>
              Logs a message object with the <c>ERROR</c> level
            </summary>
            <param name = "message">The message object to log.</param>
            <param name = "exception">The exception to log, including its stack trace.</param>
            <remarks>
              <para>
                Logs a message object with the <c>ERROR</c> level including
                the stack trace of the <see cref = "T:System.Exception" /> <paramref name = "exception" /> 
                passed as a parameter.
              </para>
              <para>
                See the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object)" /> form for more detailed information.
              </para>
            </remarks>
            <seealso cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object)" />
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.ErrorFormat(System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>ERROR</c> level.
            </summary>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                The string is formatted using the <see cref = "P:System.Globalization.CultureInfo.InvariantCulture" />
                format provider. To specify a localized provider use the
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.ErrorFormat(System.IFormatProvider,System.String,System.Object[])" /> method.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.ErrorFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>ERROR</c> level.
            </summary>
            <param name = "provider">An <see cref = "T:System.IFormatProvider" /> that supplies culture-specific formatting information</param>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Error(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object)">
            <summary>
              Logs a message object with the <c>FATAL</c> level.
            </summary>
            <param name = "message">The message object to log.</param>
            <remarks>
              <para>
                This method first checks if this logger is <c>FATAL</c>
                enabled by comparing the level of this logger with the 
                <c>FATAL</c> level. If this logger is
                <c>FATAL</c> enabled, then it converts the message object
                (passed as parameter) to a string by invoking the appropriate
                <see cref = "T:log4net.ObjectRenderer.IObjectRenderer" />. It then 
                proceeds to call all the registered appenders in this logger and 
                also higher in the hierarchy depending on the value of the 
                additivity flag.
              </para>
              <para>
                <b>WARNING</b> Note that passing an <see cref = "T:System.Exception" /> to this
                method will print the name of the <see cref = "T:System.Exception" /> but no
                stack trace. To print a stack trace use the 
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object,System.Exception)" /> form instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object,System.Exception)">
            <summary>
              Logs a message object with the <c>FATAL</c> level
            </summary>
            <param name = "message">The message object to log.</param>
            <param name = "exception">The exception to log, including its stack trace.</param>
            <remarks>
              <para>
                Logs a message object with the <c>FATAL</c> level including
                the stack trace of the <see cref = "T:System.Exception" /> <paramref name = "exception" /> 
                passed as a parameter.
              </para>
              <para>
                See the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object)" /> form for more detailed information.
              </para>
            </remarks>
            <seealso cref = "M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object)" />
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.FatalFormat(System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>FATAL</c> level.
            </summary>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                The string is formatted using the <see cref = "P:System.Globalization.CultureInfo.InvariantCulture" />
                format provider. To specify a localized provider use the
                <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.FatalFormat(System.IFormatProvider,System.String,System.Object[])" /> method.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
        <member name="M:DotNetNuke.Instrumentation.DnnLogger.FatalFormat(System.IFormatProvider,System.String,System.Object[])">
            <summary>
              Logs a formatted message string with the <c>FATAL</c> level.
            </summary>
            <param name = "provider">An <see cref = "T:System.IFormatProvider" /> that supplies culture-specific formatting information</param>
            <param name = "format">A String containing zero or more format items</param>
            <param name = "args">An Object array containing zero or more objects to format</param>
            <remarks>
              <para>
                The message is formatted using the <see cref = "M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" /> method. See
                <c>String.Format</c> for details of the syntax of the format string and the behavior
                of the formatting.
              </para>
              <para>
                This method does not take an <see cref = "T:System.Exception" /> object to include in the
                log event. To pass an <see cref = "T:System.Exception" /> use one of the <see cref = "M:DotNetNuke.Instrumentation.DnnLogger.Fatal(System.Object)" />
                methods instead.
              </para>
            </remarks>
        </member>
    </members>
</doc>
