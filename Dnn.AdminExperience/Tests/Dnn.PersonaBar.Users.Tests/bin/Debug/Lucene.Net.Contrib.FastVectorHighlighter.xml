<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Lucene.Net.Contrib.FastVectorHighlighter</name>
    </assembly>
    <members>
        <member name="T:Lucene.Net.Search.Vectorhighlight.FragmentsBuilder">
            <summary>
            FragmentsBuilder is an interface for fragments (snippets) builder classes.
            A FragmentsBuilder class can be plugged in to Highlighter.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FragmentsBuilder.CreateFragment(Lucene.Net.Index.IndexReader,System.Int32,System.String,Lucene.Net.Search.Vectorhighlight.FieldFragList)">
            <summary>
            create a fragment.
            </summary>
            <param name="reader">IndexReader of the index</param>
            <param name="docId">document id to be highlighted</param>
            <param name="fieldName">field of the document to be highlighted</param>
            <param name="fieldFragList">FieldFragList object</param>
            <returns>a created fragment or null when no fragment created</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FragmentsBuilder.CreateFragments(Lucene.Net.Index.IndexReader,System.Int32,System.String,Lucene.Net.Search.Vectorhighlight.FieldFragList,System.Int32)">
            <summary>
            create multiple fragments.
            </summary>
            <param name="reader">IndexReader of the index</param>
            <param name="docId">document id to be highlighted</param>
            <param name="fieldName">field of the document to be highlighted</param>
            <param name="fieldFragList">ieldFragList object</param>
            <param name="maxNumFragments">maximum number of fragments</param>
            <returns>created fragments or null when no fragments created. Size of the array can be less than maxNumFragments</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.#ctor">
            <summary>
            the default constructor.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.#ctor(System.Boolean,System.Boolean)">
            <summary>
            a constructor. Using SimpleFragListBuilder and ScoreOrderFragmentsBuilder. 
            </summary>
            <param name="phraseHighlight">true or false for phrase highlighting</param>
            <param name="fieldMatch">true of false for field matching</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.#ctor(System.Boolean,System.Boolean,Lucene.Net.Search.Vectorhighlight.FragListBuilder,Lucene.Net.Search.Vectorhighlight.FragmentsBuilder)">
            <summary>
            a constructor. A FragListBuilder and a FragmentsBuilder can be specified (plugins).
            </summary>
            <param name="phraseHighlight">true of false for phrase highlighting</param>
            <param name="fieldMatch">true of false for field matching</param>
            <param name="fragListBuilder">an instance of FragListBuilder</param>
            <param name="fragmentsBuilder">an instance of FragmentsBuilder</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.GetFieldQuery(Lucene.Net.Search.Query)">
            <summary>
            create a FieldQuery object. 
            </summary>
            <param name="query">a query</param>
            <returns>the created FieldQuery object</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.GetBestFragment(Lucene.Net.Search.Vectorhighlight.FieldQuery,Lucene.Net.Index.IndexReader,System.Int32,System.String,System.Int32)">
            <summary>
            return the best fragment.
            </summary>
            <param name="fieldQuery">FieldQuery object</param>
            <param name="reader">IndexReader of the index</param>
            <param name="docId">document id to be highlighted</param>
            <param name="fieldName">field of the document to be highlighted</param>
            <param name="fragCharSize">the length (number of chars) of a fragment</param>
            <returns>the best fragment (snippet) string</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.GetBestFragments(Lucene.Net.Search.Vectorhighlight.FieldQuery,Lucene.Net.Index.IndexReader,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            return the best fragments.
            </summary>
            <param name="fieldQuery">FieldQuery object</param>
            <param name="reader">IndexReader of the index</param>
            <param name="docId">document id to be highlighted</param>
            <param name="fieldName">field of the document to be highlighted</param>
            <param name="fragCharSize">the length (number of chars) of a fragment</param>
            <param name="maxNumFragments">maximum number of fragments</param>
            <returns>created fragments or null when no fragments created. Size of the array can be less than maxNumFragments</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.IsPhraseHighlight">
            <summary>
            return whether phraseHighlight or not.
            </summary>
            <returns>return whether phraseHighlight or not.</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.IsFieldMatch">
            <summary>
            return whether fieldMatch or not.
            </summary>
            <returns>return whether fieldMatch or not.</returns>
        </member>
        <member name="P:Lucene.Net.Search.Vectorhighlight.FastVectorHighlighter.PhraseLimit">
            <summary>
            The maximum number of phrases to analyze when searching for the highest-scoring phrase.
            The default is 5000.  To ensure that all phrases are analyzed, use a negative number or Integer.MAX_VALUE.
            </summary>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.FieldFragList">
            <summary>
             FieldFragList has a list of "frag info" that is used by FragmentsBuilder class
             to create fragments (snippets).
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldFragList.#ctor(System.Int32)">
            <summary>
            a constructor.
            </summary>
            <param name="fragCharSize">the length (number of chars) of a fragment</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldFragList.Add(System.Int32,System.Int32,System.Collections.Generic.List{Lucene.Net.Search.Vectorhighlight.FieldPhraseList.WeightedPhraseInfo})">
            <summary>
            convert the list of WeightedPhraseInfo to WeightedFragInfo, then add it to the fragInfos 
            </summary>
            <param name="startOffset">start offset of the fragment</param>
            <param name="endOffset">end offset of the fragment</param>
            <param name="phraseInfoList">list of WeightedPhraseInfo objects</param>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.FieldPhraseList">
            <summary>
            FieldPhraseList has a list of WeightedPhraseInfo that is used by FragListBuilder
            to create a FieldFragList object.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldPhraseList.#ctor(Lucene.Net.Search.Vectorhighlight.FieldTermStack,Lucene.Net.Search.Vectorhighlight.FieldQuery)">
            <summary>
            create a FieldPhraseList that has no limit on the number of phrases to analyze
            <param name="fieldQuery">FieldTermStack object</param>
            <param name="fieldTermStack">FieldQuery object</param>
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldPhraseList.#ctor(Lucene.Net.Search.Vectorhighlight.FieldTermStack,Lucene.Net.Search.Vectorhighlight.FieldQuery,System.Int32)">
            <summary>
            a constructor. 
            </summary>
            <param name="fieldTermStack">FieldTermStack object</param>
            <param name="fieldQuery">FieldQuery object</param>
            <param name="phraseLimit">maximum size of phraseList</param>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.FieldTermStack">
            <summary>
            <c>FieldTermStack</c> is a stack that keeps query terms in the specified field
            of the document to be highlighted.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldTermStack.#ctor(Lucene.Net.Index.IndexReader,System.Int32,System.String,Lucene.Net.Search.Vectorhighlight.FieldQuery)">
            <summary>
            a constructor. 
            </summary>
            <param name="reader">IndexReader of the index</param>
            <param name="docId">document id to be highlighted</param>
            <param name="fieldName">field of the document to be highlighted</param>
            <param name="fieldQuery">FieldQuery object</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldTermStack.Pop">
            <summary>
            
            </summary>
            <returns>the top TermInfo object of the stack</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldTermStack.Push(Lucene.Net.Search.Vectorhighlight.FieldTermStack.TermInfo)">
            <summary>
            
            </summary>
            <param name="termInfo">the TermInfo object to be put on the top of the stack</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FieldTermStack.IsEmpty">
            <summary>
            to know whether the stack is empty 
            </summary>
            <returns>true if the stack is empty, false if not</returns>
        </member>
        <member name="P:Lucene.Net.Search.Vectorhighlight.FieldTermStack.FieldName">
            <summary>
            
            </summary>
            <value> field name </value>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.FragListBuilder">
            <summary>
            
            FragListBuilder is an interface for FieldFragList builder classes.
            A FragListBuilder class can be plugged in to Highlighter.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.FragListBuilder.CreateFieldFragList(Lucene.Net.Search.Vectorhighlight.FieldPhraseList,System.Int32)">
            <summary>
            create a FieldFragList. 
            </summary>
            <param name="fieldPhraseList">FieldPhraseList object</param>
            <param name="fragCharSize">the length (number of chars) of a fragment</param>
            <returns>the created FieldFragList object</returns>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.ScoreOrderFragmentsBuilder.#ctor">
            <summary>
            a constructor.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.ScoreOrderFragmentsBuilder.#ctor(System.String[],System.String[])">
            <summary>
            a constructor.
            </summary>
            <param name="preTags">array of pre-tags for markup terms</param>
            <param name="postTags">array of post-tags for markup terms</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.ScoreOrderFragmentsBuilder.GetWeightedFragInfoList(System.Collections.Generic.List{Lucene.Net.Search.Vectorhighlight.FieldFragList.WeightedFragInfo})">
            <summary>
            Sort by score the list of WeightedFragInfo
            </summary>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.SimpleFragListBuilder">
            <summary>
            A simple implementation of FragListBuilder.
            </summary>
        </member>
        <member name="T:Lucene.Net.Search.Vectorhighlight.SimpleFragmentsBuilder">
            <summary>
            A simple implementation of FragmentsBuilder.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.SimpleFragmentsBuilder.#ctor">
            <summary>
            a constructor.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.SimpleFragmentsBuilder.#ctor(System.String[],System.String[])">
            <summary>
            a constructor.
            </summary>
            <param name="preTags">array of pre-tags for markup terms</param>
            <param name="postTags">array of post-tags for markup terms</param>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.SimpleFragmentsBuilder.GetWeightedFragInfoList(System.Collections.Generic.List{Lucene.Net.Search.Vectorhighlight.FieldFragList.WeightedFragInfo})">
            <summary>
            do nothing. return the source list.
            </summary>
        </member>
        <member name="M:Lucene.Net.Search.Vectorhighlight.StringUtils.TermStringMatch(System.String,System.String)">
            <summary>
            Check if the termToMatch is a match for the term, considering the use of a wildcards.
            </summary>
        </member>
    </members>
</doc>
