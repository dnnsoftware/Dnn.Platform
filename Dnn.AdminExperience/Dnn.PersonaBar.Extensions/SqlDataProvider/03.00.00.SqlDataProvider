/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/


IF EXISTS (SELECT * FROM sys.procedures WHERE object_id = object_id(N'{databaseOwner}[{objectQualifier}Personabar_GetUsersBySearchTerm]'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}Personabar_GetUsersBySearchTerm]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}Personabar_GetUsersBySearchTerm]
	@PortalId         Int,           --  Null|-1: any Site
	@SortColumn       nVarChar(32),  --  Field Name, supported values see below. Null|'': sort by search priority
	@SortAscending    Bit = 1,       --  Sort Direction
	@PageIndex        Int = 0,
	@PageSize         Int = 10,
	@SearchTerm       nVarChar(99),  --  Null|'': all items, append "%" to perform a left search
	@authorized       Bit,           --  Null: all, 0: unauthorized  only, 1: authorized only
	@isDeleted        Bit,           --  Null: all, 0: undeleted     only, 1: deleted    only
	@Superusers       Bit,           --  Null: all, 0: portal users  only, 1: superusers only
	@HasAgreedToTerms Bit,           --  Null: all, 0: non agreed only, 1: agreed only
	@RequestsRemoval  Bit         --  Null: all, 0: not requested only, 1: requested only
AS
BEGIN
	IF @SearchTerm = N''   SET @SearchTerm = Null; -- Normalize parameter
	IF @SortColumn = N''   SET @SortColumn = N'Priority';
	IF @SortColumn Is Null SET @SortColumn = N'Priority';
	
	IF (@Superusers = 1)
	BEGIN
	  IF (@SearchTerm Is Null) -- search superusers
	  BEGIN
		SELECT U.UserID, U.Username, U.DisplayName, U.Email, U.CreatedOnDate, U.IsDeleted, Authorized, IsSuperUser, 1 AS HasAgreedToTerms, 0 AS RequestsRemoval, TotalCount
		FROM (SELECT UserID, Username, DisplayName, Email, CreatedOnDate, IsDeleted, 1 AS Authorized, IsSuperUser, Count(*) OVER () AS TotalCount,
				 ROW_NUMBER() OVER (ORDER BY CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 1 THEN UserID               END ASC, 
											 CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 0 THEN UserID               END DESC,
											 CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 1 THEN Email                END ASC, 
											 CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 0 THEN Email                END DESC,
											 CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 1 THEN DisplayName          END ASC, 
											 CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 0 THEN DisplayName          END DESC,
											 CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 1 THEN UserName			 END ASC,
											 CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 0 THEN UserName			 END DESC,
											 CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 1 THEN UserName			 END ASC, -- Priority not supported
											 CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 0 THEN UserName			 END DESC,-- Priority not supported
											 CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 1 THEN LastModifiedOnDate   END ASC, 
											 CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 0 THEN LastModifiedOnDate   END DESC) AS RowNumber 
		   FROM  {databaseOwner}[{objectQualifier}Users]
		   WHERE (IsSuperUser = 1)
		     AND (@isDeleted  Is Null OR IsDeleted = @isDeleted)) U
		WHERE RowNumber BETWEEN (@PageIndex * @PageSize + 1) AND ((@PageIndex + 1) * @PageSize)
		ORDER BY RowNumber
		OPTION (RECOMPILE);
	  END
	  ELSE -- search superusers using term
	  BEGIN
		SELECT UserID, Username, DisplayName, Email, CreatedOnDate, IsDeleted, 1 AS Authorized, IsSuperUser, 1 AS HasAgreedToTerms, 0 AS RequestsRemoval, TotalCount
		 FROM  (SELECT UserID, 
		               Username, 
					   DisplayName,
					   Email,
					   CreatedOnDate,
					   IsDeleted,
					   IsSuperUser,
		               Sum(1) N, 
					   Count(*) OVER ()   AS TotalCount,
		               ROW_NUMBER() OVER (ORDER BY CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 1 THEN UserID               END ASC, 
												   CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 0 THEN UserID               END DESC,
												   CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 1 THEN Email                END ASC, 
												   CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 0 THEN Email                END DESC,
												   CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 1 THEN DisplayName          END ASC, 
												   CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 0 THEN DisplayName          END DESC,
												   CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 1 THEN UserName			   END ASC,
												   CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 0 THEN UserName			   END DESC,
												   CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 1 THEN Sum(1)			   END ASC,
												   CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 0 THEN Sum(1)			   END DESC,
												   CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 1 THEN LastModifiedOnDate   END ASC, 
												   CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 0 THEN LastModifiedOnDate   END DESC) AS RowNumber 
				  FROM (SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser
						FROM  {databaseOwner}[{objectQualifier}Users] 
						WHERE (UserName    Like @searchTerm)
						  AND (IsSuperUser = 1)
						  AND (@isDeleted  Is Null OR IsDeleted = @isDeleted) 
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (DisplayName Like @searchTerm)
						  AND (IsSuperUser = 1)
						  AND (@isDeleted  Is Null OR IsDeleted = @isDeleted) 
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (Email       Like @searchTerm)
						  AND (IsSuperUser = 1)
						  AND (@isDeleted  Is Null OR IsDeleted = @isDeleted) 
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (FirstName   Like @searchTerm)
						  AND FirstName Is Not Null AND FirstName != N'' 
						  AND (IsSuperUser = 1)
						  AND (@isDeleted  Is Null OR IsDeleted = @isDeleted) 
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (LastName    Like @searchTerm)
						  AND LastName  Is Not Null AND LastName  != N'' 
						  AND (IsSuperUser = 1)
						  AND (@isDeleted  Is Null OR IsDeleted = @isDeleted)) S 
					 GROUP BY UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperUser) AS Sel
		WHERE Sel.RowNumber BETWEEN (@PageIndex * @PageSize + 1) AND ((@PageIndex + 1) * @PageSize)
		ORDER BY Sel.RowNumber
		OPTION (RECOMPILE);
	  END
	END
	ELSE IF (@SearchTerm Is Null)
	BEGIN -- display all portal users:
			DECLARE @TotalCount Int;
			SELECT @TotalCount = Count(1) 
			 FROM  {databaseOwner}[{objectQualifier}Users]       U
			 JOIN  {databaseOwner}[{objectQualifier}UserPortals] P ON U.UserID = P.UserID
			 WHERE P.PortalID = @PortalID
			   AND (@Superusers Is Null OR IsSuperUser = 0)
			   AND (@isDeleted  Is Null OR P.IsDeleted  = @isDeleted )
			   AND (@authorized Is Null OR P.Authorised = @authorized)
				 AND (@HasAgreedToTerms Is Null OR P.HasAgreedToTerms = @HasAgreedToTerms)
				 AND (@RequestsRemoval Is Null OR P.RequestsRemoval = @RequestsRemoval);
			   
			SELECT UserID, Username, DisplayName, Email, CreatedOnDate, IsDeleted, Authorised AS Authorized, IsSuperUser, HasAgreedToTerms, RequestsRemoval, @TotalCount AS TotalCount
			FROM
		     (SELECT U.UserID, U.Username, U.DisplayName, U.Email, U.CreatedOnDate, P.IsDeleted, P.Authorised, U.IsSuperUser, P.HasAgreedToTerms, P.RequestsRemoval,
			         ROW_NUMBER() OVER (ORDER BY CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 1 THEN U.UserID             END ASC, 
												 CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 0 THEN U.UserID             END DESC,
												 CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 1 THEN Email                END ASC, 
												 CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 0 THEN Email                END DESC,
												 CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 1 THEN DisplayName          END ASC, 
												 CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 0 THEN DisplayName          END DESC,
												 CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 1 THEN UserName			 END ASC,
												 CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 0 THEN UserName			 END DESC,
												 CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 1 THEN UserName			 END ASC, -- Priority not supported
												 CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 0 THEN UserName			 END DESC,-- Priority not supported
												 CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 1 THEN U.LastModifiedOnDate END ASC, 
												 CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 0 THEN U.LastModifiedOnDate END DESC) AS RowNumber 
			   FROM  {databaseOwner}[{objectQualifier}Users]       U
			   JOIN  {databaseOwner}[{objectQualifier}UserPortals] P ON U.UserID = P.UserID
			   WHERE P.PortalID = @PortalID
			     AND (@Superusers Is Null OR U.IsSuperuser = 0)
			     AND (@isDeleted  Is Null OR P.IsDeleted  = @isDeleted)
			     AND (@authorized Is Null OR P.Authorised = @authorized)
					 AND (@HasAgreedToTerms Is Null OR P.HasAgreedToTerms = @HasAgreedToTerms)
				   AND (@RequestsRemoval Is Null OR P.RequestsRemoval = @RequestsRemoval)) Sel
			 WHERE Sel.RowNumber BETWEEN (@PageIndex * @PageSize + 1) AND ((@PageIndex + 1) * @PageSize)
			 ORDER BY Sel.RowNumber
			 OPTION (RECOMPILE);
	END
	ELSE -- search portal users:
	BEGIN
		SELECT UserID, Username, DisplayName, Email, CreatedOnDate, IsDeleted, Authorised AS Authorized, IsSuperUser, HasAgreedToTerms, RequestsRemoval, TotalCount
		FROM  ( SELECT S.UserID, 
		               Username, 
					   DisplayName,
					   Email,
					   CreatedOnDate,
					   IsDeleted,
					   Authorised,
					   IsSuperUser,
						 P.HasAgreedToTerms,
						 P.RequestsRemoval,
		               Sum(1) N, 
					   Count(*) OVER ()   AS TotalCount,
		               ROW_NUMBER() OVER (ORDER BY CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 1 THEN S.UserID             END ASC, 
												   CASE WHEN @SortColumn = N'Joined'      AND @SortAscending = 0 THEN S.UserID             END DESC,
												   CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 1 THEN Email                END ASC, 
												   CASE WHEN @SortColumn = N'Email'       AND @SortAscending = 0 THEN Email                END DESC,
												   CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 1 THEN DisplayName          END ASC, 
												   CASE WHEN @SortColumn = N'DisplayName' AND @SortAscending = 0 THEN DisplayName          END DESC,
												   CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 1 THEN UserName			   END ASC,
												   CASE WHEN @SortColumn = N'UserName'    AND @SortAscending = 0 THEN UserName			   END DESC,
												   CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 1 THEN Sum(1)			   END ASC,
												   CASE WHEN @SortColumn = N'Priority'    AND @SortAscending = 0 THEN Sum(1)			   END DESC,
												   CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 1 THEN LastModifiedOnDate   END ASC, 
												   CASE WHEN @SortColumn = N'Modified'    AND @SortAscending = 0 THEN LastModifiedOnDate   END DESC) AS RowNumber 
				  FROM (SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsSuperuser 
						FROM  {databaseOwner}[{objectQualifier}Users] 
						WHERE (UserName    Like @searchTerm)
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsSuperuser 
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (DisplayName Like @searchTerm)
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsSuperuser 
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (Email       Like @searchTerm)
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsSuperuser 
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (FirstName   Like @searchTerm)
						  AND FirstName Is Not Null AND FirstName != N'' 
					   UNION SELECT UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsSuperuser 
						FROM  {databaseOwner}[{objectQualifier}Users]
						WHERE (LastName    Like @searchTerm)
						  AND LastName  Is Not Null AND LastName  != N'') S
                   JOIN	 {databaseOwner}[{objectQualifier}UserPortals] P ON S.UserID = P.UserID		
                   WHERE P.PortalID = @PortalID
					 AND (@Superusers Is Null OR S.IsSuperuser = 0)
					 AND (@isDeleted  Is Null OR P.IsDeleted  = @isDeleted)
			         AND (@authorized Is Null OR P.Authorised = @authorized)
							 AND (@HasAgreedToTerms Is Null OR P.HasAgreedToTerms = @HasAgreedToTerms)
				       AND (@RequestsRemoval Is Null OR P.RequestsRemoval = @RequestsRemoval)
				   GROUP BY S.UserID, Username, DisplayName, Email, CreatedOnDate, LastModifiedOnDate, IsDeleted, IsSuperuser, Authorised, HasAgreedToTerms, RequestsRemoval) AS Sel
		WHERE Sel.RowNumber BETWEEN (@PageIndex * @PageSize + 1) AND ((@PageIndex + 1) * @PageSize)
		ORDER BY Sel.RowNumber
		OPTION (RECOMPILE);
	END
END; --Procedure
GO

