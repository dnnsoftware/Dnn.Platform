{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"window.dnn.nodeModules.React\"","webpack:///./src/localization.js","webpack:///./src/constants/actionTypes/pagination.js","webpack:///./src/constants/actionTypes/visiblePanel.js","webpack:///./src/constants/actionTypes/webTab.js","webpack:///./src/constants/actionTypes/server.js","webpack:///./src/constants/actionTypes/applicationTab.js","webpack:///./src/constants/actionTypes/databaseTab.js","webpack:///./src/constants/actionTypes/smtpServerTab.js","webpack:///./src/constants/actionTypes/logsTab.js","webpack:///./src/constants/actionTypes/performanceTab.js","webpack:///./src/constants/actionTypes/index.js","webpack:///external \"window.dnn.nodeModules.CommonComponents\"","webpack:///./src/utils.js","webpack:///external \"window.dnn.nodeModules.Redux\"","webpack:///external \"window.dnn.nodeModules.ReactRedux\"","webpack:///D:/DNN/node_modules/prop-types/index.js","webpack:///./src/globals/application.js","webpack:///D:/DNN/node_modules/css-loader/dist/runtime/api.js","webpack:///D:/DNN/node_modules/style-loader/lib/addStyles.js","webpack:///./src/components/Tabs/tabs.less?64f5","webpack:///external \"window.dnn.nodeModules.Es6Promise\"","webpack:///external \"window.dnn.nodeModules.ReactDOM\"","webpack:///external \"window.dnn.nodeModules.ReduxThunk\"","webpack:///./src/containers/Root.js","webpack:///external \"window.dnn.nodeModules.ReactCustomScrollBars\"","webpack:///./src/less/style.less?69e2","webpack:///./src/less/style.less","webpack:///D:/DNN/node_modules/style-loader/lib/urls.js","webpack:///D:/DNN/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///D:/DNN/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./src/components/Body/style.less?f367","webpack:///./src/components/Body/style.less","webpack:///./src/components/Tabs/tabs.less","webpack:///./src/components/common/style.less?f1e4","webpack:///./src/components/common/style.less","webpack:///./src/actions/pagination.js","webpack:///./src/services/serviceFramework.js","webpack:///./src/services/webTabService.js","webpack:///./src/actions/webTab.js","webpack:///./src/services/serverService.js","webpack:///./src/actions/server.js","webpack:///./src/services/applicationTabService.js","webpack:///./src/actions/applicationTab.js","webpack:///./src/services/databaseTabService.js","webpack:///./src/actions/databaseTab.js","webpack:///./src/services/logsTabService.js","webpack:///./src/actions/logsTab.js","webpack:///./src/components/common/InfoBlock.jsx","webpack:///./src/components/Tabs/Application.jsx","webpack:///./src/components/Tabs/Web.jsx","webpack:///./src/components/Tabs/Database/BackupGrid.jsx","webpack:///./src/components/Tabs/Database/FilesGrid.jsx","webpack:///./src/components/Tabs/Database/Database.jsx","webpack:///./src/components/common/GlobalIcon.jsx","webpack:///./src/components/common/RadioButtonBlock.jsx","webpack:///./src/components/common/EditBlock.jsx","webpack:///./src/components/common/SwitchBlock.jsx","webpack:///./src/services/smtpServerService.js","webpack:///./src/actions/smtpServerTab.js","webpack:///./src/components/Tabs/SmtpServer.jsx","webpack:///./src/components/common/DropdownBlock.jsx","webpack:///./src/components/common/WarningBlock.jsx","webpack:///./src/services/performanceTabService.js","webpack:///./src/actions/performanceTab.js","webpack:///./src/components/Tabs/Performance.jsx","webpack:///./src/components/Tabs/Logs.jsx","webpack:///./src/components/Body/Body.jsx","webpack:///./src/components/App.jsx","webpack:///./src/containers/Root.prod.js","webpack:///./src/validation/validationSmtpServerTab.js","webpack:///./src/reducers/rootReducer.js","webpack:///./src/reducers/paginationReducer.js","webpack:///./src/reducers/visiblePanelReducer.js","webpack:///./src/reducers/webTabReducer.js","webpack:///./src/reducers/serverReducer.js","webpack:///./src/reducers/applicationTabReducer.js","webpack:///./src/reducers/databaseTabReducer.js","webpack:///./src/reducers/smtpServerTabReducer.js","webpack:///./src/reducers/logsTabReducer.js","webpack:///./src/reducers/performanceTabReducer.js","webpack:///./src/store/configureStore.js","webpack:///./src/main.jsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","dnn","nodeModules","React","_utils__WEBPACK_IMPORTED_MODULE_0__","resx","util","getResx","paginationActionTypes","LOAD_MORE","LOAD_TAB_DATA","SELECT_PANEL","webTab","LOAD_WEB_TAB","LOADED_WEB_TAB","ERROR_LOADING_WEB_TAB","server","REQUEST_RESTART_APPLICATION","END_REQUEST_RESTART_APPLICATION","ERROR_REQUEST_RESTART_APPLICATION","REQUEST_CLEAR_CACHE","END_REQUEST_CLEAR_CACHE","ERROR_REQUEST_CLEAR_CACHE","applicationTab","LOAD_APPLICATION_TAB","LOADED_APPLICATION_TAB","ERROR_LOADING_APPLICATION_TAB","databaseTab","LOAD_DATABASE_TAB","LOADED_DATABASE_TAB","ERROR_LOADING_DATABASE_TAB","smtpServerTab","LOAD_SMTP_SERVER_TAB","LOADED_SMTP_SERVER_TAB","ERROR_LOADING_SMTP_SERVER_TAB","CHANGE_SMTP_SERVER_MODE","CHANGE_SMTP_AUTHENTICATION","CHANGE_SMTP_CONFIGURATION_VALUE","UPDATE_SMTP_SERVER_SETTINGS","UPDATED_SMTP_SERVER_SETTINGS","ERROR_UPDATING_SMTP_SERVER_SETTINGS","SEND_TEST_EMAIL","SENT_TEST_EMAIL","ERROR_SENDING_TEST_EMAIL","logsTab","LOAD_LOGS_TAB","LOADED_LOGS_TAB","ERROR_LOADING_LOGS_TAB","LOAD_LOG","LOADED_LOG","ERROR_LOADING_LOG","performanceTab","LOAD_PERFORMANCE_TAB","LOADED_PERFORMANCE_TAB","ERROR_LOADING_PERFORMANCE_TAB","CHANGE_PERFORMANCE_SETTINGS_VALUE","SAVE_PERFORMANCE_SETTINGS","SAVED_PERFORMANCE_SETTINGS","ERROR_SAVING_PERFORMANCE_SETTINGS","INCREMENT_VERSION","INCREMENTED_VERSION","ERROR_INCREMENTING_VERSION","__webpack_exports__","pagination","visiblePanel","actionTypes_webTab","actionTypes_server","actionTypes_applicationTab","actionTypes_databaseTab","actionTypes_smtpServerTab","actionTypes_logsTab","actionTypes_performanceTab","CommonComponents","utilities","config","initialized","settings","moduleName","utils","init","options","Error","formatDateNoTime","date","Date","toLocaleDateString","culture","year","month","day","formatNumeric","toLocaleString","formatNumeric2Decimals","parseFloat","Math","round","toFixed","notify","message","notifyError","isHostUser","isHost","confirm","confirmText","cancelText","confirmHandler","cancelHandler","getServiceFramework","sf","Redux","ReactRedux","serverTabsList","application","initCallback","getPanelIdFromPath","updatePanelTabView","panelViewData","path","require","dispatch","registerServerTab","serverTab","push","panelId","getRegisteredServerTabs","useSourceMap","list","toString","this","map","item","content","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","JSON","stringify","sourceURLs","sources","source","sourceRoot","concat","join","cssWithMappingToString","mediaQuery","alreadyImportedModules","length","id","fn","memo","stylesInDom","isOldIE","document","all","atob","apply","arguments","getElement","target","parent","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","j","parts","addStyle","listToStyles","newStyles","base","part","css","media","insertStyleElement","style","insertInto","lastStyleElementInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","before","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","createElement","undefined","attrs","type","nonce","nc","getNonce","addAttrs","el","keys","forEach","setAttribute","obj","update","remove","result","transform","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","index","replacement","filter","Boolean","cssNode","childNodes","hmr","locals","Es6Promise","ReactDOM","ReduxThunk","ReactCustomScrollBars","location","baseUrl","protocol","host","currentDir","pathname","replace","fullMatch","origUrl","newUrl","unquotedOrigUrl","trim","$1","test","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","paginationActions","loadTab","ActionTypes","payload","controllerName","moduleRoot","controller","serviceFramework","method","parameters","Promise","callback","errorCallback","serializeQueryStringParameters","post","webTabService","getWebServerInfo","webTabActions","loadWebServerInfo","then","response","webServerInfo","catch","errorMessage","localization","serverService","restartApplication","clearCache","serverActions","url","applicationTabService","getApplicationInfo","applicationTabActions","loadApplicationInfo","applicationInfo","databaseTabService","getDataBaseServerInfo","databaseTabActions","loadDatabaseServerInfo","databaseServerInfo","getLogs","logList","Results","LogList","log","label","upgradeLogList","UpgradeLogList","upgradeLog","getLog","fileName","logName","logsTabActions","loadLogsServerInfo","logsTabService","logs","loadSelectedLog","logResponse","InfoBlock","Component","external_window_dnn_nodeModules_React_default","a","external_window_dnn_nodeModules_CommonComponents_","className","tooltipMessage","tooltip","text","Application","isApplicationInfoLoaded","onRetrieveApplicationInfo","newProps","InfoBlock_InfoBlock","Localization","product","version","guid","htmlEditorProvider","dataProvider","cachingProvider","loggingProvider","friendlyUrlProvider","friendlyUrlsEnabled","friendlyUrlType","schedulerMode","webFarmEnabled","casPermissions","connect","state","_objectSpread","bindActionCreators","ApplicationTabActions","Web","onRetrieveWebServerInfo","osVersion","iisVersion","framework","identity","hostName","physicalPath","relativePath","serverTime","Web_objectSpread","WebTabActions","BackupGrid","backups","field","columnSize","maxWidth","startDate","finishDate","size","backupType","rows","getBackUpsGridRows","FilesGrid","files","fileType","getFilesGridRows","Database","onRetrieveDatabaseServerInfo","databaseInfo","productVersion","servicePack","productEdition","softwarePlatform","BackupGrid_BackupGrid","paddingBottom","FilesGrid_FilesGrid","Database_objectSpread","DatabaseTabActions","GlobalIcon","margin","isSwitch","messages","_extends","float","height","position","tooltipStyle","defaultProps","RadioButtonBlock","width","isGlobal","GlobalIcon_GlobalIcon","onChange","EditBlock","error","margin-top","globalTooltipStyle","labelHidden","onText","offText","readOnly","getControllerName","smtpServerService","getSmtpSettings","updateSmtpSettings","sendTestEmail","smtpServeTabActions","loadSmtpServerInfo","smtpServerInfo","changeSmtpServerMode","smtpServeMode","changeSmtpAuthentication","smtpAuthentication","changeSmtpConfigurationValue","updateSmtpServerSettings","success","infoMessage","confirmationMessage","errMessage","data","parse","responseText","SmtpServer","onRetrieveSmtpServerInfo","onChangeSmtpServerMode","authentication","onChangeSmtpAuthentication","enabled","onChangeSmtpConfigurationValue","event","areThereValidationError","smtpSettings","smtpServerMode","site","updateRequest","smtpServer","smtpConnectionLimit","smtpMaxIdleTime","smtpUsername","smtpUserName","smtpPassword","smtpHostEmail","enableSmtpSsl","messageSchedulerBatchSize","onUpdateSmtpServerSettings","errors","prop","sendEmailRequest","onSendTestEmail","portalName","areGlobalSettings","selectedSmtpSettings","credentialVisible","smtpSettingsVisible","RadioButtonBlock_RadioButtonBlock","getSmtpServerOptions","EditBlock_EditBlock","onChangeField","getSmtpAuthenticationOptions","onChangeAuthenticationMode","SwitchBlock_InfoBlock","onChangeSmtpEnableSsl","onClick","onTestSmtpSettings","onSave","SmtpServer_objectSpread","SmtpServerTabActions","DropdownBlock","onSelect","WarningBlock","dangerouslySetInnerHTML","__html","SvgIcons","ErrorStateIcon","convertKeyValueToLabelValue","Value","Key","performanceTabService","getPerformanceSettings","PortalName","CachingProvider","pageStatePersistence","PageStatePersistence","moduleCacheProvider","ModuleCacheProvider","pageCacheProvider","PageCacheProvider","cacheSetting","CacheSetting","authCacheability","AuthCacheability","unauthCacheability","UnauthCacheability","sslForCacheSynchronization","SslForCacheSynchronization","clientResourcesManagementMode","ClientResourcesManagementMode","currentHostVersion","CurrentHostVersion","hostEnableCompositeFiles","HostEnableCompositeFiles","hostMinifyCss","HostMinifyCss","hostMinifyJs","HostMinifyJs","currentPortalVersion","CurrentPortalVersion","portalEnableCompositeFiles","PortalEnableCompositeFiles","portalMinifyCss","PortalMinifyCss","portalMinifyJs","PortalMinifyJs","cachingProviderOptions","CachingProviderOptions","pageStatePersistenceOptions","PageStatePersistenceOptions","moduleCacheProviders","ModuleCacheProviders","pageCacheProviders","PageCacheProviders","cacheSettingOptions","CacheSettingOptions","authCacheabilityOptions","AuthCacheabilityOptions","unauthCacheabilityOptions","UnauthCacheabilityOptions","save","performanceSettings","request","incrementVersion","isGlobalSetting","performanceTabActions","loadPerformanceSettings","changePerformanceSettingsValue","isGlobalSettings","parseInt","Performance","onRetrievePerformanceSettings","onIncrementVersion","onChangePerformanceSettingsValue","isLoading","enableCompositeFiles","minifyCss","minifyJs","enableCompositeFilesKey","minifyCssKey","minifyJsKey","versionLocalizationKey","WarningBlock_WarningBlock","DropdownBlock_DropdownBlock","paddingLeft","marginBottom","disable","incrementingVersion","getClientResourcesManagementModeOptions","disabled","isSaving","loading","saving","Performance_objectSpread","PerformanceTabActions","Logs","onRetrieveLogsServerInfo","withBorder","selectedLog","prependWith","onSelectedLog","external_window_dnn_nodeModules_ReactCustomScrollBars_","renderTrackHorizontal","Logs_extends","logData","Logs_objectSpread","LogsTabActions","Body","_this","Body_classCallCheck","Body_getPrototypeOf","handleSelect","Body_assertThisInitialized","PaginationActions","elements","propertyNameHasIndex","propertyNameHasValue","getInteger","min","max","registeredTabs","tab","isHostOnlyVisible","systemInfoTabHeaders","systemInfoTabBody","Tabs_Application","Tabs_Web","Tabs_Database_Database","serverSettingsTabHeaders","serverSettingsTabBody","Tabs_SmtpServer","Tabs_Performance","Tabs_Logs","mainTabHeaders","mainTabBody","tabHeaders","insertElementsInArray","parentIndex","selectedIndex","tabIndex","restartAppButtonStyle","marginRight","App","reloadPage","reload","buttonVisible","isOpen","title","onClearCacheClicked","onRestartApplicationClicked","components_Body_Body","top","selectedPage","selectedPageVisibleIndex","App_objectSpread","ServerActions","Root","Root_prod_classCallCheck","Root_prod_possibleConstructorReturn","Root_prod_getPrototypeOf","components_App","regExpPositiveIntegerValue","validateFields","rootReducer","combineReducers","action","visiblePanelReducer_objectSpread","webTabReducer_objectSpread","serverReducer_objectSpread","applicationTabReducer_objectSpread","databaseTabReducer_objectSpread","smtpServerTabReducer_objectSpread","logsTabReducer_objectSpread","pageStatePersistenceMode","performanceTabReducer_objectSpread","initialState","middleware","composeEnhancers","store","thunk","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","appContainer","getElementById","getAttribute","render","external_window_dnn_nodeModules_ReactRedux_","Root_default"],"mappings":"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","file":"servers-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = window.dnn.nodeModules.React;","import util from \"./utils\";\r\n\r\nconst resx = {\r\n    get(key) {\r\n        return util.getResx(key);\r\n    }\r\n};\r\n\r\nexport default resx;","const paginationActionTypes =  {    \r\n    LOAD_MORE: \"LOAD_MORE\",\r\n    LOAD_TAB_DATA: \"LOAD_TAB_DATA\"\r\n};\r\nexport default paginationActionTypes;\r\n","const paginationActionTypes =  {    \r\n    SELECT_PANEL: \"SELECT_PANEL\"\r\n};\r\nexport default paginationActionTypes;\r\n","const webTab =  {\r\n    LOAD_WEB_TAB: \"LOAD_WEB_TAB\",\r\n    LOADED_WEB_TAB: \"LOADED_WEB_TAB\",\r\n    ERROR_LOADING_WEB_TAB: \"ERROR_LOADING_WEB_TAB\"\r\n};\r\n\r\nexport default webTab;","const server =  {\r\n    REQUEST_RESTART_APPLICATION: \"REQUEST_RESTART_APPLICATION\",\r\n    END_REQUEST_RESTART_APPLICATION: \"END_REQUEST_RESTART_APPLICATION\",\r\n    ERROR_REQUEST_RESTART_APPLICATION: \"ERROR_REQUEST_RESTART_APPLICATION\",\r\n    REQUEST_CLEAR_CACHE: \"REQUEST_CLEAR_CACHE\",\r\n    END_REQUEST_CLEAR_CACHE: \"END_REQUEST_CLEAR_CACHE\",\r\n    ERROR_REQUEST_CLEAR_CACHE: \"ERROR_REQUEST_CLEAR_CACHE\"  \r\n};\r\n\r\nexport default server;","const applicationTab =  {\r\n    LOAD_APPLICATION_TAB: \"LOAD_APPLICATION_TAB\",\r\n    LOADED_APPLICATION_TAB: \"LOADED_APPLICATION_TAB\",\r\n    ERROR_LOADING_APPLICATION_TAB: \"ERROR_LOADING_APPLICATION_TAB\"\r\n};\r\n\r\nexport default applicationTab;","const databaseTab =  {\r\n    LOAD_DATABASE_TAB: \"LOAD_DATABASE_TAB\",\r\n    LOADED_DATABASE_TAB: \"LOADED_DATABASE_TAB\",\r\n    ERROR_LOADING_DATABASE_TAB: \"ERROR_LOADING_DATABASE_TAB\"\r\n};\r\n\r\nexport default databaseTab;","const smtpServerTab =  {\r\n    LOAD_SMTP_SERVER_TAB: \"LOAD_SMTP_SERVER_TAB\",\r\n    LOADED_SMTP_SERVER_TAB: \"LOADED_SMTP_SERVER_TAB\",\r\n    ERROR_LOADING_SMTP_SERVER_TAB: \"ERROR_LOADING_SMTP_SERVER_TAB\",\r\n    CHANGE_SMTP_SERVER_MODE: \"CHANGE_SMTP_SERVER_MODE\",\r\n    CHANGE_SMTP_AUTHENTICATION: \"CHANGE_SMTP_AUTHENTICATION\",\r\n    CHANGE_SMTP_CONFIGURATION_VALUE: \"CHANGE_SMTP_CONFIGURATION_VALUE\",\r\n    UPDATE_SMTP_SERVER_SETTINGS: \"UPDATE_SMTP_SERVER_SETTINGS\",\r\n    UPDATED_SMTP_SERVER_SETTINGS: \"UPDATED_SMTP_SERVER_SETTINGS\",\r\n    ERROR_UPDATING_SMTP_SERVER_SETTINGS: \"ERROR_UPDATING_SMTP_SERVER_SETTINGS\",\r\n    SEND_TEST_EMAIL: \"SEND_TEST_EMAIL\",\r\n    SENT_TEST_EMAIL: \"SENT_TEST_EMAIL\",\r\n    ERROR_SENDING_TEST_EMAIL: \"ERROR_SENDING_TEST_EMAIL\"\r\n};\r\n\r\nexport default smtpServerTab;","const logsTab =  {\r\n    LOAD_LOGS_TAB: \"LOAD_LOGS_TAB\",\r\n    LOADED_LOGS_TAB: \"LOADED_LOGS_TAB\",\r\n    ERROR_LOADING_LOGS_TAB: \"ERROR_LOADING_LOGS_TAB\",\r\n    LOAD_LOG: \"LOAD_LOG\",\r\n    LOADED_LOG: \"LOADED_LOG\",\r\n    ERROR_LOADING_LOG: \"ERROR_LOADING_LOG\"\r\n};\r\n\r\nexport default logsTab;","const performanceTab =  {\r\n    LOAD_PERFORMANCE_TAB: \"LOAD_PERFORMANCE_TAB\",\r\n    LOADED_PERFORMANCE_TAB: \"LOADED_PERFORMANCE_TAB\",\r\n    ERROR_LOADING_PERFORMANCE_TAB: \"ERROR_LOADING_PERFORMANCE_TAB\",\r\n    CHANGE_PERFORMANCE_SETTINGS_VALUE: \"CHANGE_PERFORMANCE_SETTINGS_VALUE\",\r\n    SAVE_PERFORMANCE_SETTINGS: \"SAVE_PERFORMANCE_SETTINGS\",\r\n    SAVED_PERFORMANCE_SETTINGS: \"SAVED_PERFORMANCE_SETTINGS\",\r\n    ERROR_SAVING_PERFORMANCE_SETTINGS: \"ERROR_SAVING_PERFORMANCE_SETTINGS\",\r\n    INCREMENT_VERSION: \"INCREMENT_VERSION\",\r\n    INCREMENTED_VERSION: \"INCREMENTED_VERSION\",\r\n    ERROR_INCREMENTING_VERSION: \"ERROR_INCREMENTING_VERSION\"\r\n};\r\n\r\nexport default performanceTab;","import pagination from \"./pagination\";\r\nimport visiblePanel from \"./visiblePanel\";\r\nimport webTab from \"./webTab\";\r\nimport server from \"./server\";\r\nimport applicationTab from \"./applicationTab\";\r\nimport databaseTab from \"./databaseTab\";\r\nimport smtpServerTab from \"./smtpServerTab\";\r\nimport logsTab from \"./logsTab\";\r\nimport performanceTab from \"./performanceTab\";\r\n\r\nexport {\r\n    pagination,\r\n    visiblePanel,\r\n    webTab,\r\n    server,\r\n    applicationTab,\r\n    databaseTab,\r\n    smtpServerTab,\r\n    logsTab,\r\n    performanceTab\r\n};","module.exports = window.dnn.nodeModules.CommonComponents;","let utilities = null;\r\nlet config = null;\r\nlet initialized = false;\r\nlet settings = null;\r\nlet moduleName = null;\r\n\r\nfunction init(options) {\r\n    if (!options) {\r\n        throw new Error(\"This method needs to have an options object as an input parameter\");\r\n    }\r\n    if (!options.utilities) {\r\n        throw new Error(\"This method needs to have an options.utilities object as an input parameter\");\r\n    }\r\n    if (!options.config) {\r\n        throw new Error(\"This method needs to have an options.config object as an input parameter\");\r\n    }\r\n    utilities = options.utilities;  \r\n    config = options.config;\r\n    moduleName = options.moduleName;\r\n    settings = options.settings; \r\n    initialized = true;\r\n}\r\n\r\nfunction formatDateNoTime(date) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    const dateOptions = { year: \"numeric\", month: \"numeric\", day: \"numeric\" };\r\n    return new Date(date).toLocaleDateString(config.culture, dateOptions);\r\n}\r\n\r\nfunction formatNumeric(value) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return value.toLocaleString(config.culture);\r\n}\r\n\r\nfunction formatNumeric2Decimals(value) {\r\n    return parseFloat(Math.round(value * 100) / 100).toFixed(2);\r\n}\r\n\r\nfunction notify(message) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return utilities.notify(message);\r\n}\r\n\r\nfunction notifyError(message) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return utilities.notifyError(message);\r\n}\r\n\r\nfunction confirm(message, confirmText, cancelText, confirmHandler, cancelHandler) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return utilities.confirm(message, confirmText, cancelText, confirmHandler, cancelHandler);\r\n}\r\n\r\nfunction getResx(key) {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return utilities.getResx(moduleName, key);\r\n}\r\n\r\nfunction isHostUser() {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return settings.isHost;\r\n}\r\n\r\nfunction getServiceFramework() {\r\n    if (!initialized) {\r\n        throw new Error(\"Utils have not been initialized\");\r\n    }\r\n    return utilities.sf;\r\n}\r\n\r\nconst utils = {\r\n    init,\r\n    formatDateNoTime,\r\n    formatNumeric,\r\n    formatNumeric2Decimals,\r\n    notify,\r\n    notifyError,\r\n    getResx,\r\n    isHostUser,\r\n    confirm,\r\n    getServiceFramework\r\n};\r\n\r\nexport default utils;\r\n","module.exports = window.dnn.nodeModules.Redux;","module.exports = window.dnn.nodeModules.ReactRedux;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import utilities from \"../utils\";\r\nconst serverTabsList = [];\r\n\r\nfunction init(initCallback) {\r\n    // This setting is required and define the public path \r\n    // to allow the web application to download assets on demand \r\n    // eslint-disable-next-line no-undef\r\n    // __webpack_public_path__ = options.publicPath;        \r\n    let options = window.dnn[initCallback]();\r\n\r\n    utilities.init(options);\r\n    utilities.getPanelIdFromPath = options.utilities.getPanelIdFromPath;\r\n    utilities.updatePanelTabView = options.utilities.updatePanelTabView;\r\n    utilities.panelViewData = options.utilities.panelViewData;\r\n    utilities.path = options.path;\r\n\r\n    // delay the styles loading after the __webpack_public_path__ is set\r\n    // this allows the fonts associated to be loaded properly in production\r\n    require(\"../less/style.less\");\r\n}\r\n\r\nfunction dispatch() {\r\n    throw new Error(\"dispatch method needs to be overwritten from the Redux store\");\r\n}\r\n\r\nfunction registerServerTab(serverTab) {\r\n    serverTabsList.push(serverTab);\r\n\r\n    let panelId = utilities.getPanelIdFromPath(utilities.path);\r\n    utilities.updatePanelTabView(panelId);\r\n}\r\n\r\nfunction getRegisteredServerTabs() {\r\n    return serverTabsList;\r\n}\r\n\r\nconst application = {\r\n    init,\r\n    dispatch,\r\n    registerServerTab,\r\n    getRegisteredServerTabs\r\n};\r\n\r\n\r\nexport default application;","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./tabs.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./tabs.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./tabs.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = window.dnn.nodeModules.Es6Promise;","module.exports = window.dnn.nodeModules.ReactDOM;","module.exports = window.dnn.nodeModules.ReduxThunk;","if (process.env.NODE_ENV === \"production\") {\r\n    module.exports = require(\"./Root.prod\");\r\n} else {\r\n    module.exports = require(\"./Root.dev\");\r\n}\r\n","module.exports = window.dnn.nodeModules.ReactCustomScrollBars;","\nvar content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"\", \"\"]);\n\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"#servers-container .img-responsive {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/* START EVOQ COLOR PALETTE */\\n/* END EVOQ COLOR PALETTE */\\n/* START ATTENTION COLORS */\\n/* END ATTENTION COLORS */\\n/* SVG HOVER STATES */\\nsvg {\\n  fill: #C8C8C8;\\n}\\nsvg:hover {\\n  fill: #6F7273;\\n}\\nsvg:active {\\n  fill: #1E88C3;\\n}\\n/* END SVG HOVER STATES */\\n.dnn-servers-tab-panel .dnn-servers-info-panel {\\n  padding: 30px 80px 45px;\\n  display: inline-block;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big {\\n  margin: 30px 30px 45px;\\n  display: inline-block;\\n  width: 93%;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big .dnn-switch-container {\\n  float: right;\\n}\\n.dnn-servers-tab-panel .dnn-ui-common-input-group {\\n  padding: 0 0 32px 0;\\n}\\n.dnn-servers-tab-panel .dnn-ui-common-input-group .title label {\\n  font-weight: bolder;\\n  float: left;\\n  text-transform: uppercase;\\n}\\n.dnn-servers-tab-panel .dnn-ui-common-input-group .dnn-single-line-input-with-error {\\n  display: block;\\n}\\n.dnn-servers-tab-panel .tooltipAdjustment {\\n  float: left;\\n  width: 100%;\\n}\\n.dnn-servers-tab-panel .tooltipAdjustment div.tooltip-text {\\n  max-width: 320px;\\n  word-break: normal;\\n}\\n.dnn-servers-tab-panel .log-file-cell {\\n  padding: 7px 0;\\n}\\n.dnn-servers-tab-panel .log-file-cell .dnn-dropdown {\\n  border-right: 1px solid #C8C8C8;\\n}\\n.dnn-servers-tab-panel .log-file-cell .dnn-dropdown .collapsible-label {\\n  padding: 3px 0;\\n}\\n.dnn-servers-tab-panel .log-file-cell .dnn-dropdown .dropdown-icon {\\n  top: 5px;\\n  right: 17px;\\n}\\n.dnn-servers-tab-panel .leftPane {\\n  padding-right: 30px;\\n  border-right: 1px solid #C8C8C8;\\n}\\n.dnn-servers-tab-panel .leftPane .dnn-radio-buttons ul li {\\n  margin: 0 15px 0 0;\\n}\\n.dnn-servers-tab-panel .leftPane .dnn-radio-buttons ul li label {\\n  word-break: break-word;\\n}\\n.dnn-servers-tab-panel .rightPane {\\n  padding-left: 20px;\\n  padding-right: 10px;\\n}\\n.dnn-servers-tab-panel .rightPane .dnn-radio-buttons ul li:first-child {\\n  margin-left: 0;\\n}\\n.dnn-servers-tab-panel .border-bottom {\\n  border-bottom: 1px solid #C8C8C8;\\n  margin-bottom: 28px;\\n}\\n.dnn-servers-tab-panel .dnn-radio-buttons ul li {\\n  padding-top: 10px;\\n}\\n.dnn-servers-tab-panel .dnn-radio-buttons ul li div.check {\\n  margin-top: 8px;\\n}\\n.dnn-servers-tab-panel .dnn-radio-buttons ul li label {\\n  padding: 0px 21px 0 28px;\\n  margin-bottom: 0px;\\n}\\n.dnn-servers-tab-panel .buttons-panel {\\n  text-align: center;\\n  margin-top: 55px;\\n}\\n.dnn-servers-tab-panel .buttons-panel .dnn-ui-common-button {\\n  margin-right: 10px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel {\\n  padding: 0 30px 55px;\\n  width: 100%;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .header-title label {\\n  font-weight: bolder;\\n  text-transform: uppercase;\\n  margin-bottom: 10px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .grid {\\n  display: block;\\n  float: left;\\n  width: 100%;\\n  margin-top: 10px;\\n  border-left: 1px solid #C8C8C8;\\n  border-right: 1px solid #C8C8C8;\\n  box-sizing: border-box;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .row {\\n  display: table;\\n  width: 100%;\\n  position: relative;\\n  padding: 15px 20px;\\n  box-sizing: border-box;\\n  border-bottom: 1px solid #C8C8C8;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .row .alert-message {\\n  text-align: center;\\n  color: red;\\n  font-weight: bolder;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .header {\\n  border-top: 1px solid #C8C8C8;\\n  text-transform: uppercase;\\n}\\n.dnn-servers-tab-panel .dnn-servers-grid-panel .grid .header .dnn-grid-cell {\\n  font-weight: bolder;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .log-file-display {\\n  height: 500px;\\n  padding-right: 50px;\\n  white-space: pre-wrap;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .track-horizontal {\\n  display: none;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-label {\\n  width: auto;\\n  margin-top: 8px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .leftPane {\\n  margin-bottom: 15px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-input-group {\\n  padding: 0px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-multi-line-input {\\n  height: 400px;\\n  overflow-y: hidden;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-dropdown {\\n  width: 70%;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.logsTab .dnn-ui-common-input-group .title label {\\n  text-transform: none;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .title.lowerCase label {\\n  text-transform: none;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .dnn-servers-grid-panel.newSection {\\n  padding-top: 20px;\\n  padding-bottom: 10px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .borderSeparation > div {\\n  border-bottom: 1px solid #C8C8C8;\\n  margin-top: 10px;\\n  padding-bottom: 10px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .borderSeparation :first-child {\\n  margin-top: 0;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .dnn-ui-common-input-group .title label {\\n  text-transform: none;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .currentHostVersion .dnn-label {\\n  width: auto;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.performanceSettingTab .currentHostVersion .dnn-label label {\\n  text-transform: uppercase;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group {\\n  padding-bottom: 0;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group .dnn-radio-buttons {\\n  margin-bottom: 28px;\\n}\\n.dnn-servers-tab-panel .dnn-servers-info-panel-big.smtpServerSettingsTab .dnn-ui-common-input-group .title label {\\n  text-transform: none;\\n}\\n\", \"\"]);\n\n","\nvar content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ref--5-1!../../../../../../../../../node_modules/less-loader/dist/cjs.js!./style.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".dnn-servers-info-panel-big .serversTabWarningInfo {\\n  color: red;\\n  margin-bottom: 32px;\\n}\\n.dnn-servers-info-panel-big .serversTabWarningInfo .title label {\\n  text-transform: none;\\n}\\n.dnn-servers-info-panel-big .serversTabWarningInfo .dnn-label {\\n  width: 95%;\\n  padding: 5px;\\n  padding-bottom: 20px;\\n  color: red;\\n  font-weight: bold;\\n}\\n.dnn-servers-info-panel-big .serversTabWarningInfo div {\\n  float: left;\\n}\\n.dnn-servers-info-panel-big .serversTabWarningInfo div svg {\\n  width: 20px;\\n  height: 20px;\\n  fill: red;\\n  margin-top: 4px;\\n}\\n.dnn-servers-info-panel-big .serversTabWarningInfo div svg :hover {\\n  fill: red;\\n}\\n\", \"\"]);\n\n","import {pagination as ActionTypes}  from \"../constants/actionTypes\";\r\nconst paginationActions = {\r\n    loadTab(index) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_TAB_DATA,\r\n                payload: {\r\n                    index\r\n                }\r\n            });\r\n        };\r\n    }\r\n};\r\n\r\nexport default paginationActions;\r\n","import utils from \"../utils\";\r\nimport Promise from \"es6-promise\";\r\n\r\nfunction serializeQueryStringParameters(obj) {\r\n    const s = [];\r\n    for (let p in obj) {\r\n        if (obj.hasOwnProperty(p)) {\r\n            s.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n        }\r\n    }\r\n    return s.join(\"&\");\r\n}\r\n\r\nfunction getServiceFramework(controllerName) {\r\n    const sf = utils.getServiceFramework();\r\n\r\n    sf.moduleRoot = \"PersonaBar\";\r\n    sf.controller = controllerName;\r\n\r\n    return sf;\r\n}\r\n\r\nconst serviceFramework = {\r\n    get(controllerName, method, parameters) {\r\n        const sf = getServiceFramework(controllerName);\r\n        return new Promise((callback, errorCallback) => {\r\n            sf.get(method + \"?\" + serializeQueryStringParameters(parameters), {}, callback, errorCallback);\r\n        });\r\n    },\r\n    post(controllerName, method, parameters) {\r\n        const sf = getServiceFramework(controllerName);\r\n        return new Promise((callback, errorCallback) => {\r\n            sf.post(method, parameters, callback, errorCallback);\r\n        });\r\n    }\r\n};\r\n\r\nexport default serviceFramework; ","import serviceFramework from \"./serviceFramework\";\r\n\r\nconst getWebServerInfo = function () {\r\n    return serviceFramework.get(\"SystemInfoWeb\", \"GetWebServerInfo\");\r\n};\r\n\r\nconst webTabService = {\r\n    getWebServerInfo: getWebServerInfo\r\n};\r\n\r\nexport default webTabService; ","import {webTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport webTabService from \"../services/webTabService\";\r\nimport localization from \"../localization\";\r\n\r\nconst webTabActions = {\r\n    loadWebServerInfo() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_WEB_TAB               \r\n            });        \r\n            \r\n            webTabService.getWebServerInfo().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_WEB_TAB,\r\n                    payload: {\r\n                        webServerInfo: response\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_WEB_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingWebTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default webTabActions;","import serviceFramework from \"./serviceFramework\";\r\n\r\nconst restartApplication = function () {\r\n    return serviceFramework.post(\"Server\", \"RestartApplication\");\r\n};\r\nconst clearCache = function () {\r\n    return serviceFramework.post(\"Server\", \"ClearCache\");\r\n};\r\n\r\nconst serverService = {\r\n    restartApplication,\r\n    clearCache    \r\n};\r\n\r\nexport default serverService; ","import {server as ActionTypes}  from \"../constants/actionTypes\";\r\nimport serverService from \"../services/serverService\";\r\nimport localization from \"../localization\";\r\n\r\nconst serverActions = {\r\n    restartApplication() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_RESTART_APPLICATION               \r\n            });        \r\n            \r\n            serverService.restartApplication().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.END_REQUEST_RESTART_APPLICATION,\r\n                    payload: {\r\n                        url: response.url\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_REQUEST_RESTART_APPLICATION,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageRestartingApplication\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n    clearCache() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.REQUEST_CLEAR_CACHE               \r\n            });        \r\n            \r\n            serverService.clearCache().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.END_REQUEST_CLEAR_CACHE,\r\n                    payload: {\r\n                        url: response.url\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_REQUEST_CLEAR_CACHE,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageClearingCache\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default serverActions;","import serviceFramework from \"./serviceFramework\";\r\nimport utils from \"../utils\";\r\n\r\nfunction getControllerName() {\r\n    return utils.isHostUser() ? \"SystemInfoApplicationHost\" : \"SystemInfoApplicationAdmin\";\r\n}\r\n\r\nconst getApplicationInfo = function () {\r\n    return serviceFramework.get(getControllerName(), \"GetApplicationInfo\");\r\n};\r\n\r\nconst applicationTabService = {\r\n    getApplicationInfo: getApplicationInfo\r\n};\r\n\r\nexport default applicationTabService; ","import {applicationTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport applicationTabService from \"../services/applicationTabService\";\r\nimport localization from \"../localization\";\r\n\r\nconst applicationTabActions = {\r\n    loadApplicationInfo() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_APPLICATION_TAB               \r\n            });        \r\n            \r\n            applicationTabService.getApplicationInfo().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_APPLICATION_TAB,\r\n                    payload: {\r\n                        applicationInfo: response\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_APPLICATION_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingApplicationTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default applicationTabActions;","import serviceFramework from \"./serviceFramework\";\r\n\r\nconst getDataBaseServerInfo = function () {\r\n    return serviceFramework.get(\"SystemInfoDatabase\", \"GetDatabaseServerInfo\");\r\n};\r\n\r\nconst databaseTabService = {\r\n    getDataBaseServerInfo: getDataBaseServerInfo\r\n};\r\n\r\nexport default databaseTabService; ","import {databaseTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport databaseTabService from \"../services/databaseTabService\";\r\nimport localization from \"../localization\";\r\n\r\nconst databaseTabActions = {\r\n    loadDatabaseServerInfo() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_DATABASE_TAB               \r\n            });        \r\n            \r\n            databaseTabService.getDataBaseServerInfo().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_DATABASE_TAB,\r\n                    payload: {\r\n                        databaseServerInfo: response\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_DATABASE_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingDatabaseTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default databaseTabActions;","import serviceFramework from \"./serviceFramework\";\r\n\r\nconst getLogs = function () {\r\n    return serviceFramework.get(\"ServerSettingsLogs\", \"GetLogs\")\r\n        .then(response => {\r\n            const logList = response.Results.LogList.map((log) => {\r\n                return {\r\n                    value: log,\r\n                    label: log\r\n                };\r\n            });\r\n            \r\n            const upgradeLogList = response.Results.UpgradeLogList.map((log) => {\r\n                return {\r\n                    value: log,\r\n                    label: log,\r\n                    upgradeLog: true\r\n                };\r\n            });\r\n            \r\n            return logList.concat(upgradeLogList);\r\n        });\r\n};\r\n\r\nconst getLog = function (fileName, upgradeLog) {\r\n    if (upgradeLog) {\r\n        return serviceFramework.get(\"ServerSettingsLogs\", \"GetUpgradeLogFile\", {logName: fileName});    \r\n    }\r\n    \r\n    return serviceFramework.get(\"ServerSettingsLogs\", \"GetLogFile\", {fileName: fileName});\r\n};\r\n\r\nconst databaseTabService = {\r\n    getLogs: getLogs,\r\n    getLog: getLog\r\n};\r\n\r\nexport default databaseTabService; ","import {logsTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport logsTabService from \"../services/logsTabService\";\r\nimport localization from \"../localization\";\r\n\r\nconst logsTabActions = {\r\n    loadLogsServerInfo() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_LOGS_TAB               \r\n            });        \r\n            \r\n            logsTabService.getLogs().then(logs => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_LOGS_TAB,\r\n                    payload: {\r\n                        logs: logs\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_LOGS_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingLogsTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n       \r\n    loadSelectedLog(log) {\r\n        return (dispatch) => {\r\n            if (!log) {\r\n                return;\r\n            }\r\n            \r\n            const logName = log.value;\r\n            const upgradeLog = log.upgradeLog;\r\n            dispatch({\r\n                type: ActionTypes.LOAD_LOG,\r\n                payload: {\r\n                    log: logName\r\n                }               \r\n            });        \r\n            \r\n            logsTabService.getLog(logName, upgradeLog).then(response => {\r\n                let logResponse = \"\";\r\n                if (response && typeof response === \"string\") {\r\n                    logResponse = response;\r\n                }\r\n                \r\n                dispatch({\r\n                    type: ActionTypes.LOADED_LOG,\r\n                    payload: {\r\n                        log: logResponse\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_LOG,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingLog\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default logsTabActions;","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, InputGroup } from \"@dnnsoftware/dnn-react-common\";\r\n\r\nexport default class InfoBlock extends Component {\r\n    \r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <InputGroup>\r\n            <Label className=\"title\"\r\n                tooltipMessage={props.tooltip}\r\n                label={props.label} />\r\n            <Label label={props.text} />\r\n        </InputGroup>;\r\n    }\r\n}\r\n\r\nInfoBlock.propTypes = {\r\n    label: PropTypes.string,\r\n    tooltip: PropTypes.string,\r\n    text: PropTypes.string\r\n};","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridSystem } from \"@dnnsoftware/dnn-react-common\";\r\nimport InfoBlock from \"../common/InfoBlock\";\r\nimport Localization from \"../../localization\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ApplicationTabActions from \"../../actions/applicationTab\";\r\nimport utils from \"../../utils\";\r\n\r\nimport \"./tabs.less\";\r\n\r\nconst defaultPlaceHolder = \"...\";\r\n\r\nclass Application extends Component {\r\n\r\n    componentDidMount() {\r\n        if (!this.props.isApplicationInfoLoaded) {\r\n            this.props.onRetrieveApplicationInfo();\r\n        }        \r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n        return <div className=\"dnn-servers-info-panel\">\r\n            <GridSystem>\r\n                <div>\r\n                    <InfoBlock label={Localization.get(\"plProduct\")} \r\n                        tooltip={Localization.get(\"plProduct.Help\")} \r\n                        text={props.applicationInfo.product || defaultPlaceHolder} />   \r\n\r\n                    <InfoBlock label={Localization.get(\"plVersion\")} \r\n                        tooltip={Localization.get(\"plVersion.Help\")} \r\n                        text={props.applicationInfo.version || defaultPlaceHolder} /> \r\n\r\n                    {utils.isHostUser() && \r\n                        <div className=\"tooltipAdjustment\">\r\n                            <InfoBlock label={Localization.get(\"plGUID\")} \r\n                                tooltip={Localization.get(\"plGUID.Help\")} \r\n                                text={props.applicationInfo.guid || defaultPlaceHolder} /> \r\n                        </div>\r\n                    }\r\n                    \r\n                    <InfoBlock label={Localization.get(\"HostInfo_HtmlEditorProvider\")} \r\n                        tooltip={Localization.get(\"HostInfo_HtmlEditorProvider.Help\")} \r\n                        text={props.applicationInfo.htmlEditorProvider || defaultPlaceHolder} />\r\n\r\n                    <InfoBlock label={Localization.get(\"plDataProvider\")} \r\n                        tooltip={Localization.get(\"plDataProvider.Help\")} \r\n                        text={props.applicationInfo.dataProvider || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_CachingProvider\")} \r\n                        tooltip={Localization.get(\"HostInfo_CachingProvider.Help\")} \r\n                        text={props.applicationInfo.cachingProvider || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_LoggingProvider\")} \r\n                        tooltip={Localization.get(\"HostInfo_LoggingProvider.Help\")} \r\n                        text={props.applicationInfo.loggingProvider || defaultPlaceHolder} /> \r\n                </div>\r\n                <div>\r\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlProvider\")} \r\n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlProvider.Help\")} \r\n                        text={props.applicationInfo.friendlyUrlProvider || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlEnabled\")} \r\n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlEnabled.Help\")} \r\n                        text={props.applicationInfo.friendlyUrlsEnabled || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_FriendlyUrlType\")} \r\n                        tooltip={Localization.get(\"HostInfo_FriendlyUrlType.Help\")} \r\n                        text={props.applicationInfo.friendlyUrlType || defaultPlaceHolder} /> \r\n\r\n                    <div className=\"tooltipAdjustment\">\r\n                        <InfoBlock label={Localization.get(\"HostInfo_SchedulerMode\")} \r\n                            tooltip={Localization.get(\"HostInfo_SchedulerMode.Help\")} \r\n                            text={props.applicationInfo.schedulerMode || defaultPlaceHolder} />\r\n                    </div>\r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_WebFarmEnabled\")} \r\n                        tooltip={Localization.get(\"HostInfo_WebFarmEnabled.Help\")} \r\n                        text={props.applicationInfo.webFarmEnabled || defaultPlaceHolder} />\r\n\r\n                    <InfoBlock label={Localization.get(\"HostInfo_Permissions\")} \r\n                        tooltip={Localization.get(\"HostInfo_Permissions.Help\")} \r\n                        text={props.applicationInfo.casPermissions || defaultPlaceHolder} />\r\n                </div>\r\n            </GridSystem>\r\n        </div>;\r\n    }\r\n}\r\n\r\nApplication.propTypes = {   \r\n    applicationInfo: PropTypes.object.isRequired,\r\n    isApplicationInfoLoaded: PropTypes.bool.isRequired,\r\n    errorMessage: PropTypes.string,\r\n    onRetrieveApplicationInfo: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {    \r\n    return {\r\n        applicationInfo: state.applicationTab.applicationInfo,\r\n        isApplicationInfoLoaded: state.applicationTab.isApplicationInfoLoaded,\r\n        errorMessage: state.applicationTab.errorMessage\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators ({\r\n            onRetrieveApplicationInfo: ApplicationTabActions.loadApplicationInfo     \r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Application);","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridSystem } from \"@dnnsoftware/dnn-react-common\";\r\nimport InfoBlock from \"../common/InfoBlock\";\r\nimport Localization from \"../../localization\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport WebTabActions from \"../../actions/webTab\";\r\nimport utils from \"../../utils\";\r\n\r\nimport \"./tabs.less\";\r\n\r\nconst defaultPlaceHolder = \"...\";\r\n\r\nclass Web extends Component {\r\n    componentDidMount() {\r\n        this.props.onRetrieveWebServerInfo();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <div className=\"dnn-servers-info-panel\">\r\n            <GridSystem>\r\n                <div>\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_OSVersion\")} \r\n                        tooltip={Localization.get(\"ServerInfo_OSVersion.Help\")} \r\n                        text={props.webServerInfo.osVersion || defaultPlaceHolder} />   \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_IISVersion\")} \r\n                        tooltip={Localization.get(\"ServerInfo_IISVersion.Help\")} \r\n                        text={props.webServerInfo.iisVersion || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_Framework\")} \r\n                        tooltip={Localization.get(\"ServerInfo_Framework.Help\")} \r\n                        text={props.webServerInfo.framework || defaultPlaceHolder} /> \r\n\r\n                    <div className=\"tooltipAdjustment\">\r\n                        <InfoBlock label={Localization.get(\"ServerInfo_Identity\")} \r\n                            tooltip={Localization.get(\"ServerInfo_Identity.Help\")} \r\n                            text={props.webServerInfo.identity || defaultPlaceHolder} />\r\n                    </div> \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_HostName\")} \r\n                        tooltip={Localization.get(\"ServerInfo_HostName.Help\")} \r\n                        text={props.webServerInfo.hostName || defaultPlaceHolder} /> \r\n                </div>\r\n                <div>\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_PhysicalPath\")} \r\n                        tooltip={Localization.get(\"ServerInfo_PhysicalPath.Help\")} \r\n                        text={props.webServerInfo.physicalPath || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_Url\")} \r\n                        tooltip={Localization.get(\"ServerInfo_Url.Help\")} \r\n                        text={props.webServerInfo.url || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_RelativePath\")} \r\n                        tooltip={Localization.get(\"ServerInfo_RelativePath.Help\")} \r\n                        text={props.webServerInfo.relativePath || defaultPlaceHolder} /> \r\n\r\n                    <InfoBlock label={Localization.get(\"ServerInfo_ServerTime\")} \r\n                        tooltip={Localization.get(\"ServerInfo_ServerTime.Help\")} \r\n                        text={props.webServerInfo.serverTime || defaultPlaceHolder} />\r\n                </div>\r\n            </GridSystem>\r\n        </div>;\r\n    }\r\n}\r\n\r\nWeb.propTypes = {   \r\n    webServerInfo: PropTypes.object.isRequired,\r\n    errorMessage: PropTypes.string,\r\n    onRetrieveWebServerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {    \r\n    return {\r\n        webServerInfo: state.webTab.webServerInfo,\r\n        errorMessage: state.webTab.errorMessage\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators ({\r\n            onRetrieveWebServerInfo: WebTabActions.loadWebServerInfo     \r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Web);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridCell, TextOverflowWrapper as OverflowText } from \"@dnnsoftware/dnn-react-common\";\r\nimport Localization from \"../../../localization\";\r\nimport util from \"../../../utils\";\r\n\r\nexport default class BackupGrid extends Component {\r\n\r\n    getBackUpsGridRows() {\r\n        if (this.props.backups && this.props.backups.length > 0) {\r\n            const rows = this.props.backups.map((field, i) => {\r\n                return <div className=\"row\" key={i}>\r\n                    <GridCell columnSize={45}><OverflowText text={field.name} maxWidth={290} /></GridCell>\r\n                    <GridCell columnSize={15}>{util.formatDateNoTime(field.startDate)}</GridCell>\r\n                    <GridCell columnSize={15}>{util.formatDateNoTime(field.finishDate)}</GridCell>\r\n                    <GridCell columnSize={10}>{util.formatNumeric(field.size)}</GridCell>\r\n                    <GridCell columnSize={15}>{field.backupType}</GridCell>\r\n                </div>;\r\n            });\r\n            return rows;\r\n        }\r\n        return <div className=\"row\">\r\n            <GridCell className=\"alert-message\" columnSize={100}>{Localization.get(\"NoBackups\")}</GridCell>\r\n        </div>;\r\n    }\r\n\r\n    render() {\r\n        const rows = this.getBackUpsGridRows();\r\n\r\n        return <div className=\"grid\">\r\n            <div className=\"row header\">\r\n                <GridCell columnSize={45}>{Localization.get(\"BackupName\")}</GridCell>\r\n                <GridCell columnSize={15}>{Localization.get(\"BackupStarted\")}</GridCell>\r\n                <GridCell columnSize={15}>{Localization.get(\"BackupFinished\")}</GridCell>\r\n                <GridCell columnSize={10}>{Localization.get(\"BackupSize\")}</GridCell>\r\n                <GridCell columnSize={15}>{Localization.get(\"BackupType\")}</GridCell>\r\n            </div>\r\n            {rows}\r\n        </div>;\r\n    }\r\n}\r\n\r\nBackupGrid.propTypes = {   \r\n    backups: PropTypes.array\r\n};","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridCell, TextOverflowWrapper as OverflowText } from \"@dnnsoftware/dnn-react-common\";\r\nimport Localization from \"../../../localization\";\r\nimport util from \"../../../utils\";\r\n\r\nexport default class FilesGrid extends Component {\r\n\r\n    getFilesGridRows() {\r\n        if (this.props.files && this.props.files.length > 0) {\r\n            const rows = this.props.files.map((field, i) => {\r\n                return <div className=\"row\" key={i}>\r\n                    <GridCell columnSize={30}><OverflowText text={field.name} /></GridCell>\r\n                    <GridCell columnSize={15}>{util.formatNumeric2Decimals(field.size)} Mb</GridCell>\r\n                    <GridCell columnSize={15}>{field.fileType}</GridCell>\r\n                    <GridCell columnSize={40}><OverflowText text={field.fileName} maxWidth={290} /></GridCell>\r\n                </div>;\r\n            });\r\n            return rows;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const rows = this.getFilesGridRows();\r\n\r\n        return <div className=\"grid\">\r\n            <div className=\"row header\">\r\n                <GridCell columnSize={30}>{Localization.get(\"Name\")}</GridCell>\r\n                <GridCell columnSize={15}>{Localization.get(\"Size\")}</GridCell>\r\n                <GridCell columnSize={15}>{Localization.get(\"FileType\")}</GridCell>\r\n                <GridCell columnSize={40}>{Localization.get(\"FileName\")}</GridCell>\r\n            </div>\r\n            {rows}\r\n        </div>;\r\n    }\r\n}\r\n\r\nFilesGrid.propTypes = {   \r\n    files: PropTypes.array\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridSystem, Label, GridCell } from \"@dnnsoftware/dnn-react-common\";\r\nimport InfoBlock from \"../../common/InfoBlock\";\r\nimport BackupGrid from \"./BackupGrid\";\r\nimport FilesGrid from \"./FilesGrid\";\r\nimport Localization from \"../../../localization\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport DatabaseTabActions from \"../../../actions/databaseTab\";\r\nimport utils from \"../../../utils\";\r\n\r\nimport \"../tabs.less\";\r\n\r\nconst defaultPlaceHolder = \"...\";\r\n\r\nclass Database extends Component {\r\n    componentDidMount() {\r\n        this.props.onRetrieveDatabaseServerInfo();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <GridCell>\r\n            <GridCell className=\"dnn-servers-info-panel\">\r\n                <GridSystem>\r\n                    <GridCell>\r\n                        <InfoBlock label={Localization.get(\"DbInfo_ProductVersion\")}\r\n                            tooltip={Localization.get(\"DbInfo_ProductVersion.Help\")}\r\n                            text={props.databaseInfo.productVersion || defaultPlaceHolder} />\r\n\r\n                        <InfoBlock label={Localization.get(\"DbInfo_ServicePack\")}\r\n                            tooltip={Localization.get(\"DbInfo_ServicePack.Help\")}\r\n                            text={props.databaseInfo.servicePack || defaultPlaceHolder} />\r\n\r\n                        <InfoBlock label={Localization.get(\"DbInfo_ProductEdition\")}\r\n                            tooltip={Localization.get(\"DbInfo_ProductEdition.Help\")}\r\n                            text={props.databaseInfo.productEdition || defaultPlaceHolder} />\r\n                    </GridCell>\r\n                    <GridCell>\r\n                        <InfoBlock label={Localization.get(\"DbInfo_SoftwarePlatform\")}\r\n                            tooltip={Localization.get(\"DbInfo_SoftwarePlatform.Help\")}\r\n                            text={props.databaseInfo.softwarePlatform || defaultPlaceHolder} />\r\n                    </GridCell>\r\n                </GridSystem>\r\n            </GridCell>\r\n            <GridCell className=\"dnn-servers-grid-panel\">\r\n                <Label className=\"header-title\" label={Localization.get(\"plBackups\")} />\r\n                <BackupGrid backups={props.databaseInfo.backups} />\r\n            </GridCell>\r\n            <GridCell className=\"dnn-servers-grid-panel\" style={{ paddingBottom: 55 }}>\r\n                <Label className=\"header-title\" label={Localization.get(\"plFiles\")} />\r\n                <FilesGrid files={props.databaseInfo.files} />\r\n            </GridCell>\r\n        </GridCell>;\r\n    }\r\n}\r\n\r\nDatabase.propTypes = {\r\n    databaseInfo: PropTypes.object.isRequired,\r\n    errorMessage: PropTypes.string,\r\n    onRetrieveDatabaseServerInfo: PropTypes.func.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        databaseInfo: state.databaseTab.databaseServerInfo,\r\n        errorMessage: state.databaseTab.errorMessage\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators({\r\n            onRetrieveDatabaseServerInfo: DatabaseTabActions.loadDatabaseServerInfo\r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Database);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Tooltip } from \"@dnnsoftware/dnn-react-common\";\r\nimport localization from \"../../localization\";\r\n\r\nconst normalMargin = \"-3px 0 0 5px\";\r\nconst switchMargin = \"5px 0 0 5px\";\r\n\r\nexport default class GlobalIcon extends Component {\r\n\r\n    render() {\r\n        const margin = this.props.isSwitch ? switchMargin : normalMargin;\r\n        return <Tooltip type=\"global\"\r\n            messages={[localization.get(\"GlobalSettings\")]}\r\n            style={Object.assign({ float: \"left\", height: \"20\", position: \"static\", margin: margin }, this.props.tooltipStyle)} />;\r\n    }\r\n}\r\n\r\nGlobalIcon.propTypes = {    \r\n    isSwitch: PropTypes.bool.isRequired,\r\n    tooltipStyle: PropTypes.object  \r\n};\r\n\r\nGlobalIcon.defaultProps = {\r\n    isSwitch: false\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, InputGroup, RadioButtons } from \"@dnnsoftware/dnn-react-common\";\r\nimport GlobalIcon from \"./GlobalIcon\";\r\n\r\nexport default class RadioButtonBlock extends Component {\r\n\r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <InputGroup>\r\n            <Label className=\"title\"\r\n                tooltipMessage={props.tooltip}\r\n                label={props.label} style={{width: \"auto\"}}/>\r\n            {props.isGlobal && <GlobalIcon /> }\r\n            <RadioButtons\r\n                options={props.options}                \r\n                value={props.value}\r\n                onChange={props.onChange} />\r\n        </InputGroup>;\r\n    }\r\n}\r\n\r\nRadioButtonBlock.propTypes = {\r\n    label: PropTypes.string,\r\n    tooltip: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    isGlobal: PropTypes.bool.isRequired\r\n};\r\n\r\nRadioButtonBlock.defaultProps = {\r\n    isGlobal: false\r\n};","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, InputGroup, SingleLineInputWithError } from \"@dnnsoftware/dnn-react-common\";\r\nimport GlobalIcon from \"./GlobalIcon\";\r\n\r\nexport default class EditBlock extends Component {\r\n    \r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <InputGroup>\r\n            <Label className=\"title\"\r\n                tooltipMessage={props.tooltip}\r\n                label={props.label} style={{width: \"auto\"}} />\r\n            {props.isGlobal && <GlobalIcon /> }\r\n            <SingleLineInputWithError \r\n                value={props.value} \r\n                type={props.type} \r\n                onChange={props.onChange}\r\n                error={!!props.error} \r\n                errorMessage={props.error} />\r\n        </InputGroup>;\r\n    }\r\n}\r\n\r\nEditBlock.propTypes = {\r\n    label: PropTypes.string,\r\n    tooltip: PropTypes.string,\r\n    value: PropTypes.string,\r\n    isGlobal: PropTypes.bool.isRequired,\r\n    type: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nEditBlock.defaultProps = {\r\n    isGlobal: false\r\n};","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, InputGroup, Switch } from \"@dnnsoftware/dnn-react-common\";\r\nimport GlobalIcon from \"./GlobalIcon\";\r\n\r\nexport default class InfoBlock extends Component {\r\n\r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <InputGroup>\r\n            <Label className=\"title\"\r\n                tooltipMessage={props.tooltip}\r\n                label={props.label} style={{width: \"auto\", \"margin-top\": \"8px\"}} />   \r\n            {props.isGlobal && <GlobalIcon isSwitch={true} tooltipStyle={this.props.globalTooltipStyle} /> }         \r\n            <Switch labelHidden={false}\r\n                onText={props.onText}\r\n                offText={props.offText}\r\n                readOnly={props.readOnly}\r\n                value={props.value}\r\n                onChange={props.onChange} \r\n                style={{float: \"right\"}} />\r\n        </InputGroup>;\r\n    }\r\n}\r\n\r\nInfoBlock.propTypes = {\r\n    label: PropTypes.string,\r\n    onText: PropTypes.string,\r\n    offText: PropTypes.string,\r\n    tooltip: PropTypes.string,\r\n    readOnly: PropTypes.bool,\r\n    value: PropTypes.bool.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    isGlobal: PropTypes.bool.isRequired,\r\n    globalTooltipStyle: PropTypes.object  \r\n};\r\n\r\nInfoBlock.defaultProps = {\r\n    isGlobal: false,\r\n    readOnly: false\r\n};","import serviceFramework from \"./serviceFramework\";\r\nimport utils from \"../utils\";\r\n\r\nfunction getControllerName() {\r\n    return utils.isHostUser() ? \"ServerSettingsSmtpHost\" : \"ServerSettingsSmtpAdmin\";\r\n}\r\n\r\nconst getSmtpSettings = function () {    \r\n    return serviceFramework.get(getControllerName(), \"GetSmtpSettings\");\r\n};\r\n\r\nconst updateSmtpSettings = function (parameters) {    \r\n    return serviceFramework.post(getControllerName(), \"UpdateSmtpSettings\", parameters);\r\n};\r\n\r\nconst sendTestEmail = function (parameters) {    \r\n    return serviceFramework.post(getControllerName(), \"SendTestEmail\", parameters);\r\n};\r\n\r\nconst smtpServerService = {\r\n    getSmtpSettings,\r\n    updateSmtpSettings,\r\n    sendTestEmail\r\n};\r\n\r\nexport default smtpServerService; ","import {smtpServerTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport smtpServerService from \"../services/smtpServerService\";\r\nimport localization from \"../localization\";\r\n\r\nconst smtpServeTabActions = {\r\n    loadSmtpServerInfo() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_SMTP_SERVER_TAB               \r\n            });        \r\n            \r\n            smtpServerService.getSmtpSettings().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_SMTP_SERVER_TAB,\r\n                    payload: {\r\n                        smtpServerInfo: response\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_SMTP_SERVER_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingSmtpServerTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n    changeSmtpServerMode(smtpServeMode) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.CHANGE_SMTP_SERVER_MODE,\r\n                payload: {\r\n                    smtpServeMode\r\n                }\r\n            });\r\n        };\r\n    },\r\n    changeSmtpAuthentication(smtpAuthentication) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.CHANGE_SMTP_AUTHENTICATION,\r\n                payload: {\r\n                    smtpAuthentication\r\n                }\r\n            });\r\n        };\r\n    },\r\n    changeSmtpConfigurationValue(key, value) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.CHANGE_SMTP_CONFIGURATION_VALUE,\r\n                payload: { \r\n                    field: key,\r\n                    value\r\n                }\r\n            });  \r\n        };\r\n    },\r\n    updateSmtpServerSettings(parameters) {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.UPDATE_SMTP_SERVER_SETTINGS               \r\n            });        \r\n            \r\n            smtpServerService.updateSmtpSettings(parameters).then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.UPDATED_SMTP_SERVER_SETTINGS,\r\n                    payload: {\r\n                        success: response.success\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_UPDATING_SMTP_SERVER_SETTINGS,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageUpdatingSmtpServerTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n    sendTestEmail(parameters) {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.SEND_TEST_EMAIL               \r\n            });        \r\n            \r\n            smtpServerService.sendTestEmail(parameters).then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.SENT_TEST_EMAIL,\r\n                    payload: {\r\n                        success: response.success,\r\n                        infoMessage: response.confirmationMessage,\r\n                        errorMessage: response.errMessage\r\n                    }\r\n                });  \r\n            }).catch((data) => {\r\n                let response = JSON.parse(data.responseText);\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_SENDING_TEST_EMAIL,\r\n                    payload: {\r\n                        errorMessage: response.errMessage\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default smtpServeTabActions;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridSystem, Button } from \"@dnnsoftware/dnn-react-common\";\r\nimport RadioButtonBlock from \"../common/RadioButtonBlock\";\r\nimport EditBlock from \"../common/EditBlock\";\r\nimport SwitchBlock from \"../common/SwitchBlock\";\r\nimport localization from \"../../localization\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport SmtpServerTabActions from \"../../actions/smtpServerTab\";\r\nimport utils from \"../../utils\";\r\n\r\nclass SmtpServer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onRetrieveSmtpServerInfo();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\r\n            utils.notify(newProps.infoMessage);\r\n        }\r\n\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    onChangeSmtpServerMode(mode) {\r\n        this.props.onChangeSmtpServerMode(mode);\r\n    }\r\n\r\n    onChangeAuthenticationMode(authentication) {\r\n        this.props.onChangeSmtpAuthentication(authentication);\r\n    }\r\n\r\n    onChangeSmtpEnableSsl(enabled) {\r\n        this.props.onChangeSmtpConfigurationValue(\"enableSmtpSsl\", enabled);\r\n    }\r\n\r\n    onChangeField(key, event) {\r\n        this.props.onChangeSmtpConfigurationValue(key, event.target.value);\r\n    }   \r\n\r\n    onSave() {\r\n        const {props} = this;\r\n\r\n        if (this.areThereValidationError()) {\r\n            return;\r\n        } \r\n\r\n\r\n        const smtpSettings = props.smtpServerInfo.smtpServerMode === \"h\" && utils.isHostUser() ? props.smtpServerInfo.host \r\n            : props.smtpServerInfo.site;\r\n\r\n        const updateRequest = {\r\n            smtpServerMode: props.smtpServerInfo.smtpServerMode,\r\n            smtpServer: smtpSettings.smtpServer,\r\n            smtpConnectionLimit: smtpSettings.smtpConnectionLimit,\r\n            smtpMaxIdleTime: smtpSettings.smtpMaxIdleTime,\r\n            smtpAuthentication: smtpSettings.smtpAuthentication,\r\n            smtpUsername: smtpSettings.smtpUserName,\r\n            smtpPassword: smtpSettings.smtpPassword,\r\n            smtpHostEmail: smtpSettings.smtpHostEmail,\r\n            enableSmtpSsl: smtpSettings.enableSmtpSsl,\r\n            messageSchedulerBatchSize: props.smtpServerInfo.host.messageSchedulerBatchSize\r\n        };\r\n        props.onUpdateSmtpServerSettings(updateRequest);\r\n    }\r\n\r\n    areThereValidationError() {\r\n        let areErrors = false;\r\n        const errors = this.props.errors;\r\n        for (let prop in errors) {\r\n            if (errors[prop]) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return areErrors;\r\n    }\r\n\r\n    onTestSmtpSettings() {\r\n        const {props} = this;\r\n\r\n        if (this.areThereValidationError()) {\r\n            return;\r\n        } \r\n\r\n        let smtpSettings = {};\r\n        if (props.smtpServerInfo.smtpServerMode === \"h\" && utils.isHostUser()) {\r\n            smtpSettings = props.smtpServerInfo.host;\r\n        }\r\n        if (props.smtpServerInfo.smtpServerMode === \"p\") {\r\n            smtpSettings = props.smtpServerInfo.site;\r\n        }\r\n        \r\n        const sendEmailRequest = {\r\n            smtpServerMode: props.smtpServerInfo.smtpServerMode,\r\n            smtpServer: smtpSettings.smtpServer,\r\n            smtpAuthentication: smtpSettings.smtpAuthentication,\r\n            smtpUsername: smtpSettings.smtpUserName,\r\n            smtpPassword: smtpSettings.smtpPassword,\r\n            enableSmtpSsl: smtpSettings.enableSmtpSsl\r\n        };\r\n        props.onSendTestEmail(sendEmailRequest);    \r\n    }   \r\n\r\n    getSmtpServerOptions() {\r\n        return [{\r\n            label: localization.get(\"GlobalSmtpHostSetting\"),\r\n            value: \"h\"\r\n        },\r\n        {\r\n            label: localization.get(\"SiteSmtpHostSetting\").replace(\"{0}\", this.props.smtpServerInfo.portalName || \"\"),\r\n            value: \"p\"\r\n        }\r\n        ];\r\n    }\r\n\r\n    getSmtpAuthenticationOptions() {\r\n        return [{\r\n            label: localization.get(\"SMTPAnonymous\"),\r\n            value: \"0\"\r\n        },\r\n        {\r\n            label: localization.get(\"SMTPBasic\"),\r\n            value: \"1\"\r\n        },\r\n        {\r\n            label: localization.get(\"SMTPNTLM\"),\r\n            value: \"2\"\r\n        }\r\n        ];\r\n    }\r\n\r\n\r\n    render() {\r\n        const {props} = this;\r\n        const areGlobalSettings = props.smtpServerInfo.smtpServerMode === \"h\";\r\n        const selectedSmtpSettings = (areGlobalSettings ? props.smtpServerInfo.host : props.smtpServerInfo.site) || {};\r\n        const credentialVisible = selectedSmtpSettings.smtpAuthentication === \"1\";\r\n        const smtpSettingsVisible = utils.isHostUser() || !areGlobalSettings;\r\n\r\n        return <div className=\"dnn-servers-info-panel-big smtpServerSettingsTab\">\r\n            <GridSystem>\r\n                <div className=\"leftPane\">\r\n                    <div className=\"tooltipAdjustment border-bottom\">\r\n                        <RadioButtonBlock options={this.getSmtpServerOptions()}\r\n                            label={localization.get(\"plSMTPMode\")}\r\n                            tooltip={localization.get(\"plSMTPMode.Help\")}\r\n                            onChange={this.onChangeSmtpServerMode.bind(this)}\r\n                            value={props.smtpServerInfo.smtpServerMode} />\r\n                    </div>\r\n                    <div className=\"tooltipAdjustment\">\r\n                        {smtpSettingsVisible && \r\n                            <div>\r\n                                <EditBlock label={localization.get(\"plSMTPServer\")}\r\n                                    tooltip={localization.get(\"plSMTPServer.Help\")}\r\n                                    value={selectedSmtpSettings.smtpServer}\r\n                                    isGlobal={areGlobalSettings} \r\n                                    onChange={this.onChangeField.bind(this, \"smtpServer\")} \r\n                                    error={props.errors[\"smtpServer\"]} />\r\n                        \r\n                                <EditBlock label={localization.get(\"plConnectionLimit\")}\r\n                                    tooltip={localization.get(\"plConnectionLimit.Help\")}\r\n                                    value={selectedSmtpSettings.smtpConnectionLimit} \r\n                                    isGlobal={areGlobalSettings}\r\n                                    onChange={this.onChangeField.bind(this, \"smtpConnectionLimit\")} \r\n                                    error={props.errors[\"smtpConnectionLimit\"]} />\r\n                        \r\n                                <EditBlock label={localization.get(\"plMaxIdleTime\")}\r\n                                    tooltip={localization.get(\"plMaxIdleTime.Help\")}\r\n                                    value={selectedSmtpSettings.smtpMaxIdleTime} \r\n                                    isGlobal={areGlobalSettings}\r\n                                    onChange={this.onChangeField.bind(this, \"smtpMaxIdleTime\")}\r\n                                    error={props.errors[\"smtpMaxIdleTime\"]} />\r\n                            </div>\r\n                        }\r\n                        {smtpSettingsVisible && areGlobalSettings &&\r\n                            <EditBlock label={localization.get(\"plBatch\")}\r\n                                tooltip={localization.get(\"plBatch.Help\")}\r\n                                value={props.smtpServerInfo.host.messageSchedulerBatchSize} \r\n                                isGlobal={areGlobalSettings}\r\n                                onChange={this.onChangeField.bind(this, \"messageSchedulerBatchSize\")}\r\n                                error={props.errors[\"messageSchedulerBatchSize\"]} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightPane\">\r\n                    {smtpSettingsVisible &&\r\n                        <div className=\"tooltipAdjustment border-bottom\">\r\n                            <RadioButtonBlock options={this.getSmtpAuthenticationOptions()}\r\n                                label={localization.get(\"plSMTPAuthentication\")}\r\n                                tooltip={localization.get(\"plSMTPAuthentication.Help\")}\r\n                                onChange={this.onChangeAuthenticationMode.bind(this)}\r\n                                value={selectedSmtpSettings.smtpAuthentication || \"0\"} \r\n                                isGlobal={areGlobalSettings} />\r\n                        </div>\r\n                    }\r\n                    {smtpSettingsVisible && credentialVisible && \r\n                        <div className=\"tooltipAdjustment border-bottom\">\r\n                            <EditBlock label={localization.get(\"plSMTPUsername\")}\r\n                                tooltip={localization.get(\"plSMTPUsername.Help\")}\r\n                                value={selectedSmtpSettings.smtpUserName} \r\n                                isGlobal={areGlobalSettings}\r\n                                onChange={this.onChangeField.bind(this, \"smtpUserName\")} \r\n                                error={props.errors[\"smtpUserName\"]} />                   \r\n                        \r\n                            <EditBlock label={localization.get(\"plSMTPPassword\")}\r\n                                tooltip={localization.get(\"plSMTPPassword.Help\")}\r\n                                value={selectedSmtpSettings.smtpPassword} \r\n                                isGlobal={areGlobalSettings} \r\n                                type=\"password\"\r\n                                onChange={this.onChangeField.bind(this, \"smtpPassword\")}\r\n                                error={props.errors[\"smtpPassword\"]}  />\r\n                        </div>     \r\n                    }\r\n                    {smtpSettingsVisible &&\r\n                        <div className=\"tooltipAdjustment border-bottom\">\r\n                            <SwitchBlock label={localization.get(\"plSMTPEnableSSL\")}\r\n                                onText={localization.get(\"SwitchOn\")}\r\n                                offText={localization.get(\"SwitchOff\")}\r\n                                tooltip={localization.get(\"plSMTPEnableSSL.Help\")}\r\n                                value={selectedSmtpSettings.enableSmtpSsl}\r\n                                onChange={this.onChangeSmtpEnableSsl.bind(this)}\r\n                                isGlobal={areGlobalSettings} />\r\n                        </div>\r\n                    }              \r\n                    \r\n                    {smtpSettingsVisible && areGlobalSettings &&\r\n                        <EditBlock label={localization.get(\"plHostEmail\")}\r\n                            tooltip={localization.get(\"plHostEmail.Help\")}\r\n                            value={selectedSmtpSettings.smtpHostEmail}\r\n                            isGlobal={true}\r\n                            onChange={this.onChangeField.bind(this, \"smtpHostEmail\")}\r\n                            error={props.errors[\"smtpHostEmail\"]} />\r\n                    }\r\n                </div>\r\n            </GridSystem>\r\n            <div className=\"clear\" />\r\n            <div className=\"buttons-panel\">\r\n                <Button type=\"secondary\" \r\n                    onClick={this.onTestSmtpSettings.bind(this)}>{localization.get(\"EmailTest\")}</Button>\r\n                <Button type=\"primary\" \r\n                    onClick={this.onSave.bind(this)}>{localization.get(\"SaveButtonText\")}</Button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\n\r\nSmtpServer.propTypes = {   \r\n    smtpServerInfo: PropTypes.object.isRequired,\r\n    errorMessage: PropTypes.string,\r\n    onRetrieveSmtpServerInfo: PropTypes.func.isRequired,\r\n    onChangeSmtpServerMode: PropTypes.func.isRequired,\r\n    onChangeSmtpAuthentication: PropTypes.func.isRequired,\r\n    onChangeSmtpConfigurationValue: PropTypes.func.isRequired,\r\n    onUpdateSmtpServerSettings: PropTypes.func.isRequired,\r\n    infoMessage: PropTypes.string,\r\n    onSendTestEmail: PropTypes.func.isRequired,\r\n    errors: PropTypes.array\r\n};\r\n\r\nfunction mapStateToProps(state) {    \r\n    return {\r\n        smtpServerInfo: state.smtpServer.smtpServerInfo,\r\n        errorMessage: state.smtpServer.errorMessage,\r\n        infoMessage: state.smtpServer.infoMessage,\r\n        errors: state.smtpServer.errors\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators ({\r\n            onRetrieveSmtpServerInfo: SmtpServerTabActions.loadSmtpServerInfo,\r\n            onChangeSmtpServerMode: SmtpServerTabActions.changeSmtpServerMode,\r\n            onChangeSmtpAuthentication: SmtpServerTabActions.changeSmtpAuthentication,\r\n            onChangeSmtpConfigurationValue: SmtpServerTabActions.changeSmtpConfigurationValue,\r\n            onUpdateSmtpServerSettings: SmtpServerTabActions.updateSmtpServerSettings,\r\n            onSendTestEmail: SmtpServerTabActions.sendTestEmail\r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SmtpServer);\r\n","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label, InputGroup, Dropdown } from \"@dnnsoftware/dnn-react-common\";\r\nimport GlobalIcon from \"./GlobalIcon\";\r\n\r\nexport default class DropdownBlock extends Component {\r\n    \r\n    render() {\r\n        const {props} = this;\r\n\r\n        return <InputGroup>\r\n            <Label className=\"title\"\r\n                tooltipMessage={props.tooltip}\r\n                label={props.label} style={{width: \"auto\"}} />\r\n            {props.isGlobal && <GlobalIcon /> }\r\n            <Dropdown style={{width:\"100%\"}}\r\n                options={props.options}\r\n                value={props.value}\r\n                onSelect={props.onSelect}/>\r\n        </InputGroup>;\r\n    }\r\n}\r\n\r\nDropdownBlock.propTypes = {\r\n    label: PropTypes.string,\r\n    tooltip: PropTypes.string,\r\n    options: PropTypes.array.isRequired,\r\n    value: PropTypes.string,\r\n    isGlobal: PropTypes.bool.isRequired,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nDropdownBlock.defaultProps = {\r\n    isGlobal: false\r\n};","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { GridCell, SvgIcons } from \"@dnnsoftware/dnn-react-common\";\r\nimport \"./style.less\";\r\n\r\nexport default class WarningBlock extends Component {\r\n    \r\n    render() {\r\n        /* eslint-disable react/no-danger */\r\n        const {props} = this;\r\n\r\n        return <GridCell className=\"serversTabWarningInfo\">\r\n            <div dangerouslySetInnerHTML={{ __html: SvgIcons.ErrorStateIcon }} />\r\n            <div className=\"dnn-label title\"\r\n                dangerouslySetInnerHTML={{ __html: props.label}} />\r\n        </GridCell>;\r\n    }\r\n}\r\n\r\nWarningBlock.propTypes = {\r\n    label: PropTypes.string\r\n};","import serviceFramework from \"./serviceFramework\";\r\n\r\nconst convertKeyValueToLabelValue = function (list) {\r\n    return list.map((item) => {\r\n        return {\r\n            value: item.Value,\r\n            label: item.Key\r\n        };\r\n    });\r\n};\r\n\r\nconst getPerformanceSettings = function () {\r\n    return serviceFramework.get(\"ServerSettingsPerformance\", \"GetPerformanceSettings\")\r\n        .then(response => {\r\n            return {\r\n                portalName: response.PortalName,\r\n                cachingProvider: response.CachingProvider,\r\n                pageStatePersistence: response.PageStatePersistence,\r\n                moduleCacheProvider: response.ModuleCacheProvider,\r\n                pageCacheProvider: response.PageCacheProvider,\r\n                cacheSetting: response.CacheSetting,\r\n                authCacheability: response.AuthCacheability,\r\n                unauthCacheability: response.UnauthCacheability,\r\n                sslForCacheSynchronization: response.SslForCacheSynchronization,\r\n                clientResourcesManagementMode: response.ClientResourcesManagementMode,\r\n                \r\n                currentHostVersion: response.CurrentHostVersion,\r\n                hostEnableCompositeFiles: response.HostEnableCompositeFiles,\r\n                hostMinifyCss: response.HostMinifyCss,\r\n                hostMinifyJs: response.HostMinifyJs,\r\n                \r\n                currentPortalVersion: response.CurrentPortalVersion,\r\n                portalEnableCompositeFiles: response.PortalEnableCompositeFiles,\r\n                portalMinifyCss: response.PortalMinifyCss,\r\n                portalMinifyJs: response.PortalMinifyJs,\r\n                \r\n                cachingProviderOptions: convertKeyValueToLabelValue(response.CachingProviderOptions),\r\n                pageStatePersistenceOptions: convertKeyValueToLabelValue(response.PageStatePersistenceOptions),\r\n                moduleCacheProviders: convertKeyValueToLabelValue(response.ModuleCacheProviders),\r\n                pageCacheProviders: convertKeyValueToLabelValue(response.PageCacheProviders),\r\n                cacheSettingOptions: convertKeyValueToLabelValue(response.CacheSettingOptions),\r\n                authCacheabilityOptions: convertKeyValueToLabelValue(response.AuthCacheabilityOptions),\r\n                unauthCacheabilityOptions: convertKeyValueToLabelValue(response.UnauthCacheabilityOptions)\r\n            };\r\n        });\r\n};\r\n\r\nconst save = function (performanceSettings) {\r\n    const request = {\r\n        CachingProvider: performanceSettings.cachingProvider, \r\n        PageStatePersistence: performanceSettings.pageStatePersistence, \r\n        ModuleCacheProvider: performanceSettings.moduleCacheProvider, \r\n        PageCacheProvider: performanceSettings.pageCacheProvider, \r\n        CacheSetting: performanceSettings.cacheSetting, \r\n        AuthCacheability: performanceSettings.authCacheability, \r\n        UnauthCacheability: performanceSettings.unauthCacheability, \r\n        SslForCacheSynchronization: performanceSettings.sslForCacheSynchronization, \r\n        ClientResourcesManagementMode: performanceSettings.clientResourcesManagementMode\r\n    };\r\n    \r\n    if (performanceSettings.clientResourcesManagementMode === \"h\") {\r\n        request.CurrentHostVersion = performanceSettings.currentHostVersion; \r\n        request.HostEnableCompositeFiles = performanceSettings.hostEnableCompositeFiles; \r\n        request.HostMinifyCss = performanceSettings.hostMinifyCss; \r\n        request.HostMinifyJs = performanceSettings.hostMinifyJs; \r\n        \r\n    } else {\r\n        request.CurrentPortalVersion = performanceSettings.currentPortalVersion; \r\n        request.PortalEnableCompositeFiles = performanceSettings.portalEnableCompositeFiles; \r\n        request.PortalMinifyCss = performanceSettings.portalMinifyCss; \r\n        request.PortalMinifyJs = performanceSettings.portalMinifyJs;\r\n    }\r\n    \r\n    return serviceFramework.post(\"ServerSettingsPerformance\", \"UpdatePerformanceSettings\", request);\r\n};\r\n\r\nconst incrementVersion = function (version, isGlobalSetting) {\r\n    if (isGlobalSetting) {\r\n        return serviceFramework.post(\"ServerSettingsPerformance\", \"IncrementHostVersion\");\r\n    }\r\n    \r\n    return serviceFramework.post(\"ServerSettingsPerformance\", \"IncrementPortalVersion\");\r\n};\r\n\r\nconst performanceTabService = {\r\n    getPerformanceSettings: getPerformanceSettings,\r\n    save: save,\r\n    incrementVersion: incrementVersion\r\n};\r\n\r\nexport default performanceTabService; ","import {performanceTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport performanceTabService from \"../services/performanceTabService\";\r\nimport localization from \"../localization\";\r\n\r\nconst performanceTabActions = {\r\n    loadPerformanceSettings() {       \r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.LOAD_PERFORMANCE_TAB               \r\n            });        \r\n            \r\n            performanceTabService.getPerformanceSettings().then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.LOADED_PERFORMANCE_TAB,\r\n                    payload: {\r\n                        performanceSettings: response\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_LOADING_PERFORMANCE_TAB,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageLoadingPerformanceTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n    changePerformanceSettingsValue(key, value) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE,\r\n                payload: { \r\n                    field: key,\r\n                    value\r\n                }\r\n            });  \r\n        };\r\n    },\r\n    incrementVersion(version, isGlobalSettings) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.INCREMENT_VERSION               \r\n            });        \r\n            \r\n            const key = isGlobalSettings ? \"currentHostVersion\" : \"currentPortalVersion\" ;\r\n            performanceTabService.incrementVersion(version, isGlobalSettings).then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.INCREMENTED_VERSION,\r\n                    payload: {\r\n                        success: response.success\r\n                    }\r\n                });  \r\n                dispatch({\r\n                    type: ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE,\r\n                    payload: { \r\n                        field: key,\r\n                        value: parseInt(version, 10) + 1\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_INCREMENTING_VERSION,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageIncrementingVersion\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    },\r\n    save(performanceSettings) {\r\n        return (dispatch) => {\r\n            dispatch({\r\n                type: ActionTypes.SAVE_PERFORMANCE_SETTINGS               \r\n            });        \r\n            \r\n            performanceTabService.save(performanceSettings).then(response => {\r\n                dispatch({\r\n                    type: ActionTypes.SAVED_PERFORMANCE_SETTINGS,\r\n                    payload: {\r\n                        success: response.success\r\n                    }\r\n                });  \r\n            }).catch(() => {\r\n                dispatch({\r\n                    type: ActionTypes.ERROR_SAVING_PERFORMANCE_SETTINGS,\r\n                    payload: {\r\n                        errorMessage: localization.get(\"errorMessageSavingPerformanceSettingsTab\")\r\n                    }\r\n                });\r\n            });        \r\n        };\r\n    }\r\n};\r\n\r\nexport default performanceTabActions;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { GridSystem, GridCell, InputGroup, Button, Label } from \"@dnnsoftware/dnn-react-common\";\r\nimport RadioButtonBlock from \"../common/RadioButtonBlock\";\r\nimport DropdownBlock from \"../common/DropdownBlock\";\r\nimport InfoBlock from \"../common/InfoBlock\";\r\nimport SwitchBlock from \"../common/SwitchBlock\";\r\nimport WarningBlock from \"../common/WarningBlock\";\r\nimport localization from \"../../localization\";\r\nimport PerformanceTabActions from \"../../actions/performanceTab\";\r\nimport utils from \"../../utils\";\r\n\r\n\r\nclass Performance extends Component {\r\n    UNSAFE_componentWillMount() {\r\n        this.props.onRetrievePerformanceSettings();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\r\n            utils.notify(newProps.infoMessage);\r\n        }\r\n\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    getClientResourcesManagementModeOptions() {\r\n        return [\r\n            {\r\n                label: localization.get(\"PerformanceTab_GlobalClientResourcesManagementMode\"),\r\n                value: \"h\"\r\n            },\r\n            {\r\n                label: this.props.performanceSettings.portalName,\r\n                value: \"p\"\r\n            }\r\n        ];\r\n    }\r\n\r\n    onSave() {\r\n        const {props} = this;\r\n\r\n        props.onSave(props.performanceSettings);\r\n    }\r\n\r\n    confirmHandler() {\r\n        const {props} = this;\r\n        const isGlobalSettings = props.performanceSettings.clientResourcesManagementMode === \"h\";\r\n        if (isGlobalSettings) {\r\n            props.onIncrementVersion(props.performanceSettings.currentHostVersion, isGlobalSettings);\r\n        } else {\r\n            props.onIncrementVersion(props.performanceSettings.currentPortalVersion, isGlobalSettings);\r\n        }\r\n    }\r\n\r\n    cancelHandler() {\r\n\r\n    }\r\n\r\n    onIncrementVersion() {\r\n        utils.confirm(localization.get(\"PerformanceTab_PortalVersionConfirmMessage\"),\r\n            localization.get(\"PerformanceTab_PortalVersionConfirmYes\"),\r\n            localization.get(\"PerformanceTab_PortalVersionConfirmNo\"),\r\n            this.confirmHandler.bind(this), this.cancelHandler.bind(this));\r\n    }\r\n\r\n    onChangeField(key, event) {\r\n        let value = event;\r\n        if (event && event.value) {\r\n            value = event.value;\r\n        } else if (event && event.target && event.target.value) {\r\n            value = event.target.value;\r\n        }\r\n\r\n        this.props.onChangePerformanceSettingsValue(key, value);\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n        if (props.isLoading) {\r\n            return null;\r\n        }\r\n\r\n        const areGlobalSettings = props.performanceSettings.clientResourcesManagementMode === \"h\";\r\n        let enableCompositeFiles;\r\n        let minifyCss;\r\n        let minifyJs;\r\n        let enableCompositeFilesKey;\r\n        let minifyCssKey;\r\n        let minifyJsKey;\r\n        let version;\r\n        let versionLocalizationKey;\r\n        if (areGlobalSettings) {\r\n            enableCompositeFiles = props.performanceSettings.hostEnableCompositeFiles;\r\n            minifyCss = props.performanceSettings.hostMinifyCss;\r\n            minifyJs = props.performanceSettings.hostMinifyJs;\r\n            enableCompositeFilesKey = \"hostEnableCompositeFiles\";\r\n            minifyCssKey = \"hostMinifyCss\";\r\n            minifyJsKey = \"hostMinifyJs\";\r\n            version = props.performanceSettings.currentHostVersion;\r\n            versionLocalizationKey = \"PerformanceTab_CurrentHostVersion\";\r\n        } else {\r\n            enableCompositeFiles = props.performanceSettings.portalEnableCompositeFiles;\r\n            minifyCss = props.performanceSettings.portalMinifyCss;\r\n            minifyJs = props.performanceSettings.portalMinifyJs;\r\n            enableCompositeFilesKey = \"portalEnableCompositeFiles\";\r\n            minifyCssKey = \"portalMinifyCss\";\r\n            minifyJsKey = \"portalMinifyJs\";\r\n            version = props.performanceSettings.currentPortalVersion;\r\n            versionLocalizationKey = \"PerformanceTab_CurrentPortalVersion\";\r\n        }\r\n\r\n        return <div className=\"dnn-servers-info-panel-big performanceSettingTab\">\r\n            <WarningBlock label={localization.get(\"PerformanceTab_AjaxWarning\")} />\r\n            <GridSystem>\r\n                <div className=\"leftPane\">\r\n                    <div className=\"tooltipAdjustment\">\r\n                        {props.performanceSettings.pageStatePersistenceOptions &&\r\n                            <RadioButtonBlock options={props.performanceSettings.pageStatePersistenceOptions}\r\n                                label={localization.get(\"PerformanceTab_PageStatePersistenceMode\")}\r\n                                tooltip={localization.get(\"PerformanceTab_PageStatePersistenceMode.Help\")}\r\n                                onChange={this.onChangeField.bind(this, \"pageStatePersistence\")}\r\n                                value={props.performanceSettings.pageStatePersistence} />\r\n                        }\r\n                        {props.performanceSettings.cacheSettingOptions &&\r\n                            <DropdownBlock\r\n                                tooltip={localization.get(\"PerformanceTab_CachingProvider.Help\")}\r\n                                label={localization.get(\"PerformanceTab_CachingProvider\")}\r\n                                options={props.performanceSettings.cachingProviderOptions}\r\n                                value={props.performanceSettings.cachingProvider}\r\n                                onSelect={this.onChangeField.bind(this, \"cachingProvider\")} />\r\n                        }\r\n                        {props.performanceSettings.moduleCacheProviders &&\r\n                            <DropdownBlock\r\n                                tooltip={localization.get(\"PerformanceTab_ModuleCacheProviders.Help\")}\r\n                                label={localization.get(\"PerformanceTab_ModuleCacheProviders\")}\r\n                                options={props.performanceSettings.moduleCacheProviders}\r\n                                value={props.performanceSettings.moduleCacheProvider}\r\n                                onSelect={this.onChangeField.bind(this, \"moduleCacheProvider\")} />\r\n                        }\r\n                        {props.performanceSettings.pageCacheProviders &&\r\n                            <DropdownBlock\r\n                                tooltip={localization.get(\"PerformanceTab_PageCacheProviders.Help\")}\r\n                                label={localization.get(\"PerformanceTab_PageCacheProviders\")}\r\n                                options={props.performanceSettings.pageCacheProviders}\r\n                                value={props.performanceSettings.pageCacheProvider}\r\n                                onSelect={this.onChangeField.bind(this, \"pageCacheProvider\")} />\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightPane\">\r\n                    {props.performanceSettings.cacheSettingOptions &&\r\n                        <DropdownBlock\r\n                            tooltip={localization.get(\"PerformanceTab_CacheSetting.Help\")}\r\n                            label={localization.get(\"PerformanceTab_CacheSetting\")}\r\n                            options={props.performanceSettings.cacheSettingOptions}\r\n                            value={props.performanceSettings.cacheSetting}\r\n                            onSelect={this.onChangeField.bind(this, \"cacheSetting\")} />\r\n                    }\r\n                    {props.performanceSettings.authCacheabilityOptions &&\r\n                        <DropdownBlock\r\n                            tooltip={localization.get(\"PerformanceTab_AuthCacheability.Help\")}\r\n                            label={localization.get(\"PerformanceTab_AuthCacheability\")}\r\n                            options={props.performanceSettings.authCacheabilityOptions}\r\n                            value={props.performanceSettings.authCacheability}\r\n                            onSelect={this.onChangeField.bind(this, \"authCacheability\")} />\r\n                    }\r\n                    {props.performanceSettings.unauthCacheabilityOptions &&\r\n                        <DropdownBlock\r\n                            tooltip={localization.get(\"PerformanceTab_UnauthCacheability.Help\")}\r\n                            label={localization.get(\"PerformanceTab_UnauthCacheability\")}\r\n                            options={props.performanceSettings.unauthCacheabilityOptions}\r\n                            value={props.performanceSettings.unauthCacheability}\r\n                            onSelect={this.onChangeField.bind(this, \"unauthCacheability\")} />\r\n                    }\r\n                    <SwitchBlock label={localization.get(\"PerformanceTab_SslForCacheSyncrhonization\")}\r\n                        onText={localization.get(\"SwitchOn\")}\r\n                        offText={localization.get(\"SwitchOff\")}\r\n                        tooltip={localization.get(\"PerformanceTab_SslForCacheSyncrhonization.Help\")}\r\n                        value={props.performanceSettings.sslForCacheSynchronization}\r\n                        onChange={this.onChangeField.bind(this, \"sslForCacheSynchronization\")} />\r\n                </div>\r\n            </GridSystem>\r\n            <GridCell className=\"dnn-servers-grid-panel newSection\" style={{ paddingLeft: 0 }}>\r\n                <Label className=\"header-title\" label={localization.get(\"PerformanceTab_ClientResourceManagementTitle\")} />\r\n            </GridCell>\r\n            <WarningBlock label={localization.get(\"PerformanceTab_MinifactionWarning\")} />\r\n            <GridSystem>\r\n                <div className=\"leftPane\">\r\n                    <InputGroup>\r\n                        <Label className=\"title lowerCase\"\r\n                            label={localization.get(\"PerformanceTab_ClientResourceManagementInfo\")}\r\n                            style={{ width: \"auto\" }} />\r\n                    </InputGroup>\r\n                    <div className=\"currentHostVersion\">\r\n                        <InfoBlock label={localization.get(versionLocalizationKey)}\r\n                            text={version} />\r\n                    </div>\r\n                    <Button type=\"secondary\" style={{ marginBottom: \"40px\" }} disable={props.incrementingVersion}\r\n                        onClick={this.onIncrementVersion.bind(this)}>{localization.get(\"PerformanceTab_IncrementVersion\")}</Button>\r\n                </div>\r\n                <div className=\"rightPane borderSeparation\">\r\n                    <RadioButtonBlock options={this.getClientResourcesManagementModeOptions()}\r\n                        label={localization.get(\"PerformanceTab_ClientResourcesManagementMode\")}\r\n                        tooltip={localization.get(\"PerformanceTab_ClientResourcesManagementMode.Help\")}\r\n                        onChange={this.onChangeField.bind(this, \"clientResourcesManagementMode\")}\r\n                        value={props.performanceSettings.clientResourcesManagementMode} />\r\n                    <SwitchBlock label={localization.get(\"PerformanceTab_EnableCompositeFiles\")}\r\n                        onText={localization.get(\"SwitchOn\")}\r\n                        offText={localization.get(\"SwitchOff\")}\r\n                        tooltip={localization.get(\"PerformanceTab_EnableCompositeFiles.Help\")}\r\n                        value={enableCompositeFiles}\r\n                        onChange={this.onChangeField.bind(this, enableCompositeFilesKey)}\r\n                        isGlobal={areGlobalSettings} \r\n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\r\n                    <SwitchBlock label={localization.get(\"PerformanceTab_MinifyCss\")}\r\n                        onText={localization.get(\"SwitchOn\")}\r\n                        offText={localization.get(\"SwitchOff\")}\r\n                        tooltip={localization.get(\"PerformanceTab_MinifyCss.Help\")}\r\n                        value={enableCompositeFiles ? minifyCss : false}\r\n                        readOnly={!enableCompositeFiles}\r\n                        onChange={this.onChangeField.bind(this, minifyCssKey)}\r\n                        isGlobal={areGlobalSettings} \r\n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\r\n                    <SwitchBlock label={localization.get(\"PerformanceTab_MinifyJs\")}\r\n                        onText={localization.get(\"SwitchOn\")}\r\n                        offText={localization.get(\"SwitchOff\")}\r\n                        tooltip={localization.get(\"PerformanceTab_MinifyJs.Help\")}\r\n                        value={enableCompositeFiles ? minifyJs : false}\r\n                        readOnly={!enableCompositeFiles}\r\n                        onChange={this.onChangeField.bind(this, minifyJsKey)}\r\n                        isGlobal={areGlobalSettings} \r\n                        globalTooltipStyle={{margin: \"8px 0px 0px 5px\"}}/>\r\n                </div>\r\n            </GridSystem>\r\n            <div className=\"clear\" />\r\n            <div className=\"buttons-panel\">\r\n                <Button type=\"primary\" disabled={props.isSaving}\r\n                    onClick={this.onSave.bind(this)}>{localization.get(\"SaveButtonText\")}</Button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nPerformance.propTypes = {\r\n    performanceSettings: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool,\r\n    isSaving: PropTypes.bool,\r\n    incrementingVersion: PropTypes.bool,\r\n    errorMessage: PropTypes.string,\r\n    onRetrievePerformanceSettings: PropTypes.func.isRequired,\r\n    onChangePerformanceSettingsValue: PropTypes.func.isRequired,\r\n    onSave: PropTypes.func.isRequired,\r\n    onIncrementVersion: PropTypes.func.isRequired,\r\n    infoMessage: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        performanceSettings: state.performanceTab.performanceSettings,\r\n        loading: state.performanceTab.saving,\r\n        isSaving: state.performanceTab.saving,\r\n        incrementingVersion: state.performanceTab.incrementingVersion,\r\n        errorMessage: state.logsTab.errorMessage,\r\n        infoMessage: state.performanceTab.infoMessage\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators({\r\n            onRetrievePerformanceSettings: PerformanceTabActions.loadPerformanceSettings,\r\n            onChangePerformanceSettingsValue: PerformanceTabActions.changePerformanceSettingsValue,\r\n            onSave: PerformanceTabActions.save,\r\n            onIncrementVersion: PerformanceTabActions.incrementVersion\r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Performance);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { GridCell, Dropdown } from \"@dnnsoftware/dnn-react-common\";\r\nimport Localization from \"../../localization\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport LogsTabActions from \"../../actions/logsTab\";\r\nimport utils from \"../../utils\";\r\n\r\nimport \"./tabs.less\";\r\n\r\nclass Logs extends Component {\r\n    componentDidMount() {\r\n        if (this.props.logs.length > 0) {\r\n            return;\r\n        }\r\n        this.props.onRetrieveLogsServerInfo();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { props } = this;\r\n\r\n        return <div className=\"dnn-servers-info-panel-big logsTab\">\r\n            <GridCell columnSize={60} className=\"log-file-cell\">\r\n                {props.logs.length > 0 &&\r\n                    <Dropdown\r\n                        withBorder={false}\r\n                        label={Localization.get(\"Logs_LogFilesDefaultOption\")}\r\n                        options={props.logs}\r\n                        value={props.selectedLog}\r\n                        prependWith={Localization.get(\"Logs_LogFiles\")}\r\n                        onSelect={this.props.onSelectedLog}\r\n                    />}\r\n            </GridCell>\r\n            <div className=\"clear\" />\r\n            <div>\r\n                <Scrollbars\r\n                    renderTrackHorizontal={props => <div {...props} className=\"track-horizontal\"/>}\r\n                    style={{ height: 500 }} >\r\n                    <div className=\"log-file-display\">{props.logData}</div>\r\n                </Scrollbars>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nLogs.propTypes = {\r\n    logs: PropTypes.arrayOf(PropTypes.object),\r\n    errorMessage: PropTypes.string,\r\n    selectedLog: PropTypes.string,\r\n    onRetrieveLogsServerInfo: PropTypes.func.isRequired,\r\n    onSelectedLog: PropTypes.func,\r\n    logData: PropTypes.func\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        logs: state.logsTab.logs,\r\n        errorMessage: state.logsTab.errorMessage,\r\n        selectedLog: state.logsTab.selectedLog,\r\n        logData: state.logsTab.logData\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators({\r\n            onRetrieveLogsServerInfo: LogsTabActions.loadLogsServerInfo,\r\n            onSelectedLog: LogsTabActions.loadSelectedLog\r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);","import React, {Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { DnnTabs as Tabs, PersonaBarPageBody } from \"@dnnsoftware/dnn-react-common\";\r\nimport {\r\n    pagination as PaginationActions\r\n} from \"../../actions\";\r\nimport \"./style.less\";\r\nimport Localization from \"../../localization\";\r\nimport ApplicationTab from \"../Tabs/Application\";\r\nimport WebTab from \"../Tabs/Web\";\r\nimport DatabaseTab from \"../Tabs/Database/Database\";\r\nimport SmtpServerTab from \"../Tabs/SmtpServer\";\r\nimport PerformanceTab from \"../Tabs/Performance\";\r\nimport LogsTab from \"../Tabs/Logs\";\r\nimport application from \"../../globals/application\";\r\nimport utils from \"../../utils\";\r\n\r\nclass Body extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleSelect = this.handleSelect.bind(this);        \r\n    }   \r\n\r\n    handleSelect(index) {\r\n        const {props} = this;\r\n        props.dispatch(PaginationActions.loadTab(index));\r\n    }\r\n\r\n    insertElementsInArray(array, elements, propertyNameHasIndex, propertyNameHasValue) {\r\n        for (let i = 0; i < elements.length; i++) {\r\n            let index = this.getInteger(elements[i][propertyNameHasIndex]);\r\n            \r\n            if (index || index === 0) {\r\n                index = Math.min(array.length, Math.max(0, index));\r\n                array.splice(index, 0, elements[i][propertyNameHasValue]);\r\n            }            \r\n        }\r\n    }\r\n\r\n    getInteger(value) {\r\n        if (value === 0) {\r\n            return 0;\r\n        }\r\n        if (value) {\r\n            return parseInt(value.toString());\r\n        }\r\n        return value;\r\n    }  \r\n   \r\n    render() {\r\n        const {props} = this;       \r\n        const isHost = utils.isHostUser();\r\n        let registeredTabs = application.getRegisteredServerTabs();\r\n        if (!isHost) {\r\n            registeredTabs = registeredTabs.filter(function (tab) {\r\n                return !tab.isHostOnlyVisible;\r\n            });\r\n        }        \r\n\r\n        const systemInfoTabHeaders = isHost ? [Localization.get(\"tabApplicationTitle\"), Localization.get(\"tabWebTitle\"), Localization.get(\"tabDatabaseTitle\")] \r\n            : [Localization.get(\"tabApplicationTitle\")];\r\n        const systemInfoTabBody = isHost ? [<ApplicationTab key=\"first\" />, <WebTab key=\"second\" />, <DatabaseTab key=\"third\" />]\r\n            :  [<ApplicationTab key=\"first\" />]; \r\n        const serverSettingsTabHeaders = isHost ? [Localization.get(\"tabSmtpServerTitle\"), Localization.get(\"tabPerformanceTitle\"), Localization.get(\"tabLogsTitle\")]\r\n            : [Localization.get(\"tabSmtpServerTitle\")];\r\n        const serverSettingsTabBody = isHost ? [<SmtpServerTab key=\"first\" />, <PerformanceTab key=\"second\" />, <LogsTab key=\"third\" />]\r\n            : [<SmtpServerTab key=\"first\" />];\r\n        const mainTabHeaders = [Localization.get(\"tabSystemInfoTitle\"), Localization.get(\"tabServerSettingsTitle\")];\r\n        const mainTabBody = [\r\n            <Tabs tabHeaders={systemInfoTabHeaders}\r\n                type=\"secondary\" \r\n                key=\"first\">\r\n                {systemInfoTabBody}\r\n            </Tabs>,\r\n            <Tabs tabHeaders={serverSettingsTabHeaders}\r\n                type=\"secondary\"\r\n                key=\"second\">\r\n                {serverSettingsTabBody}\r\n            </Tabs>];\r\n        \r\n        this.insertElementsInArray(mainTabHeaders, registeredTabs.filter(\r\n            function (tab) {\r\n                return !tab.parentIndex && tab.parentIndex !== 0;\r\n            }), \"order\", \"title\");\r\n        this.insertElementsInArray(mainTabBody, registeredTabs.filter(\r\n            function (tab) {\r\n                return !tab.parentIndex && tab.parentIndex !== 0;\r\n            }), \"order\", \"component\");\r\n\r\n        this.insertElementsInArray(systemInfoTabHeaders, registeredTabs.filter(\r\n            function (tab) {\r\n                return tab.parentIndex === 0;\r\n            }), \"order\", \"title\");\r\n        this.insertElementsInArray(systemInfoTabBody, registeredTabs.filter(\r\n            function (tab) {\r\n                return tab.parentIndex === 0;\r\n            }), \"order\", \"component\");\r\n\r\n        this.insertElementsInArray(serverSettingsTabHeaders, registeredTabs.filter(\r\n            function (tab) {\r\n                return tab.parentIndex === 1;\r\n            }), \"order\", \"title\");\r\n        this.insertElementsInArray(serverSettingsTabBody, registeredTabs.filter(\r\n            function (tab) {\r\n                return tab.parentIndex === 1;\r\n            }), \"order\", \"component\");\r\n\r\n        return (\r\n            <PersonaBarPageBody>\r\n                <Tabs className=\"dnn-servers-tab-panel\" \r\n                    onSelect={this.handleSelect}\r\n                    selectedIndex={props.tabIndex}\r\n                    tabHeaders={mainTabHeaders}>\r\n                    {mainTabBody}                   \r\n                </Tabs>\r\n                \r\n            </PersonaBarPageBody>\r\n        );\r\n    }\r\n}\r\n\r\nBody.propTypes = {\r\n    dispatch: PropTypes.func.isRequired,\r\n    tabIndex: PropTypes.number   \r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tabIndex: state.pagination.tabIndex\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Body);","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, PersonaBarPageHeader, PersonaBarPage } from \"@dnnsoftware/dnn-react-common\";\r\nimport Body from \"./Body/Body\";\r\nimport localization from \"../localization\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ServerActions from \"../actions/server\";\r\nimport utils from \"../utils\";\r\n\r\nconst restartAppButtonStyle = {\r\n    \"marginRight\": \"10px\"\r\n};\r\n\r\nclass App extends Component { \r\n\r\n    UNSAFE_componentWillReceiveProps(newProps) {       \r\n        if (this.props.infoMessage !== newProps.infoMessage && newProps.infoMessage) {\r\n            utils.notify(newProps.infoMessage);\r\n        }\r\n\r\n        if (newProps.reloadPage) {\r\n            location.reload();\r\n            return;\r\n        }\r\n        if (this.props.errorMessage !== newProps.errorMessage && newProps.errorMessage) {\r\n            utils.notifyError(newProps.errorMessage);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {props} = this;\r\n        const buttonVisible = utils.isHostUser();\r\n        if (this.props.reloadPage) {\r\n            window.top.location.reload();\r\n            return;\r\n        }\r\n        return (\r\n            <div className=\"servers-app personaBar-mainContainer\">\r\n                <PersonaBarPage isOpen={true}>\r\n                    <PersonaBarPageHeader title=\"Servers\">\r\n                        {buttonVisible && \r\n                            <Button type=\"secondary\" size=\"large\" \r\n                                onClick={props.onClearCacheClicked}>{localization.get(\"clearCacheButtonLabel\")}</Button>\r\n                        }\r\n                        {buttonVisible && \r\n                            <Button type=\"secondary\" size=\"large\" \r\n                                onClick={props.onRestartApplicationClicked} \r\n                                style={restartAppButtonStyle}>{localization.get(\"restartApplicationButtonLabel\")}</Button>\r\n                        }                        \r\n                    </PersonaBarPageHeader>\r\n                    <Body />\r\n                </PersonaBarPage>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nApp.propTypes = {\r\n    dispatch: PropTypes.func,\r\n    selectedPage: PropTypes.number,\r\n    selectedPageVisibleIndex: PropTypes.number,\r\n    onRestartApplicationClicked: PropTypes.func.isRequired,\r\n    reloadPage: PropTypes.bool.isRequired,\r\n    errorMessage: PropTypes.string,\r\n    infoMessage: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        selectedPage: state.visiblePanel.selectedPage,\r\n        selectedPageVisibleIndex: state.visiblePanel.selectedPageVisibleIndex,\r\n        reloadPage: state.server.reloadPage,\r\n        errorMessage: state.server.errorMessage,\r\n        infoMessage: state.server.infoMessage\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        ...bindActionCreators ({\r\n            onRestartApplicationClicked: ServerActions.restartApplication,\r\n            onClearCacheClicked: ServerActions.clearCache\r\n        }, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React, {Component} from \"react\";\r\nimport App from \"../components/App\";\r\n\r\nclass Root extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"servers-root\">\r\n                <App/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Root;","import Localization from \"../localization\";\r\n\r\nconst regExpPositiveIntegerValue = /^(0|[1-9]\\d*)$/;\r\n\r\nexport default function validateFields(field, value) {\r\n    const errors = {};\r\n\r\n    if (field === \"smtpConnectionLimit\" || field === \"smtpMaxIdleTime\" || field === \"messageSchedulerBatchSize\" ) {\r\n        if (!regExpPositiveIntegerValue.test(value)) {\r\n            errors[field] = Localization.get(\"NoIntegerValueError\");\r\n        }\r\n        else {\r\n            errors[field] = undefined;\r\n        }\r\n    }\r\n\r\n    return errors;\r\n}","import { combineReducers } from \"redux\";\r\nimport pagination from \"./paginationReducer\";\r\nimport visiblePanel from \"./visiblePanelReducer\";\r\nimport webTab from \"./webTabReducer\";\r\nimport server from \"./serverReducer\";\r\nimport applicationTab from \"./applicationTabReducer\";\r\nimport databaseTab from \"./databaseTabReducer\";\r\nimport smtpServer from \"./smtpServerTabReducer\";\r\nimport logsTab from \"./logsTabReducer\";\r\nimport performanceTab from \"./performanceTabReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    pagination,\r\n    visiblePanel,\r\n    webTab,\r\n    server,\r\n    applicationTab,\r\n    databaseTab,\r\n    smtpServer,\r\n    logsTab,\r\n    performanceTab\r\n});\r\n\r\nexport default rootReducer;\r\n","import {pagination as ActionTypes}  from \"../constants/actionTypes\";\r\nexport default function pagination(state = {\r\n    tabIndex: 0\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_TAB_DATA:\r\n            return { ...state,\r\n                tabIndex: action.payload.index\r\n            };\r\n        default:\r\n            return state;      \r\n    }\r\n}\r\n","import {visiblePanel as ActionTypes}  from \"../constants/actionTypes\";\r\nexport default function visiblePanel(state = {\r\n    selectedPage: 0\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.SELECT_PANEL:\r\n            return { ...state,\r\n                selectedPage: action.payload.selectedPage\r\n            };     \r\n        default:\r\n            return state;  \r\n    }\r\n}\r\n","import {webTab as ActionTypes}  from \"../constants/actionTypes\";\r\n\r\nexport default function webTabReducer(state = {\r\n    webServerInfo: {},\r\n    errorMessage: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_WEB_TAB:\r\n            return { ...state,\r\n                webServerInfo: {},\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_WEB_TAB:\r\n            return { ...state,\r\n                webServerInfo: action.payload.webServerInfo,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_WEB_TAB:\r\n            return { ...state,\r\n                webServerInfo: {},\r\n                errorMessage:  action.payload.errorMessage\r\n            };  \r\n        default:\r\n            return state;      \r\n    }\r\n}","import {server as ActionTypes}  from \"../constants/actionTypes\";\r\nimport localization from \"../localization\";\r\n\r\nexport default function webTabReducer(state = {\r\n    reloadPage: false,\r\n    infoMessage: \"\",\r\n    errorMessage: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.REQUEST_RESTART_APPLICATION:\r\n            return { ...state,\r\n                reloadPage: false,\r\n                infoMessage: \"\",\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.END_REQUEST_RESTART_APPLICATION:\r\n            return { ...state,\r\n                reloadPage: true,\r\n                infoMessage: localization.get(\"infoMessageRestartingApplication\"),\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_REQUEST_RESTART_APPLICATION:\r\n            return { ...state,\r\n                reloadPage: false,\r\n                infoMessage: \"\",\r\n                errorMessage:  action.payload.errorMessage\r\n            };\r\n        case ActionTypes.REQUEST_CLEAR_CACHE:\r\n            return { ...state,\r\n                reloadPage: false,\r\n                infoMessage: \"\",\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.END_REQUEST_CLEAR_CACHE:\r\n            return { ...state,\r\n                reloadPage: true,\r\n                infoMessage: localization.get(\"infoMessageClearingCache\"),\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_REQUEST_CLEAR_CACHE:\r\n            return { ...state,\r\n                reloadPage: false,\r\n                infoMessage: \"\",\r\n                errorMessage:  action.payload.errorMessage\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {applicationTab as ActionTypes}  from \"../constants/actionTypes\";\r\n\r\nexport default function webTabReducer(state = {\r\n    applicationInfo: {},\r\n    isApplicationInfoLoaded: false,\r\n    errorMessage: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_APPLICATION_TAB:\r\n            return { ...state,\r\n                applicationInfo: {},\r\n                isApplicationInfoLoaded: false,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_APPLICATION_TAB:\r\n            return { ...state,\r\n                applicationInfo: action.payload.applicationInfo,\r\n                isApplicationInfoLoaded: true,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_APPLICATION_TAB:\r\n            return { ...state,\r\n                applicationInfo: {},\r\n                isApplicationInfoLoaded: false,\r\n                errorMessage:  action.payload.errorMessage\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {databaseTab as ActionTypes}  from \"../constants/actionTypes\";\r\n\r\nexport default function webTabReducer(state = {\r\n    databaseServerInfo: {},\r\n    errorMessage: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_DATABASE_TAB:\r\n            return { ...state,\r\n                databaseServerInfo: {},\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_DATABASE_TAB:\r\n            return { ...state,\r\n                databaseServerInfo: action.payload.databaseServerInfo,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_DATABASE_TAB:\r\n            return { ...state,\r\n                databaseServerInfo: {},\r\n                errorMessage:  action.payload.errorMessage\r\n            }; \r\n        default:\r\n            return state;     \r\n    }\r\n}","import { smtpServerTab as ActionTypes } from \"../constants/actionTypes\";\r\nimport validateFields from \"../validation/validationSmtpServerTab\";\r\nimport utils from \"../utils\";\r\nimport localization from \"../localization\";\r\n\r\nexport default function smtpServerTabReducer(state = {\r\n    smtpServerInfo: {},\r\n    errorMessage: \"\",\r\n    infoMessage: \"\",\r\n    errors: {}\r\n}, action) { \r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_SMTP_SERVER_TAB:\r\n            return { ...state,\r\n                smtpServerInfo: {},\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_SMTP_SERVER_TAB:\r\n            return { ...state,\r\n                smtpServerInfo: action.payload.smtpServerInfo,\r\n                errorMessage: \"\",\r\n                errors: {}\r\n            };\r\n        case ActionTypes.ERROR_LOADING_SMTP_SERVER_TAB:\r\n            return { ...state,\r\n                smtpServerInfo: {},\r\n                errorMessage: action.payload.errorMessage\r\n            };\r\n        case ActionTypes.CHANGE_SMTP_SERVER_MODE: {\r\n            let errors = {};\r\n            if (action.payload.smtpServeMode === \"h\") {             \r\n                if (utils.isHostUser()) {\r\n                    const smtpSettings = state.smtpServerInfo.host;\r\n                    errors = {                        \r\n                        ...validateFields(\"smtpConnectionLimit\", smtpSettings.smtpConnectionLimit),\r\n                        ...validateFields(\"smtpMaxIdleTime\", smtpSettings.smtpMaxIdleTime),\r\n                        ...validateFields(\"messageSchedulerBatchSize\", smtpSettings.messageSchedulerBatchSize)\r\n                    };\r\n                }\r\n            } else {\r\n                const smtpSettings = state.smtpServerInfo.site;\r\n                errors = {                        \r\n                    ...validateFields(\"smtpConnectionLimit\", smtpSettings.smtpConnectionLimit),\r\n                    ...validateFields(\"smtpMaxIdleTime\", smtpSettings.smtpMaxIdleTime)\r\n                };\r\n            }\r\n\r\n            return { ...state,\r\n                smtpServerInfo: {\r\n                    ...state.smtpServerInfo,\r\n                    smtpServerMode: action.payload.smtpServeMode\r\n                }, \r\n                errors\r\n            };\r\n        }\r\n        case ActionTypes.CHANGE_SMTP_AUTHENTICATION: {\r\n            if (state.smtpServerInfo.smtpServerMode === \"h\") {\r\n                return { ...state,\r\n                    smtpServerInfo: {...state.smtpServerInfo,\r\n                        host: {...state.smtpServerInfo.host,\r\n                            smtpAuthentication: action.payload.smtpAuthentication\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            return { ...state,\r\n                smtpServerInfo: {...state.smtpServerInfo,\r\n                    site: {...state.smtpServerInfo.site,\r\n                        smtpAuthentication: action.payload.smtpAuthentication\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        case ActionTypes.CHANGE_SMTP_CONFIGURATION_VALUE: {\r\n            const field = action.payload.field;\r\n            const value = action.payload.value;\r\n            const smtpServerInfo = {\r\n                ...state.smtpServerInfo\r\n            };\r\n            if (field === \"messageSchedulerBatchSize\") {\r\n                smtpServerInfo.host = {...state.smtpServerInfo.host };\r\n                smtpServerInfo.host[field] = value;\r\n            } else {\r\n                if (state.smtpServerInfo.smtpServerMode === \"h\") {\r\n                    smtpServerInfo.host = {...state.smtpServerInfo.host };\r\n                    smtpServerInfo.host[field] = value;\r\n                } else {\r\n                    smtpServerInfo.site = {...state.smtpServerInfo.site };\r\n                    smtpServerInfo.site[field] = value;\r\n                }\r\n            }\r\n\r\n            return { ...state, smtpServerInfo,\r\n                errors: {\r\n                    ...(state.errors),\r\n                    ...validateFields(field, value)\r\n                }\r\n            };\r\n        }\r\n        case ActionTypes.UPDATE_SMTP_SERVER_SETTINGS:\r\n            return { ...state,\r\n                errorMessage:  \"\",\r\n                infoMessage: \"\"\r\n            };\r\n        case ActionTypes.UPDATED_SMTP_SERVER_SETTINGS: \r\n            return { ...state,\r\n                errorMessage: \"\",\r\n                infoMessage: localization.get(\"SaveConfirmationMessage\")\r\n            };\r\n        case ActionTypes.ERROR_UPDATING_SMTP_SERVER_SETTINGS:\r\n            return { ...state,\r\n                errorMessage: action.payload.errorMessage,\r\n                infoMessage: \"\"\r\n            };\r\n\r\n        case ActionTypes.SEND_TEST_EMAIL:\r\n            return { ...state,\r\n                errorMessage:  \"\",\r\n                infoMessage: \"\"\r\n            };\r\n        case ActionTypes.SENT_TEST_EMAIL: \r\n            return { ...state,\r\n                errorMessage: action.payload.success ? \"\" : action.payload.errorMessage,\r\n                infoMessage: action.payload.success ? action.payload.infoMessage : \"\"\r\n            };\r\n        case ActionTypes.ERROR_SENDING_TEST_EMAIL:\r\n            return { ...state,\r\n                errorMessage: action.payload.errorMessage,\r\n                infoMessage: \"\"\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {logsTab as ActionTypes}  from \"../constants/actionTypes\";\r\n\r\nexport default function webTabReducer(state = {\r\n    logs: {},\r\n    selectedLog: \"\",\r\n    errorMessage: \"\",\r\n    logData: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_LOGS_TAB:\r\n            return { ...state,\r\n                logs: {},\r\n                selectedLog: \"\",\r\n                errorMessage: \"\",\r\n                logData: \"\"\r\n            };\r\n        case ActionTypes.LOADED_LOGS_TAB:\r\n            return { ...state,\r\n                logs: action.payload.logs,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_LOGS_TAB:\r\n            return { ...state,\r\n                logs: {},\r\n                errorMessage:  action.payload.errorMessage\r\n            }; \r\n        \r\n        case ActionTypes.LOAD_LOG:\r\n            return { ...state,\r\n                selectedLog: action.payload.log,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_LOG:\r\n            return { ...state,\r\n                logData: action.payload.log,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_LOG:\r\n            return { ...state,\r\n                errorMessage:  action.payload.errorMessage\r\n            }; \r\n        default:\r\n            return state;     \r\n    }\r\n}","import {performanceTab as ActionTypes}  from \"../constants/actionTypes\";\r\nimport localization from \"../localization\";\r\n\r\nexport default function webTabReducer(state = {\r\n    performanceSettings: {},\r\n    pageStatePersistenceMode: \"\",\r\n    errorMessage: \"\",\r\n    loading: false,\r\n    saving: false,\r\n    incrementingVersion: false,\r\n    infoMessage: \"\"\r\n}, action) {\r\n    switch (action.type) {\r\n        case ActionTypes.LOAD_PERFORMANCE_TAB:\r\n            return { ...state,\r\n                performanceSettings: {},\r\n                loading: true,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.LOADED_PERFORMANCE_TAB:\r\n            return { ...state,\r\n                performanceSettings: action.payload.performanceSettings,\r\n                loading: false,\r\n                errorMessage: \"\"\r\n            };\r\n        case ActionTypes.ERROR_LOADING_PERFORMANCE_TAB:\r\n            return { ...state,\r\n                performanceSettings: {},\r\n                loading: false,\r\n                errorMessage:  action.payload.errorMessage\r\n            }; \r\n        case ActionTypes.CHANGE_PERFORMANCE_SETTINGS_VALUE: {\r\n            const field = action.payload.field;\r\n            const value = action.payload.value;\r\n            const performanceSettings = {\r\n                ...state.performanceSettings\r\n            };\r\n        \r\n            performanceSettings[field] = value;\r\n            return { ...state, performanceSettings};\r\n        }\r\n        case ActionTypes.SAVE_PERFORMANCE_SETTINGS:\r\n            return { ...state,\r\n                saving: true,\r\n                errorMessage: \"\",\r\n                infoMessage: \"\"\r\n            }; \r\n        case ActionTypes.SAVED_PERFORMANCE_SETTINGS: \r\n            return { ...state,\r\n                saving: false,\r\n                errorMessage: \"\",\r\n                infoMessage: localization.get(\"SaveConfirmationMessage\")\r\n            };\r\n        case ActionTypes.ERROR_SAVING_PERFORMANCE_SETTINGS:\r\n            return { ...state,\r\n                saving: false,\r\n                errorMessage: action.payload.errorMessage,\r\n                infoMessage: \"\"\r\n            };\r\n        case ActionTypes.INCREMENT_VERSION:\r\n            return { ...state,\r\n                incrementingVersion: true,\r\n                infoMessage: \"\"\r\n            }; \r\n        case ActionTypes.INCREMENTED_VERSION: \r\n            return { ...state,\r\n                incrementingVersion: false,\r\n                infoMessage: localization.get(\"VersionIncrementedConfirmation\")\r\n            };\r\n        case ActionTypes.ERROR_INCREMENTING_VERSION:\r\n            return { ...state,\r\n                incrementingVersion: false,\r\n                errorMessage: action.payload.errorMessage,\r\n                infoMessage: \"\"\r\n            };\r\n        default:\r\n            return state;     \r\n    }\r\n}","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nexport default function configureStore(initialState) {\r\n\r\n    const middleware = process.env.NODE_ENV !== \"production\" ?\r\n        [require(\"redux-immutable-state-invariant\")(), thunk] :\r\n        [thunk];\r\n\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(...middleware))\r\n    );\r\n    return store;\r\n}\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport application from \"./globals/application\";\r\nimport configureStore from \"./store/configureStore\";\r\nimport App from \"./containers/Root\";\r\n\r\nlet store = configureStore();\r\n\r\napplication.dispatch = store.dispatch;\r\n\r\nwindow.dnn.server =  {\r\n    registerServerTab: application.registerServerTab\r\n};\r\n\r\nconst appContainer = document.getElementById(\"servers-container\");\r\nconst initCallback = appContainer.getAttribute(\"data-init-callback\");\r\napplication.init(initCallback);\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    appContainer\r\n);"],"sourceRoot":""}