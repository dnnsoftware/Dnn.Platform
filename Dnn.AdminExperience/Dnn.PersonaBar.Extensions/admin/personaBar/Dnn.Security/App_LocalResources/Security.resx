<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nav_Security.Text" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="cmdAdd.Text" xml:space="preserve">
    <value>Add New Filter</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Cancel Edit</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Delete Filter</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Edit Filter</value>
  </data>
  <data name="saveRule.Text" xml:space="preserve">
    <value>Update Filter</value>
  </data>
  <data name="Actions.Header" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="IPFilter.Header" xml:space="preserve">
    <value>IP Filter</value>
  </data>
  <data name="AllowIP.Text" xml:space="preserve">
    <value>Allow</value>
  </data>
  <data name="DenyIP.Text" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="CannotDelete.Text" xml:space="preserve">
    <value>You cannot delete that rule, as it would cause the current IP address to be locked out.</value>
  </data>
  <data name="TabLoginSettings.Text" xml:space="preserve">
    <value>Login Settings</value>
  </data>
  <data name="TabMoreSecuritySettings.Text" xml:space="preserve">
    <value>MORE SECURITY SETTINGS</value>
  </data>
  <data name="TabMore.Text" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="TabSecurityBulletins.Text" xml:space="preserve">
    <value>Security Bulletins</value>
  </data>
  <data name="TabSecurityAnalyzer.Text" xml:space="preserve">
    <value>Security Analyzer</value>
  </data>
  <data name="TabSslSettings.Text" xml:space="preserve">
    <value>SSL SETTINGS</value>
  </data>
  <data name="TabMemberAccounts.Text" xml:space="preserve">
    <value>Member Accounts</value>
  </data>
  <data name="TabBasicLoginSettings.Text" xml:space="preserve">
    <value>BASIC LOGIN SETTINGS</value>
  </data>
  <data name="TabMemberSettings.Text" xml:space="preserve">
    <value>MEMBER MANAGEMENT</value>
  </data>
  <data name="TabRegistrationSettings.Text" xml:space="preserve">
    <value>REGISTRATION SETTINGS</value>
  </data>
  <data name="TabIpFilters.Text" xml:space="preserve">
    <value>LOGIN IP FILTERS</value>
  </data>
  <data name="DefaultAuthProvider.Text" xml:space="preserve">
    <value>Default Authentication Provider</value>
  </data>
  <data name="DefaultAuthProvider.Help" xml:space="preserve">
    <value>You can select a default authentication provider for user login.  Only providers that support forms authentication can be selected.</value>
  </data>
  <data name="plAdministrator.Text" xml:space="preserve">
    <value>Primary Administrator</value>
  </data>
  <data name="plAdministrator.Help" xml:space="preserve">
    <value>The Primary Administrator who will receive email notification of member activities.</value>
  </data>
  <data name="Security_RequireValidProfileAtLogin.Help" xml:space="preserve">
    <value>Check this box to require users to update their profile prior to login if the fields required for a valid profile have been modified.</value>
  </data>
  <data name="Security_RequireValidProfileAtLogin.Text" xml:space="preserve">
    <value>Require a valid Profile for Login</value>
  </data>
  <data name="Security_CaptchaLogin.Help" xml:space="preserve">
    <value>Check this box to use CAPTCHA for associating logins. E.g. OpenID, LiveID, CardSpace</value>
  </data>
  <data name="Security_CaptchaLogin.Text" xml:space="preserve">
    <value>Use CAPTCHA for Associating Logins</value>
  </data>
  <data name="Security_CaptchaRetrivePassword.Help" xml:space="preserve">
    <value>Check this box to use CAPTCHA when retrieving passwords.</value>
  </data>
  <data name="Security_CaptchaRetrivePassword.Text" xml:space="preserve">
    <value>Use CAPTCHA to Retrieve Password</value>
  </data>
  <data name="Security_CaptchaChangePassword.Help" xml:space="preserve">
    <value>Check this box to use CAPTCHA to change passwords.</value>
  </data>
  <data name="Security_CaptchaChangePassword.Text" xml:space="preserve">
    <value>Use CAPTCHA to Change Password</value>
  </data>
  <data name="plHideLoginControl.Help" xml:space="preserve">
    <value>Check this box to hide the login link in page.</value>
  </data>
  <data name="plHideLoginControl.Text" xml:space="preserve">
    <value>Hide Login Control</value>
  </data>
  <data name="BasicLoginSettingsUpdateSuccess" xml:space="preserve">
    <value>Login settings have been updated.</value>
  </data>
  <data name="BasicLoginSettingsError" xml:space="preserve">
    <value>Could not update login settings. Please try later.</value>
  </data>
  <data name="Save.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="FilterType.Header" xml:space="preserve">
    <value>FILTER TYPE</value>
  </data>
  <data name="IpAddress.Header" xml:space="preserve">
    <value>IP ADDRESS</value>
  </data>
  <data name="DeleteSuccess.Text" xml:space="preserve">
    <value>The IP filter has been deleted.</value>
  </data>
  <data name="DeleteError.Text" xml:space="preserve">
    <value>Could not delete the IP filter. Please try later.</value>
  </data>
  <data name="IpFilterDeletedWarning.Text" xml:space="preserve">
    <value>Are you sure you want to delete this IP filter?</value>
  </data>
  <data name="Yes.Text" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No.Text" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="plRuleSpecifity.Help" xml:space="preserve">
    <value>Determines whether the rule applies to a single IP address or a range of IP addresses.</value>
  </data>
  <data name="plRuleSpecifity.Text" xml:space="preserve">
    <value>Rule Specificity</value>
  </data>
  <data name="plRuleType.Help" xml:space="preserve">
    <value>Determines whether this rule allows or denies access.</value>
  </data>
  <data name="plRuleType.Text" xml:space="preserve">
    <value>Rule Type</value>
  </data>
  <data name="SingleIP.Text" xml:space="preserve">
    <value>Single IP</value>
  </data>
  <data name="IPRange.Text" xml:space="preserve">
    <value>IP Range</value>
  </data>
  <data name="plFirstIP.Text" xml:space="preserve">
    <value>First IP</value>
  </data>
  <data name="plFirstIP.Help" xml:space="preserve">
    <value>This will either be the single IP to filter, or else will be used with the subnet mask to calculate a range of IP addresses.</value>
  </data>
  <data name="plSubnet.Text" xml:space="preserve">
    <value>Mask</value>
  </data>
  <data name="plSubnet.Help" xml:space="preserve">
    <value>The subnet mask will be combined with the first IP address to calculate a range of IP addresses for filtering.</value>
  </data>
  <data name="IpFilterUpdateSuccess.Text" xml:space="preserve">
    <value>The IP filter has been updated.</value>
  </data>
  <data name="IpFilterUpdateError.Text" xml:space="preserve">
    <value>Could not update the IP filter. Please try later.</value>
  </data>
  <data name="IPFiltersDisabled.Text" xml:space="preserve">
    <value>Login IP filtering is current disabled. Enable IP address checking under Member Accounts to activate</value>
  </data>
  <data name="IPValidation.ErrorMessage" xml:space="preserve">
    <value>Please use a valid IP address/mask.</value>
  </data>
  <data name="LoginSettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="SslSettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="plResetLinkValidity.Text" xml:space="preserve">
    <value>Reset Link Timeout (in Minutes)</value>
  </data>
  <data name="plResetLinkValidity.Help" xml:space="preserve">
    <value>Password reset links are only valid for (in minutes).</value>
  </data>
  <data name="plAdminResetLinkValidity.Text" xml:space="preserve">
    <value>Administrator Reset Link Timeout (in Minutes)</value>
  </data>
  <data name="plAdminResetLinkValidity.Help" xml:space="preserve">
    <value>Time in minutes that password reset links sent by the Site Administrator will be valid for.</value>
  </data>
  <data name="plEnablePasswordHistory.Help" xml:space="preserve">
    <value>Sets whether a list of recently used passwords is maintained and checked to prevent re-use.</value>
  </data>
  <data name="plEnablePasswordHistory.Text" xml:space="preserve">
    <value>Enable Password History</value>
  </data>
  <data name="plNumberPasswords.Text" xml:space="preserve">
    <value>Number of Passwords to Store</value>
  </data>
  <data name="plNumberPasswords.Help" xml:space="preserve">
    <value>Enter the number of passwords to store for reuse check</value>
  </data>
  <data name="plPasswordDays.Text" xml:space="preserve">
    <value>Number of Days Before Password Reuse</value>
  </data>
  <data name="plPasswordDays.Help" xml:space="preserve">
    <value>Enter the length of time, in days, that must pass before a password can be reused</value>
  </data>
  <data name="plEnableBannedList.Text" xml:space="preserve">
    <value>Enable Password Banned List</value>
  </data>
  <data name="plEnableBannedList.Help" xml:space="preserve">
    <value>Check this box to check passwords against a list of banned items.</value>
  </data>
  <data name="plEnableStrengthMeter.Text" xml:space="preserve">
    <value>Enable Password Strength Checking</value>
  </data>
  <data name="plEnableStrengthMeter.Help" xml:space="preserve">
    <value>Sets whether the password strength meter is shown on registration screen</value>
  </data>
  <data name="plEnableIPChecking.Text" xml:space="preserve">
    <value>Enable IP Address Checking</value>
  </data>
  <data name="plEnableIPChecking.Help" xml:space="preserve">
    <value>Sets whether IP address is checked during login</value>
  </data>
  <data name="PasswordConfig_PasswordExpiry.Help" xml:space="preserve">
    <value>Enter the number of days before a user must change their password.  Enter 0 (zero) if the password should never expire.</value>
  </data>
  <data name="PasswordConfig_PasswordExpiry.Text" xml:space="preserve">
    <value>Password Expiry (in Days)</value>
  </data>
  <data name="PasswordConfig_PasswordExpiryReminder.Help" xml:space="preserve">
    <value>Enter the number of days warning users will receive that their password is about to expires.</value>
  </data>
  <data name="PasswordConfig_PasswordExpiryReminder.Text" xml:space="preserve">
    <value>Password Expiry Reminder (in Days)</value>
  </data>
  <data name="MemberSettingsUpdateSuccess.Text" xml:space="preserve">
    <value>The member settings has been updated.</value>
  </data>
  <data name="MemberSettingsError.Text" xml:space="preserve">
    <value>Could not update the member settings. Please try later.</value>
  </data>
  <data name="SslSettingsUpdateSuccess.Text" xml:space="preserve">
    <value>The SSL settings has been updated.</value>
  </data>
  <data name="SslSettingsError.Text" xml:space="preserve">
    <value>Could not update the SSL settings. Please try later.</value>
  </data>
  <data name="MemberSettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="MembershipResetLinkValidity.ErrorMessage" xml:space="preserve">
    <value>Reset link timeouts must be an integer greater than 0 and less than 10000</value>
  </data>
  <data name="AdminMembershipResetLinkValidity.ErrorMessage" xml:space="preserve">
    <value>Administrator reset link timeouts must be an integer greater than 0 and less than 10000.</value>
  </data>
  <data name="MembershipNumberPasswords.ErrorMessage" xml:space="preserve">
    <value>Number of passwords to store must be an integer greater than or equal to 0 and less than 10000.</value>
  </data>
  <data name="MembershipDaysBeforePasswordReuse.ErrorMessage" xml:space="preserve">
    <value>Number of Days Before Password Reuse must be an integer greater than or equal to 0 and less than 10000.</value>
  </data>
  <data name="AutoAccountUnlockDuration.ErrorMessage" xml:space="preserve">
    <value>Auto account unlock duration must be an integer greater than or equal to 0 and less than 1000.</value>
  </data>
  <data name="AsyncTimeout.ErrorMessage" xml:space="preserve">
    <value>Time before timeout must be an integer greater than or equal to 90 and less than 10000.</value>
  </data>
  <data name="PasswordExpiry.ErrorMessage" xml:space="preserve">
    <value>Password expiry must be an integer greater than or equal to 0 and less than 10000.</value>
  </data>
  <data name="PasswordExpiryReminder.ErrorMessage" xml:space="preserve">
    <value>Password expiry reminder must be an integer greater than or equal to 0 and less than 10000.</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Private.Text" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="Public.Text" xml:space="preserve">
    <value>Public</value>
  </data>
  <data name="Verified.Text" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="Standard.Text" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="Custom.Text" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="plUserRegistration.Text" xml:space="preserve">
    <value>User Registration</value>
  </data>
  <data name="plUserRegistration.Help" xml:space="preserve">
    <value>Select the type of user registration, if any, allowed for this site. Private registration requires users to be authorized by the Site Administrator before gaining access to the Registered Users role. Public registration provides immediate access and Verified registration requires verification of the email address provided.</value>
  </data>
  <data name="NoEmail.Text" xml:space="preserve">
    <value>The "Email" field, at minimum, must be included.</value>
  </data>
  <data name="NoDisplayName.Text" xml:space="preserve">
    <value>You have selected the Require Unique Display Name option but you have not included the Display Name in the list of fields.</value>
  </data>
  <data name="ContainsDuplicateAddresses.Text" xml:space="preserve">
    <value>The user base of this site contains duplicate email addresses. If you want to use email addresses as user names you must fix those entries first.</value>
  </data>
  <data name="registrationFormTypeLabel.Help" xml:space="preserve">
    <value>Select the type of Registration Form that you want to use.</value>
  </data>
  <data name="registrationFormTypeLabel.Text" xml:space="preserve">
    <value>Registration Form Type</value>
  </data>
  <data name="Security_DisplayNameFormat.Help" xml:space="preserve">
    <value>Optionally specify a format for display names.  The format can include tokens for dynamic substitution such as [FIRSTNAME] [LASTNAME].  If a display name format is specified, the display name will no longer be editable through the user interface.</value>
  </data>
  <data name="Security_DisplayNameFormat.Text" xml:space="preserve">
    <value>Display Name Format</value>
  </data>
  <data name="Security_UserNameValidation.Help" xml:space="preserve">
    <value>Add your own Validation Expression, which is used to check the validity of the user name provided.  If you change this from the default you should update the message that a user would see when they enter an invalid user name using the localization editor in Settings - Site Settings - Languages.</value>
  </data>
  <data name="Security_UserNameValidation.Text" xml:space="preserve">
    <value>User Name Validation</value>
  </data>
  <data name="Security_EmailValidation.Help" xml:space="preserve">
    <value>Optionally modify the Email Validation Expression which is used to check the validity of the email address provided.</value>
  </data>
  <data name="Security_EmailValidation.Text" xml:space="preserve">
    <value>Email Address Validation</value>
  </data>
  <data name="Registration_ExcludeTerms.Help" xml:space="preserve">
    <value>You can define a comma-delimited list of terms that a user cannot use in their user name or display name.</value>
  </data>
  <data name="Registration_ExcludeTerms.Text" xml:space="preserve">
    <value>Excluded Terms</value>
  </data>
  <data name="plEnableRegisterNotification.Help" xml:space="preserve">
    <value>Check this box to send email notification of new user registrations to the Primary Administrator.</value>
  </data>
  <data name="plEnableRegisterNotification.Text" xml:space="preserve">
    <value>Receive User Registration Notification</value>
  </data>
  <data name="Registration_UseAuthProviders.Help" xml:space="preserve">
    <value>Select this option to use authentication providers during registration.  Note that not all providers support this option.</value>
  </data>
  <data name="Registration_UseAuthProviders.Text" xml:space="preserve">
    <value>Use Authentication Providers</value>
  </data>
  <data name="Registration_UseProfanityFilter.Help" xml:space="preserve">
    <value>Check this box to enforce the profanity filter for the user name and display name fields during registration.</value>
  </data>
  <data name="Registration_UseProfanityFilter.Text" xml:space="preserve">
    <value>Use Profanity Filter</value>
  </data>
  <data name="Registration_UseEmailAsUserName.Help" xml:space="preserve">
    <value>Check this box to use the email address as the user name.  If this option is enabled then the user name entry field will not be shown in the registration form.</value>
  </data>
  <data name="Registration_UseEmailAsUserName.Text" xml:space="preserve">
    <value>Use Email Address as Username</value>
  </data>
  <data name="Registration_RequireUniqueDisplayName.Help" xml:space="preserve">
    <value>Optionally require users to use a unique display name.  If a user chooses a name that already exists then a modified name will be suggested.</value>
  </data>
  <data name="Registration_RequireUniqueDisplayName.Text" xml:space="preserve">
    <value>Require Unique Display Name</value>
  </data>
  <data name="Registration_RandomPassword.Help" xml:space="preserve">
    <value>Check this box to generate random passwords during registration, rather than displaying a password entry field.</value>
  </data>
  <data name="Registration_RandomPassword.Text" xml:space="preserve">
    <value>Use Random Password</value>
  </data>
  <data name="Registration_RequireConfirmPassword.Help" xml:space="preserve">
    <value>Check this box to display a password confirmation box on the registration form.</value>
  </data>
  <data name="Registration_RequireConfirmPassword.Text" xml:space="preserve">
    <value>Require Password Confirmation</value>
  </data>
  <data name="Security_RequireValidProfile.Help" xml:space="preserve">
    <value>Check this box if users must complete all required fields including the User Name, First Name, Last Name, Display Name, Email Address and Password fields during registration.</value>
  </data>
  <data name="Security_RequireValidProfile.Text" xml:space="preserve">
    <value>Require a Valid Profile for Registration</value>
  </data>
  <data name="Security_CaptchaRegister.Help" xml:space="preserve">
    <value>Indicate whether this site should use CAPTCHA for registration.</value>
  </data>
  <data name="Security_CaptchaRegister.Text" xml:space="preserve">
    <value>Use CAPTCHA for Registration</value>
  </data>
  <data name="RequiresUniqueEmail.Help" xml:space="preserve">
    <value>Check this box to require each user to provide a unique email address.  This prevents users from registering  multiple times with the same email address.</value>
  </data>
  <data name="RequiresUniqueEmail.Text" xml:space="preserve">
    <value>Requires Unique Email</value>
  </data>
  <data name="PasswordFormat.Help" xml:space="preserve">
    <value>The password format.</value>
  </data>
  <data name="PasswordFormat.Text" xml:space="preserve">
    <value>Password Format</value>
  </data>
  <data name="PasswordRetrievalEnabled.Help" xml:space="preserve">
    <value>Indicates whether users can retrieve their password.</value>
  </data>
  <data name="PasswordRetrievalEnabled.Text" xml:space="preserve">
    <value>Password Retrieval Enabled</value>
  </data>
  <data name="PasswordResetEnabledTitle.Help" xml:space="preserve">
    <value>Indicates whether or not a user can request their password to be reset.  This can only be changed in web.config file.</value>
  </data>
  <data name="PasswordResetEnabledTitle.Text" xml:space="preserve">
    <value>Password Reset Enabled</value>
  </data>
  <data name="MinNonAlphanumericCharactersTitle.Help" xml:space="preserve">
    <value>Indicates the minimum number of special characters in the password.  This can only be changed in web.config file.</value>
  </data>
  <data name="MinNonAlphanumericCharactersTitle.Text" xml:space="preserve">
    <value>Min Non Alphanumeric Characters</value>
  </data>
  <data name="RequiresQuestionAndAnswerTitle.Help" xml:space="preserve">
    <value>Indicates whether a question and answer system is used as part of the registration process.  Can only be changed in web.config file.</value>
  </data>
  <data name="RequiresQuestionAndAnswerTitle.Text" xml:space="preserve">
    <value>Requires Question and Answer</value>
  </data>
  <data name="PasswordStrengthRegularExpressionTitle.Help" xml:space="preserve">
    <value>The regular expression used to evaluate password complexity from the provider specified in the Provider property. This can only be changed in web.config file by adding/altering the passwordStrengthRegularExpression node of AspNetSqlMembershipProvider. Note: this server validation is different from the password strength meter introduced in 7.1.0 which only advises on password strength, whereas this expression is a requirement for new passwords (if it is defined).</value>
  </data>
  <data name="PasswordStrengthRegularExpressionTitle.Text" xml:space="preserve">
    <value>Password Strength Regular Expression</value>
  </data>
  <data name="MaxInvalidPasswordAttemptsTitle.Help" xml:space="preserve">
    <value>Indicates the number of times the wrong password can be entered before account is locked.  This can only be changed in web.config file.</value>
  </data>
  <data name="MaxInvalidPasswordAttemptsTitle.Text" xml:space="preserve">
    <value>Max Invalid Password Attempts</value>
  </data>
  <data name="PasswordAttemptWindowTitle.Help" xml:space="preserve">
    <value>Indicates the length of time an account is locked after failed login attempts.  Can only be changed in web.config file.</value>
  </data>
  <data name="PasswordAttemptWindowTitle.Text" xml:space="preserve">
    <value>Password Attempt Window</value>
  </data>
  <data name="RegistrationSettingsUpdateSuccess.Text" xml:space="preserve">
    <value>The registration settings has been updated.</value>
  </data>
  <data name="RegistrationSettingsError.Text" xml:space="preserve">
    <value>Could not update the registration settings. Please try later.</value>
  </data>
  <data name="RegistrationSettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="registrationFieldsLabel.Help" xml:space="preserve">
    <value>You can specify the list of fields you want to include as a comma-delimited list.  If this setting is used, this will take precedence over the other settings.  The possible fields include user name, email, password, confirm password, display name and all the Profile Properties.</value>
  </data>
  <data name="registrationFieldsLabel.Text" xml:space="preserve">
    <value>Registration Fields:</value>
  </data>
  <data name="GlobalSettingsTab.Text" xml:space="preserve">
    <value>This is a global settings Tab. Changes to the settings will affect all of your sites.</value>
  </data>
  <data name="GlobalSetting.Text" xml:space="preserve">
    <value>This is a global setting. Changes to this setting will affect all of your sites.</value>
  </data>
  <data name="plSSLEnabled.Text" xml:space="preserve">
    <value>SSL Enabled</value>
  </data>
  <data name="plSSLEnabled.Help" xml:space="preserve">
    <value>Check the box if an SSL certificate has been installed for use on this site.</value>
  </data>
  <data name="plSSLEnforced.Text" xml:space="preserve">
    <value>SSL Enforced</value>
  </data>
  <data name="plSSLEnforced.Help" xml:space="preserve">
    <value>Check the box if unsecure pages will not be accessible with SSL (HTTPS).</value>
  </data>
  <data name="plSSLURL.Text" xml:space="preserve">
    <value>SSL URL</value>
  </data>
  <data name="plSSLURL.Help" xml:space="preserve">
    <value>Optionally specify a URL which will be used for secure connections for this site. This is only necessary if you do not have an SSL Certificate installed for your standard site URL. An example would be a shared hosting account where the host provides you with a Shared SSL URL.</value>
  </data>
  <data name="plSTDURL.Text" xml:space="preserve">
    <value>Standard URL</value>
  </data>
  <data name="plSTDURL.Help" xml:space="preserve">
    <value>If an SSL URL is specified above, then specify the Standard URL for unsecure connections.</value>
  </data>
  <data name="plShowCriticalErrors.Help" xml:space="preserve">
    <value>This setting determines if error messages sent via the error querystring parameter should be shown inline in the page.</value>
  </data>
  <data name="plShowCriticalErrors.Text" xml:space="preserve">
    <value>Show Critical Errors on Screen</value>
  </data>
  <data name="plDebugMode.Help" xml:space="preserve">
    <value>Check this box to run the installation in "debug mode". This causes various parts of the application to write more verbose error logs etc. Note: This may lead to performance degradation.</value>
  </data>
  <data name="plDebugMode.Text" xml:space="preserve">
    <value>Debug Mode</value>
  </data>
  <data name="plRememberMe.Text" xml:space="preserve">
    <value>Enable Remember Me on Login Control</value>
  </data>
  <data name="plRememberMe.Help" xml:space="preserve">
    <value>Check this box to display the Remember Login check box on the login control that allows users to stay logged in for multiple visits.</value>
  </data>
  <data name="plAutoAccountUnlock.Text" xml:space="preserve">
    <value>Auto-Unlock Accounts After (Minutes)</value>
  </data>
  <data name="plAutoAccountUnlock.Help" xml:space="preserve">
    <value>After an account is locked out due to unsuccessful login attempts, it can be automatically unlocked with a successful authentication after a certain period of time has elapsed. Enter the number of minutes to wait until the account can be automatically unlocked. Enter "0" to disable the auto-unlock feature.</value>
  </data>
  <data name="plAsyncTimeout.Help" xml:space="preserve">
    <value>Set a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received, the value should between 90-9999 seconds.</value>
  </data>
  <data name="plAsyncTimeout.Text" xml:space="preserve">
    <value>Time Before Timeout (Seconds)</value>
  </data>
  <data name="plMaxUploadSize.Help" xml:space="preserve">
    <value>Maximum size of files that can be uploaded to the site.  The minimum is 12 MB.</value>
  </data>
  <data name="plMaxUploadSize.Text" xml:space="preserve">
    <value>Max Upload Size (MB)</value>
  </data>
  <data name="maxUploadSize.Error" xml:space="preserve">
    <value>Maximum upload size must be between 12 and {0}</value>
  </data>
  <data name="plFileExtensions.Help" xml:space="preserve">
    <value>Enter the extensions (separated by commas) for files that can be uploaded to the site by site administrators.</value>
  </data>
  <data name="plFileExtensions.Text" xml:space="preserve">
    <value>Allowable File Extensions:</value>
  </data>
  <data name="OtherSettingsUpdateSuccess.Text" xml:space="preserve">
    <value>Settings have been updated.</value>
  </data>
  <data name="OtherSettingsError.Text" xml:space="preserve">
    <value>Could not update settings. Please try later.</value>
  </data>
  <data name="OtherSettingsRestoreWarning.Text" xml:space="preserve">
    <value>Are you sure you want to cancel your changes?</value>
  </data>
  <data name="Bulletins.Text" xml:space="preserve">
    <value>BULLETINS</value>
  </data>
  <data name="BulletinsDoNotExist.Text" xml:space="preserve">
    <value>There are currently no Security Bulletins for DotNetNuke Platform version {0}.</value>
  </data>
  <data name="BulletinsExist.Text" xml:space="preserve">
    <value>There are currently {0} Security Bulletins for DotNetNuke Platform version {1}:</value>
  </data>
  <data name="RequestFailed_Admin.Text" xml:space="preserve">
    <value>Could Not Connect To {0}. You Should Verify The Source Address Is Valid And That Your Hosting Provider Has Configured Their Proxy Server Settings Correctly.</value>
  </data>
  <data name="RequestFailed_User.Text" xml:space="preserve">
    <value>News Feed Is Not Available At This Time. Error message: </value>
  </data>
  <data name="TabAuditChecks.Text" xml:space="preserve">
    <value>AUDIT CHECKS</value>
  </data>
  <data name="TabScannerCheck.Text" xml:space="preserve">
    <value>SCANNER CHECK</value>
  </data>
  <data name="TabSuperuserActivity.Text" xml:space="preserve">
    <value>SUPERUSER ACTIVITY</value>
  </data>
  <data name="SuperUserActivityExplaination.Text" xml:space="preserve">
    <value>Below are the SuperUser activities. Look for suspicious activities here. Pay close attention to the Creation and Last Login Dates. </value>
  </data>
  <data name="Username.Text" xml:space="preserve">
    <value>USERNAME</value>
  </data>
  <data name="CreatedDate.Text" xml:space="preserve">
    <value>CREATED DATE</value>
  </data>
  <data name="LastLogin.Text" xml:space="preserve">
    <value>LAST LOGIN</value>
  </data>
  <data name="LastActivityDate.Text" xml:space="preserve">
    <value>LAST ACTIVITY DATE</value>
  </data>
  <data name="SecurityCheck.Text" xml:space="preserve">
    <value>SECURITY CHECK</value>
  </data>
  <data name="Result.Text" xml:space="preserve">
    <value>RESULT</value>
  </data>
  <data name="Notes.Text" xml:space="preserve">
    <value>NOTES</value>
  </data>
  <data name="AuditChecks.Text" xml:space="preserve">
    <value>Audit Checks</value>
  </data>
  <data name="SuperuserActivity.Text" xml:space="preserve">
    <value>Super User Activity</value>
  </data>
  <data name="CheckDebugFailure.Text" xml:space="preserve">
    <value>debug is set to true - consider editing web.config and setting it to false (or use the configuration manager)</value>
  </data>
  <data name="CheckDebugReason.Text" xml:space="preserve">
    <value>If the debug attribute is set to true it impacts performance and can reveal security exception details useful to hackers</value>
  </data>
  <data name="CheckDebugSuccess.Text" xml:space="preserve">
    <value>Not in debug mode. This setting depends on debug value in web.config file.</value>
  </data>
  <data name="cmdCheck.Text" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="cmdSearch.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="plSearchTerm.Text" xml:space="preserve">
    <value>Search term</value>
  </data>
  <data name="cmdModifiedFiles.Text" xml:space="preserve">
    <value>Find Recently Modified Files</value>
  </data>
  <data name="ScannerChecks.Text" xml:space="preserve">
    <value>Search Filesystem and Database</value>
  </data>
  <data name="AuditExplanation.Text" xml:space="preserve">
    <value>Note: the system automatically perform scans for security best practices</value>
  </data>
  <data name="Authorized.Header" xml:space="preserve">
    <value>Authorized</value>
  </data>
  <data name="CheckTracing.Text" xml:space="preserve">
    <value>Tracing is set to true - consider editing web.config and setting it to false (or use the configuration manager)</value>
  </data>
  <data name="CheckTracingReason.Text" xml:space="preserve">
    <value>If the tracing attribute is set to true it allows potential hackers to view site activity</value>
  </data>
  <data name="CheckTracingSuccess.Text" xml:space="preserve">
    <value>Tracing is not enabled</value>
  </data>
  <data name="CreatedDate.Header" xml:space="preserve">
    <value>Created date</value>
  </data>
  <data name="DisplayName.Header" xml:space="preserve">
    <value>Display name</value>
  </data>
  <data name="Email.Header" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="FirstName.Header" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="LastActivityDate.Header" xml:space="preserve">
    <value>Last Activity Date</value>
  </data>
  <data name="LastLogin.Header" xml:space="preserve">
    <value>Last login</value>
  </data>
  <data name="LastName.Header" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="ScannerExplanation.Text" xml:space="preserve">
    <value />
  </data>
  <data name="Username.Header" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="CheckBiographyFailure.Text" xml:space="preserve">
    <value>The field is richtext. Spammers may put links to their website in their biography field. The field type can be changed in Settings -&gt; Site Settings -&gt; Site Behavior -&gt; User Profiles</value>
  </data>
  <data name="CheckBiographyReason.Text" xml:space="preserve">
    <value>The biography field is a common target for spammers as they can add links/html to it. In DNN 7.2.0 this was changed to a multiline textbox which removes this risk.</value>
  </data>
  <data name="CheckBiographySuccess.Text" xml:space="preserve">
    <value>The field is not enabled or is a multiline textbox</value>
  </data>
  <data name="CheckRarelyUsedSuperuserFailure.Text" xml:space="preserve">
    <value>We have found 1 or more superuser accounts that have not been logged in or had activity in six months. Consider deleting them as a best practice</value>
  </data>
  <data name="CheckRarelyUsedSuperuserReason.Text" xml:space="preserve">
    <value>Superuser accounts are the most powerful DNN accounts. As a best practice these should be limited.</value>
  </data>
  <data name="CheckRarelyUsedSuperuserSuccess.Text" xml:space="preserve">
    <value>All superusers are regular users of the system.</value>
  </data>
  <data name="CheckSiteRegistrationFailure.Text" xml:space="preserve">
    <value>One or more websites are using public registration</value>
  </data>
  <data name="CheckSiteRegistrationReason.Text" xml:space="preserve">
    <value>Sites that have public registration enabled are a prime target for spammers.</value>
  </data>
  <data name="CheckSiteRegistrationSuccess.Text" xml:space="preserve">
    <value>All the websites are using non-public registration</value>
  </data>
  <data name="CheckSuperuserOldPasswordFailure.Text" xml:space="preserve">
    <value>At least one superuser account has a password that has not been changed in more than 6 months.</value>
  </data>
  <data name="CheckSuperuserOldPasswordReason.Text" xml:space="preserve">
    <value>Superuser accounts are the most powerful DNN accounts. As a best practice these accounts should have their passwords changed regularly.</value>
  </data>
  <data name="CheckSuperuserOldPasswordSuccess.Text" xml:space="preserve">
    <value>No superuser has a password older than 6 months.</value>
  </data>
  <data name="CheckUnexpectedExtensionsFailure.Text" xml:space="preserve">
    <value>An asp or php extension was found - these may be harmless, but sometimes indicate a site has been exploited and these files are tools. We recommend you evaluate these files carefully.</value>
  </data>
  <data name="CheckUnexpectedExtensionsReason.Text" xml:space="preserve">
    <value>DNN is an asp.net web application. Under normal circumstances other server application extensions such as asp and php should not be in use.</value>
  </data>
  <data name="CheckUnexpectedExtensionsSuccess.Text" xml:space="preserve">
    <value>No unexpected extensions found</value>
  </data>
  <data name="CheckViewstatemacFailure.Text" xml:space="preserve">
    <value>viewstatemac validation is not enabled</value>
  </data>
  <data name="CheckViewstatemacReason.Text" xml:space="preserve">
    <value>A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser. When this property is set to true, the encrypted view state is checked to verify that it has not been tampered with on the client. 
</value>
  </data>
  <data name="CheckViewstatemacSuccess.Text" xml:space="preserve">
    <value>The viewstate is protected via the usage of a MAC</value>
  </data>
  <data name="CheckPurpose.Header" xml:space="preserve">
    <value>Purpose of the check</value>
  </data>
  <data name="Result.Header" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Severity.Header" xml:space="preserve">
    <value>Severity</value>
  </data>
  <data name="CheckBiographyName.Text" xml:space="preserve">
    <value>Check if public profile fields use richtext</value>
  </data>
  <data name="CheckDebugName.Text" xml:space="preserve">
    <value>Check Debug status</value>
  </data>
  <data name="CheckRarelyUsedSuperuserName.Text" xml:space="preserve">
    <value>Check if superuser accounts are rarely active</value>
  </data>
  <data name="CheckSiteRegistrationName.Text" xml:space="preserve">
    <value>Check if site(s) use public registration</value>
  </data>
  <data name="CheckSuperuserOldPasswordName.Text" xml:space="preserve">
    <value>Check if superusers are not regularly changing passwords</value>
  </data>
  <data name="CheckTracingName.Text" xml:space="preserve">
    <value>Check if asp.net tracing is enabled</value>
  </data>
  <data name="CheckUnexpectedExtensionsName.Text" xml:space="preserve">
    <value>Check if asp/php files are found</value>
  </data>
  <data name="CheckDefaultPageName.Text" xml:space="preserve">
    <value>Check if default.aspx or default.aspx.cs files have been modified</value>
  </data>
  <data name="CheckDefaultPageFailure.Text" xml:space="preserve">
    <value>The default page(s) have been modified. We recommend you evaluate these files carefully, they may be modified by a hacker and may contain malicious code. It is best to compare these files with that from a standard install of your product. Ensure that the DNN or Evoq version of your current site matches with the standard site prior to comparison. Either remove the malicious code or restore these files from standard installation.</value>
  </data>
  <data name="CheckDefaultPageReason.Text" xml:space="preserve">
    <value>DNN use default.aspx to load everything, so all requests will load this file when user browse the site, if someone modify this file, it may cause huge risk.</value>
  </data>
  <data name="CheckDefaultPageSuccess.Text" xml:space="preserve">
    <value>The default.aspx and default.aspx.cs pages haven't been modified.</value>
  </data>
  <data name="CheckViewstatemacName.Text" xml:space="preserve">
    <value>Check if viewstate is protected</value>
  </data>
  <data name="NoDatabaseResults.Text" xml:space="preserve">
    <value>Search term was not found in the database</value>
  </data>
  <data name="NoFileResults.Text" xml:space="preserve">
    <value>Search term was not found in any files</value>
  </data>
  <data name="SearchTermRequired.Text" xml:space="preserve">
    <value>Search term is required</value>
  </data>
  <data name="CheckTracingFailure.Text" xml:space="preserve">
    <value>Tracing is enabled - this allows potential hackers to view site activity.</value>
  </data>
  <data name="Filename.Header" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="LastModifiedDate.Header" xml:space="preserve">
    <value>Last Modification Date</value>
  </data>
  <data name="ModifiedFiles.Text" xml:space="preserve">
    <value>Recently Modified Files</value>
  </data>
  <data name="CheckModuleHeaderAndFooterFailure.Text" xml:space="preserve">
    <value>There are modules in your system that have header and footer settings, please review them to make sure no phishing code is present.</value>
  </data>
  <data name="CheckModuleHeaderAndFooterName.Text" xml:space="preserve">
    <value>Check Modules have Header or Footer settings</value>
  </data>
  <data name="CheckModuleHeaderAndFooterReason.Text" xml:space="preserve">
    <value>Hackers may use module's header or footer settings to inject content for phishing attacks.</value>
  </data>
  <data name="CheckModuleHeaderAndFooterSuccess.Text" xml:space="preserve">
    <value>No modules were found that had header or footer values configured.</value>
  </data>
  <data name="CheckDiskAccessName.Text" xml:space="preserve">
    <value>Checks extra drives/folders access permission outside the website folder</value>
  </data>
  <data name="CheckDiskAccessFailure.Text" xml:space="preserve">
    <value>Hackers could access drives/folders outside the website</value>
  </data>
  <data name="CheckDiskAccessReason.Text" xml:space="preserve">
    <value>The user which your website is running under has access to drives and folders outside the website location. A hacker could access these files and either read, write, or do both activities.</value>
  </data>
  <data name="CheckDiskAccessSuccess.Text" xml:space="preserve">
    <value>Hackers cannot access drives/folders outside the website</value>
  </data>
  <data name="HostSettings.Text" xml:space="preserve">
    <value>Host Settings</value>
  </data>
  <data name="ModifiedSettings.Text" xml:space="preserve">
    <value>Recently Modified Settings</value>
  </data>
  <data name="ModuleSettings.Text" xml:space="preserve">
    <value>Module Settings</value>
  </data>
  <data name="PortalSettings.Text" xml:space="preserve">
    <value>Portal Settings</value>
  </data>
  <data name="TabSettings.Text" xml:space="preserve">
    <value>Tab Settings</value>
  </data>
  <data name="ModifiedSettingsExplaination.Text" xml:space="preserve">
    <value />
  </data>
  <data name="ModifiedFilesExplaination.Text" xml:space="preserve">
    <value />
  </data>
  <data name="ModifiedFilesLoadWarning.Text" xml:space="preserve">
    <value>Tool will enumerate all files in your system to show the recently changed files. It may take a while on a site with lots of files.</value>
  </data>
  <data name="CheckPasswordFormatName.Text" xml:space="preserve">
    <value>Check Password Format Setting</value>
  </data>
  <data name="CheckPasswordFormatFailure.Text" xml:space="preserve">
    <value>The setting passwordFormat is not set to Hashed in web.config - consider editing web.config and setting it to Hashed (or use the configuration manager). More information can be found &lt;a href="http://www.dnnsoftware.com/wiki/hashed-passwords" target="_blank"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="CheckPasswordFormatReason.Text" xml:space="preserve">
    <value>If the value is Clear or Encrypters, hacker can retrieve password from user's password from database.</value>
  </data>
  <data name="CheckPasswordFormatSuccess.Text" xml:space="preserve">
    <value>The passwordFormat is set as Hashed in web.config</value>
  </data>
  <data name="CheckAllowableFileExtensionsFailure.Text" xml:space="preserve">
    <value>Either aspx, asp or php files were found in allowable file extensions setting. This will allow hackers to upload code. Remove these extensions at Settings &amp;gt; More &amp;gt; More security settings &amp;gt; Allowable File Extensions</value>
  </data>
  <data name="CheckAllowableFileExtensionsName.Text" xml:space="preserve">
    <value>Check if there are any harmful extensions allowed by the file uploader</value>
  </data>
  <data name="CheckAllowableFileExtensionsReason.Text" xml:space="preserve">
    <value>Either aspx, asp or php files were found in allowable file extensions setting. This will allow hackers to upload code. Remove these extensions at Settings &amp;gt; More &amp;gt; More security settings &amp;gt; Allowable File Extensions</value>
  </data>
  <data name="CheckAllowableFileExtensionsSuccess.Text" xml:space="preserve">
    <value>The allowable file extensions is setup correctly.</value>
  </data>
  <data name="CheckFileExists.Error" xml:space="preserve">
    <value>Current SQL Server account can execute xp_fileexist which can detect whether files exist on server.</value>
  </data>
  <data name="CheckSqlRiskFailure.Text" xml:space="preserve">
    <value>The current SQL connection can execute dangerous command(s) on your SQL Server.</value>
  </data>
  <data name="CheckSqlRiskName.Text" xml:space="preserve">
    <value>Check Current SQL Account Permission</value>
  </data>
  <data name="CheckSqlRiskReason.Text" xml:space="preserve">
    <value>If the SQL Server account isn't configured properly, it may leave risk and hackers can exploit the server by running special script.</value>
  </data>
  <data name="CheckSqlRiskSuccess.Text" xml:space="preserve">
    <value>The SQL Server account configured correctly.</value>
  </data>
  <data name="ExecuteCommand.Error" xml:space="preserve">
    <value>Current SQL Server account can execute xp_cmdshell which will running command line in sql server system.</value>
  </data>
  <data name="GetFolderTree.Error" xml:space="preserve">
    <value>Current SQL Server account can execute xp_dirtree which can see the server's folders structure.</value>
  </data>
  <data name="RegRead.Error" xml:space="preserve">
    <value>Current SQL Server account can read registry values. You need to check the permissions of xp_regread, xp_regwrite, xp_regenumkeys, xp_regenumvalues, xp_regdeletekey, xp_regdeletekey, xp_regdeletevalue, xp_instance_regread, xp_instance_regwrite, xp_instance_regenumkeys, xp_instance_regenumvalues, xp_instance_regdeletekey, xp_instance_regdeletekey, xp_instance_regdeletevalue stored procedures.</value>
  </data>
  <data name="SysAdmin.Error" xml:space="preserve">
    <value>Current SQL Server account is 'sysadmin'.</value>
  </data>
  <data name="HighRiskFiles.Text" xml:space="preserve">
    <value>High Risk Files</value>
  </data>
  <data name="LowRiskFiles.Text" xml:space="preserve">
    <value>Low Risk Files</value>
  </data>
  <data name="Pass.Text" xml:space="preserve">
    <value>PASS</value>
  </data>
  <data name="Fail.Text" xml:space="preserve">
    <value>FAIL</value>
  </data>
  <data name="Alert.Text" xml:space="preserve">
    <value>ALERT</value>
  </data>
  <data name="FileName.Text" xml:space="preserve">
    <value>FILE NAME</value>
  </data>
  <data name="LastWriteTime.Text" xml:space="preserve">
    <value>LAST MODIFIED DATE</value>
  </data>
  <data name="PortalId.Text" xml:space="preserve">
    <value>PORTAL ID</value>
  </data>
  <data name="TabId.Text" xml:space="preserve">
    <value>TAB ID</value>
  </data>
  <data name="ModuleId.Text" xml:space="preserve">
    <value>MODULE ID</value>
  </data>
  <data name="SettingName.Text" xml:space="preserve">
    <value>SETTING NAME</value>
  </data>
  <data name="SettingValue.Text" xml:space="preserve">
    <value>SETTING VALUE</value>
  </data>
  <data name="UserId.Text" xml:space="preserve">
    <value>USER ID</value>
  </data>
  <data name="SearchPlaceHolder.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchFileSystemResult.Text" xml:space="preserve">
    <value>File System: {0} Files Found</value>
  </data>
  <data name="SearchDatabaseResult.Text" xml:space="preserve">
    <value>Database: {0} Instances Found</value>
  </data>
  <data name="DatabaseInstance.Text" xml:space="preserve">
    <value>DATABASE INSTANCE</value>
  </data>
  <data name="DatabaseValue.Text" xml:space="preserve">
    <value>VALUE</value>
  </data>
  <data name="plSSLOffload.Text" xml:space="preserve">
    <value>SSL Offload Header Value</value>
  </data>
  <data name="plSSLOffload.Help" xml:space="preserve">
    <value>Set the name of the HTTP header that will be checked to see if a network balancer has used SSL Offloading</value>
  </data>
  <data name="BulletinDescription.Text" xml:space="preserve">
    <value>DESCRIPTION</value>
  </data>
  <data name="BulletinLink.Text" xml:space="preserve">
    <value>LINK</value>
  </data>
  <data name="NoneSpecified.Text" xml:space="preserve">
    <value>None Specified</value>
  </data>
  <data name="MinPasswordLengthTitle.Help" xml:space="preserve">
    <value>Indicates the minimum number of characters in the password.  This can only be changed in web.config file.</value>
  </data>
  <data name="MinPasswordLengthTitle.Text" xml:space="preserve">
    <value>Min Password Length</value>
  </data>
  <data name="CheckHiddenSystemFilesFailure.Text" xml:space="preserve">
    <value>There are files marked as system file or hidden in the website folder.</value>
  </data>
  <data name="CheckHiddenSystemFilesName.Text" xml:space="preserve">
    <value>Check Hidden Files</value>
  </data>
  <data name="CheckHiddenSystemFilesReason.Text" xml:space="preserve">
    <value>Hackers may upload rootkits into the website, they marked them as system file or hidden in file system, then you can not see these files in file explorer.</value>
  </data>
  <data name="CheckHiddenSystemFilesSuccess.Text" xml:space="preserve">
    <value>There are no files marked as system file or hidden in the website folder.</value>
  </data>
  <data name="CheckTelerikVulnerabilityFailure.Text" xml:space="preserve">
    <value>The Telerik component vulnerability has not been patched, please go to http://www.dnnsoftware.com/community-blog/cid/155449/critical-security-update--september2017 for detailed information and to download the patch.</value>
  </data>
  <data name="CheckTelerikVulnerabilityName.Text" xml:space="preserve">
    <value>Check if Telerik component has vulnerability.</value>
  </data>
  <data name="CheckTelerikVulnerabilityReason.Text" xml:space="preserve">
    <value>Third party components referenced in core may have vulnerability in old versions and need to be patched.</value>
  </data>
  <data name="CheckTelerikVulnerabilitySuccess.Text" xml:space="preserve">
    <value>Telerik Component already patched.</value>
  </data>
  <data name="UserNotMemberOfRole.Text" xml:space="preserve">
    <value>User not member of {0} role.</value>
  </data>
  <data name="NotValid.Text" xml:space="preserve">
    <value>{0} {1} is not valid.</value>
  </data>
  <data name="Empty.Text" xml:space="preserve">
    <value>{0} should not be empty.</value>
  </data>
  <data name="DeletedTab.Text" xml:space="preserve">
    <value>The tab with this id {0} is deleted.</value>
  </data>
  <data name="Disabled.Text" xml:space="preserve">
    <value>The tab with this id {0} is disable.</value>
  </data>
  <data name="Check.Text" xml:space="preserve">
    <value>[ Check ]</value>
  </data>
  <data name="plForceLogOutAfterPasswordChanged.Text" xml:space="preserve">
    <value>Force Logout After Password Changed</value>
  </data>
  <data name="plForceLogOutAfterPasswordChanged.Help" xml:space="preserve">
    <value>Force user logout in other browsers after the user's password has been changed.</value>
  </data>
  <data name="plDefaultEndUserExtensionWhitelist.Help" xml:space="preserve">
    <value>Default extension list for files that end users are allowed to upload. Admin users can override this, but they can never allow more file types than those set in the master list above. Note this list will be filtered by the list above when saving.</value>
  </data>
  <data name="plDefaultEndUserExtensionWhitelist.Text" xml:space="preserve">
    <value>Default End User Extension Whitelist</value>
  </data>
  <data name="RedirectionMovedToSiteSettings.Text" xml:space="preserve">
    <value>Redirection has been moved to Site Settings</value>
  </data>
  <data name="IncorrectDisplayNameConfiguration.Text" xml:space="preserve">
    <value>The Display Name configuration is not correct. Either provide Display Name Format or include Display Name in the list of fields.</value>
  </data>
</root>