/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/* DNN-6398 */
/************/

UPDATE {databaseOwner}{objectQualifier}HostSettings
  SET SettingValue ='http://www.dnnsoftware.com/help'
  WHERE SettingName='HelpURL'

GO

/* DNN-6758 */
/************/

 ALTER TABLE {databaseOwner}[{objectQualifier}Tabs] ALTER COLUMN IconFile      nVarChar(255);
 ALTER TABLE {databaseOwner}[{objectQualifier}Tabs] ALTER COLUMN IconFileLarge nVarChar(255);

 GO

 /* DNN-5631 */
/*************/

IF  EXISTS (SELECT * FROM sys.Procedures WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}DeleteList]'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}DeleteList]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}DeleteList]
	@ListName  nVarChar( 50), -- Not Null
	@ParentKey nVarChar(150)  -- Not Null
AS
BEGIN
	DELETE L
	 FROM  {databaseOwner}[{objectQualifier}Lists] L
	 WHERE ListName = @ListName 
	   AND {databaseOwner}[{objectQualifier}GetListParentKey](L.ParentID, L.ListName, N'ParentKey',  0) = @ParentKey;
END
GO

 /* DNN-6877 */
/*************/

IF  EXISTS (SELECT * FROM sys.Procedures WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}PurgeScheduleHistory]'))
    DROP PROCEDURE {databaseOwner}[{objectQualifier}PurgeScheduleHistory]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}PurgeScheduleHistory]
AS
BEGIN
DELETE FROM {databaseOwner}[{objectQualifier}schedulehistory] WHERE schedulehistoryid IN (
	SELECT TOP 50000 ScheduleHistoryID FROM {databaseOwner}[{objectQualifier}ScheduleHistory] sh 
		INNER JOIN {databaseOwner}[{objectQualifier}Schedule] s ON s.ScheduleID = sh.ScheduleID AND s.Enabled = 1
	WHERE (
  SELECT COUNT(*) 
  FROM {databaseOwner}[{objectQualifier}ScheduleHistory] sh
  WHERE sh.ScheduleID = {databaseOwner}[{objectQualifier}ScheduleHistory].ScheduleID
  AND sh.StartDate >= {databaseOwner}[{objectQualifier}ScheduleHistory].StartDate
) > s.RetainHistoryNum
		AND s.RetainHistoryNum <> -1
		AND s.ScheduleID = sh.ScheduleID
	ORDER BY ScheduleHistoryID
)
END
GO

 /* DNN-6982 */
/*************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}ContentWorkflows]') AND type in (N'U'))
	EXEC sp_rename '{databaseOwner}{objectQualifier}ContentWorkflows.PortalID ', 'PortalID', 'COLUMN';
GO
/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/
