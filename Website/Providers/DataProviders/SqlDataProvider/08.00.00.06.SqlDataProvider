/******OAUTH Database support******/

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthSettings]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthSettings](
	[SettingId] [int] IDENTITY(1,1) NOT NULL,
	[AuthorizationServerPrivateKey] [nvarchar](max) NULL,
	[ResourceServerDecryptionKey] [nvarchar](max) NULL,
	[AuthorizationServerVerificationKey] [nvarchar](max) NULL,
    CONSTRAINT [PK_{objectQualifier}OAuthSettings] PRIMARY KEY CLUSTERED ([SettingId] ASC)
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthAuthorizations]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthAuthorizations](
	[AuthorizationId] [int] IDENTITY(1,1) NOT NULL,
	[ClientId] [nvarchar](128) NULL,
	[UserId] [nvarchar](128) NULL,
	[ResourceId] [int] NOT NULL,
	[Scope] [nvarchar](max) NULL,
	[CreatedOnUtc] [datetime] NOT NULL,
	[ExpirationDateUtc] [datetime] NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthAuthorizations] PRIMARY KEY CLUSTERED 
(
	[AuthorizationId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthClients]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthClients](
	[Id] [nvarchar](128) NOT NULL,
	[ClientSecret] [nvarchar](max) NULL,
	[Callback] [nvarchar](max) NULL,
	[Name] [nvarchar](max) NULL,
	[ClientType] [int] NOT NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthClients] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthClientScopes') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthClientScopes](
	[ClientId] [nvarchar](128) NOT NULL,
	[ScopeId] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthClientScopes] PRIMARY KEY CLUSTERED 
(
	[ClientId] ASC,
	[ScopeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END

GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthNonces') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthNonces](
	[Context] [nvarchar](500) NOT NULL,
	[Code] [nvarchar](128) NOT NULL,
	[Timestamp] [datetime] NOT NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthNonces] PRIMARY KEY CLUSTERED 
(
	[Context] ASC,
	[Code] ASC,
	[Timestamp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthResources') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthResources](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[Identifier] [nvarchar](max) NULL,
	[AuthenticationTokenName] [nvarchar](max) NULL,
	[AuthenticationUrl] [nvarchar](max) NULL,
	[AuthenticationKey] [nvarchar](max) NULL,
	[PublicTokenEncryptionKey] [nvarchar](max) NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthResources] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthResourceScopes') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthResourceScopes](
	[ResourceId] [int] NOT NULL,
	[ScopeId] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthResourceScopes] PRIMARY KEY CLUSTERED 
(
	[ResourceId] ASC,
	[ScopeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthScopes') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthScopes](
	[Identifier] [nvarchar](128) NOT NULL,
	[Description] [nvarchar](max) NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthScopes] PRIMARY KEY CLUSTERED 
(
	[Identifier] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys](
	[Bucket] [nvarchar](128) NOT NULL,
	[Handle] [nvarchar](max) NULL,
	[ExpiresUtc] [datetime] NOT NULL,
	[Secret] [varbinary](max) NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthSymmetricCryptoKeys] PRIMARY KEY CLUSTERED 
(
	[Bucket] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END

GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthUsers') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}[{objectQualifier}OAuthUsers](
	[Id] [nvarchar](128) NOT NULL,
	[CreateDateUtc] [datetime] NOT NULL,
 CONSTRAINT [PK_{databaseOwner}{objectQualifier}OAuthUsers] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

ALTER TABLE {databaseOwner}[{objectQualifier}OAuthAuthorizations]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}OAuthAuthorizations_{databaseOwner}{objectQualifier}OAuthClients_ClientId] FOREIGN KEY([ClientId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthClients] ([Id])
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthAuthorizations] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}OAuthAuthorizations_{databaseOwner}{objectQualifier}OAuthClients_ClientId]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthAuthorizations]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}Authorizations_{databaseOwner}{objectQualifier}OAuthUsers_UserId] FOREIGN KEY([UserId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthUsers] ([Id])
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthAuthorizations] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}Authorizations_{databaseOwner}{objectQualifier}OAuthUsers_UserId]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthClientScopes]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}ClientScopes_{databaseOwner}{objectQualifier}OAuthClients_ClientId] FOREIGN KEY([ClientId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthClients] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthClientScopes] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}ClientScopes_{databaseOwner}{objectQualifier}OAuthClients_ClientId]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthClientScopes]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}ClientScopes_{databaseOwner}{objectQualifier}OAuthScopes_ScopeId] FOREIGN KEY([ScopeId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthScopes] ([Identifier])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthClientScopes] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}ClientScopes_{databaseOwner}{objectQualifier}OAuthScopes_ScopeId]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthResourceScopes]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}ResourceScopes_{databaseOwner}{objectQualifier}OAuthResources_ResourceId] FOREIGN KEY([ResourceId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthResources] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthResourceScopes] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}ResourceScopes_{databaseOwner}{objectQualifier}OAuthResources_ResourceId]
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthResourceScopes]  WITH CHECK ADD  CONSTRAINT [FK_{databaseOwner}{objectQualifier}ResourceScopes_{databaseOwner}{objectQualifier}OAuthScopes_ScopeId] FOREIGN KEY([ScopeId])
REFERENCES {databaseOwner}[{objectQualifier}OAuthScopes] ([Identifier])
ON DELETE CASCADE
GO
ALTER TABLE {databaseOwner}[{objectQualifier}OAuthResourceScopes] CHECK CONSTRAINT [FK_{databaseOwner}{objectQualifier}ResourceScopes_{databaseOwner}{objectQualifier}OAuthScopes_ScopeId]
GO

INSERT {databaseOwner}[{objectQualifier}OAuthClients] ([Id], [ClientSecret], [Callback], [Name], [ClientType]) VALUES (N'client1', N'clientSecret1', NULL, N'Awesome Client 1', 0)
INSERT {databaseOwner}[{objectQualifier}OAuthUsers] ([Id], [CreateDateUtc]) VALUES (N'test', CAST(N'2015-07-09 00:10:03.870' AS DateTime))
INSERT {databaseOwner}[{objectQualifier}OAuthScopes] ([Identifier], [Description]) VALUES (N'DNN-ALL', N'All DNN OAuth Actions')
SET IDENTITY_INSERT {databaseOwner}[{objectQualifier}OAuthResources] ON 

INSERT {databaseOwner}[{objectQualifier}OAuthResources] ([Id], [Identifier], [AuthenticationTokenName], [AuthenticationUrl], [AuthenticationKey], [PublicTokenEncryptionKey]) VALUES (1, N'Resource1', N'resource-authentication-token', N'/oauthlogin.aspx', N'WebAPIsAreAwesome', N'PFJTQUtleVZhbHVlPjxNb2R1bHVzPjZlZnpYTHNvSmQ5OVVQMjdOQ1hWSnpZSFVtMmlLTUVOSlo2eVpVSFNvTE5uYnFMdENZWjZXaEl3SXY5WVBGeit0Z1AvQWN0dXh3N2VWVzdsU0RaU0IvQU8ySk1kOXJ1MkJ4SHRVaUZVd2pySnNHTlRUS1NhVDFDOTA0YXFaTExaRUxmYnVvVllabnFKWkRvdjlreTkwaHZtTTYwY3FXbkU4TGc2aGZSYlFPOD08L01vZHVsdXM+PEV4cG9uZW50PkFRQUI8L0V4cG9uZW50PjwvUlNBS2V5VmFsdWU+')

SET IDENTITY_INSERT {databaseOwner}[{objectQualifier}OAuthResources] OFF
INSERT {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys] ([Bucket], [Handle], [ExpiresUtc], [Secret]) VALUES (N'https://localhost/dnoa/oauth_authorization_code', N'2oBU', CAST(N'2016-07-09 00:06:56.887' AS DateTime), 0x7E84C6E42D6CE5E18D1E99F8C3DAD40566411CC0FFE77F9D90CD263F5BA538CB)

GO

/******OAUTH support objects Database support******/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}ClientRepositoryGetById]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}ClientRepositoryGetById]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ClientRepositoryGetById]
	@id nvarchar(256)
AS
BEGIN
	select * from {databaseOwner}{objectQualifier}OAuthClients where id=@id
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}ResourceRepositoryFindWithSupportedScopes]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}ResourceRepositoryFindWithSupportedScopes]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}ResourceRepositoryFindWithSupportedScopes]
	@scope nvarchar(256)
AS
BEGIN
	select * from {databaseOwner}{objectQualifier}OAuthResources -- where id=@id
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}AuthorizationRepositoryFindCurrent]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}AuthorizationRepositoryFindCurrent]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}AuthorizationRepositoryFindCurrent]
	 @clientIdentifier nvarchar(256),
	 @userIdentifier nvarchar(256),
	 @afterUtc datetime
AS
BEGIN
	select * from {databaseOwner}{objectQualifier}OAuthAuthorizations where ClientId=@clientIdentifier and CreatedOnUtc<=@afterUtc
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}StoreNonce]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}StoreNonce]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}StoreNonce]
	 @context nvarchar(500),
	 @nonce nvarchar(128),
	 @timestampUtc datetime
AS
BEGIN
	INSERT INTO {databaseOwner}[{objectQualifier}OAuthNonces]
           ([Context]
           ,[Code]
           ,[Timestamp])
     VALUES
           (@context,@nonce,@timestampUtc)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}StoreKey]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}StoreKey]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}StoreKey]
	@Bucket nvarchar(128),
	@Handle nvarchar(max),
	@ExpiresUtc datetime,
	@Secret varbinary(max)
AS
BEGIN
INSERT INTO {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys]
           ([Bucket]
           ,[Handle]
           ,[ExpiresUtc]
           ,[Secret])
     VALUES
           (@Bucket,@Handle,@ExpiresUtc,@Secret)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}SCKRGetKey]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}SCKRGetKey]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}SCKRGetKey]
	@Bucket nvarchar(128),
	@Handle nvarchar(max)
AS
BEGIN
	select * from {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys] where [Bucket]=@Bucket AND [Handle]=@Handle
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}SCKRGetKeys]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}SCKRGetKeys]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}SCKRGetKeys]
	@Bucket nvarchar(128)
AS
BEGIN
	select * from {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys] where [Bucket]=@Bucket 
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}SCKRRemoveKey]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}SCKRRemoveKey]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}SCKRRemoveKey]
	@Bucket nvarchar(128),
	@Handle nvarchar(max)
AS
BEGIN
	DELETE  from {databaseOwner}[{objectQualifier}OAuthSymmetricCryptoKeys] where [Bucket]=@Bucket AND [Handle]=@Handle
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}UserRepositoryGetById]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}UserRepositoryGetById]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}UserRepositoryGetById]
	@id [nvarchar](128) 
AS
BEGIN
	select * from {databaseOwner}{objectQualifier}OAuthUsers where [Id]=@id
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthUserInsert]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}OAuthUserInsert]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}OAuthUserInsert]
	@Id nvarchar(128),
	@CreateDateUtc datetime
AS
BEGIN
	INSERT INTO {databaseOwner}[{objectQualifier}OAuthUsers]
           ([Id]
           ,[CreateDateUtc])
     VALUES (@Id,@CreateDateUtc)
END
GO


IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}OAuthAuthorizationInsert]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}OAuthAuthorizationInsert]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}OAuthAuthorizationInsert]
@ClientId [nvarchar](128) ,
@UserId [nvarchar](128) ,
@ResourceId [int]  ,
@Scope [nvarchar] ,
@CreatedOnUtc [datetime]  ,
@ExpirationDateUtc [datetime] 
AS
BEGIN

INSERT {databaseOwner}[{objectQualifier}OAuthAuthorizations]([ClientId], [UserId], [ResourceId], [Scope], [CreatedOnUtc], [ExpirationDateUtc])
VALUES (@ClientId, @UserId, @ResourceId, @Scope, @CreatedOnUtc, NULL)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}ClientInsert]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}ClientInsert]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}ClientInsert]
@ClientId [nvarchar](128) ,
@ClientSecret nvarchar(max) ,
@Callback nvarchar(max)  ,
@Name nvarchar(max) ,
@ClientType [int]  
AS
BEGIN

INSERT {databaseOwner}[{objectQualifier}OAuthClients]([Id],[ClientSecret],[Callback],[Name],[ClientType])
VALUES (@ClientId, @ClientSecret, null, @Name, @ClientType)
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}ClientDelete]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}ClientDelete]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}ClientDelete]
@ClientId [nvarchar](128) 
AS
BEGIN

delete from {databaseOwner}[{objectQualifier}OAuthClients] where Id=@ClientId
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetOAuthSettings]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}GetOAuthSettings]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetOAuthSettings]
AS
BEGIN

SELECT * from {databaseOwner}[{objectQualifier}OAuthSettings] 
END
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}InsertOAuthSettings]') AND type in (N'P', N'PC'))
	DROP PROCEDURE {databaseOwner}[{objectQualifier}InsertOAuthSettings]
GO
CREATE PROCEDURE {databaseOwner}[{objectQualifier}InsertOAuthSettings]
@AuthorizationServerPrivateKey nvarchar(max),
@ResourceServerDecryptionKey nvarchar(max),
@AuthorizationServerVerificationKey nvarchar(max)
AS
BEGIN

INSERT INTO {databaseOwner}[{objectQualifier}OAuthSettings] ([AuthorizationServerPrivateKey],[ResourceServerDecryptionKey] ,[AuthorizationServerVerificationKey])
VALUES (@AuthorizationServerPrivateKey,@ResourceServerDecryptionKey,@AuthorizationServerVerificationKey)
END
GO

/* DNN-7475 - Remove Vendors */
/*****************************/

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}AddAffiliate]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}AddAffiliate
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}AddBanner]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}AddBanner
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}AddVendor]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}AddVendor
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}AddVendorClassification]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}AddVendorClassification
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DeleteAffiliate]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DeleteAffiliate
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DeleteBanner]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DeleteBanner
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DeleteVendor]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DeleteVendor
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}DeleteVendorClassification]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}DeleteVendorClassification
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}FindBanners]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}FindBanners
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}FindBanners]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}FindBanners
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetAffiliate]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetAffiliate
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetBanner]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetBanner
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetVendor]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetVendor
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetAffiliates]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetAffiliates
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetBannerGroups]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetBannerGroups
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetBanners]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetBanners
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetVendors]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetVendors
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetVendorClassifications]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetVendorClassifications
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetVendorsByEmail]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetVendorsByEmail
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}GetVendorsByName]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}GetVendorsByName
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateAffiliate]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateAffiliate
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateAffiliateStats]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateAffiliateStats
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateBanner]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateBanner
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateBannerClickThrough]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateBannerClickThrough
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateBannerViews]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateBannerViews
GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}UpdateVendor]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
    DROP PROCEDURE {databaseOwner}{objectQualifier}UpdateVendor
GO