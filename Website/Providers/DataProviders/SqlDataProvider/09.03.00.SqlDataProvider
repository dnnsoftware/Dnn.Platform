/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

IF EXISTS (SELECT * FROM dbo.sysobjects
	WHERE id = object_id(N'{databaseOwner}[{objectQualifier}HostSettings]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
	IF NOT EXISTS (SELECT * FROM {databaseOwner}[{objectQualifier}HostSettings] WHERE [SettingName] = N'PurgeEventLogBatchCount')
		INSERT INTO {databaseOwner}[{objectQualifier}HostSettings] 
			([SettingName]
			,[SettingValue]
			,[SettingIsSecure]
			,[CreatedByUserID]
			,[CreatedOnDate]
			,[LastModifiedByUserID]
			,[LastModifiedOnDate])
		VALUES (N'PurgeEventLogBatchCount', N'150000', 0, -1, GETDATE(), NULL, NULL)
END

GO

IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'{databaseOwner}[{objectQualifier}PurgeEventLog]') AND OBJECTPROPERTY(id, N'IsPROCEDURE') = 1)
  DROP PROCEDURE {databaseOwner}[{objectQualifier}PurgeEventLog]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}PurgeEventLog]
AS
	DECLARE @PurgeBatchCount INT = 150000
	DECLARE @PurgeBatchCountSettingName NVARCHAR(50) = N'PurgeEventLogBatchCount'
	SELECT @PurgeBatchCount = 
		CASE WHEN ISNUMERIC(SettingValue) > 0 
			THEN CAST(SettingValue AS INT)
			ELSE @PurgeBatchCount 
		END
	FROM {databaseOwner}[{objectQualifier}HostSettings]
	WHERE SettingName = @PurgeBatchCountSettingName

	;WITH logcounts AS
	(  
	  SELECT TOP(@PurgeBatchCount)
		LogConfigID, 
		ROW_NUMBER() OVER(PARTITION BY LogConfigID ORDER BY LogCreateDate DESC) AS logEventSequence	
	  FROM {databaseOwner}[{objectQualifier}EventLog]
	)
	DELETE lc
	FROM logcounts lc
		INNER JOIN {databaseOwner}[{objectQualifier}EventLogConfig] elc ON elc.ID = lc.LogConfigID
	WHERE elc.KeepMostRecent <> -1
		AND lc.logEventSequence > elc.KeepMostRecent
GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/