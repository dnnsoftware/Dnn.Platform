-- DNN-7629  Add DB Unique restriction to SubscriptionName

;WITH Duplicate_SubscriptionTypes AS 
(
	SELECT MIN(SubscriptionTypeId) MinSubscriptionTypeId, SubscriptionName, COUNT(*) [Count]
	FROM {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes]
	GROUP BY SubscriptionName 
	HAVING count(*) > 1
)

UPDATE S1
 SET [SubscriptionTypeId] = D.MinSubscriptionTypeId
 FROM {databaseOwner}[{objectQualifier}CoreMessaging_Subscriptions] S1, Duplicate_SubscriptionTypes D
WHERE [SubscriptionTypeId] IN 
	(
		SELECT S2.[SubscriptionTypeId] 
		FROM {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes] S2
		WHERE S2.SubscriptionName = D.[SubscriptionName]
	)
    AND [SubscriptionTypeId] <> D.MinSubscriptionTypeId
GO

;WITH Duplicate_SubscriptionTypes AS 
(
	SELECT MIN(SubscriptionTypeId) MinSubscriptionTypeId, SubscriptionName, COUNT(*) [Count]
	FROM {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes]
	GROUP BY SubscriptionName 
	HAVING count(*) > 1
)

DELETE ST
FROM {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes] ST, Duplicate_SubscriptionTypes D
WHERE ST.SubscriptionName = D.[SubscriptionName] AND ST.SubscriptionTypeId <> D.MinSubscriptionTypeId
GO

IF  EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes]') AND name = N'IX_{objectQualifier}CoreMessaging_SubscriptionTypes_SubscriptionName')
	DROP INDEX [IX_{objectQualifier}CoreMessaging_SubscriptionTypes_SubscriptionName] ON {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes]
GO

CREATE UNIQUE NONCLUSTERED INDEX [IX_{objectQualifier}CoreMessaging_SubscriptionTypes_SubscriptionName] ON {databaseOwner}[{objectQualifier}CoreMessaging_SubscriptionTypes] 
(
	[SubscriptionName]
)
GO

-- END DNN-7629
