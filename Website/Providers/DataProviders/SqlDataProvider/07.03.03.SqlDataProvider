/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

/********************************************************
 * TABLE: SearchDeletedItems
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}SearchDeletedItems]', N'U') IS NULL
BEGIN
	CREATE TABLE {databaseOwner}[{objectQualifier}SearchDeletedItems] (
		[DateCreated] [datetime] NOT NULL DEFAULT GetUtcDate(),
		[document] nvarchar(max) NULL
	);

    CREATE INDEX [IX_{objectQualifier}SearchDeletedItems_DateCreated] ON {databaseOwner}[{objectQualifier}SearchDeletedItems]
	(
		[DateCreated]
	);
END
GO

/********************************************************
 * SPROC: SearchDeletedItems_Add
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}SearchDeletedItems_Add]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}SearchDeletedItems_Add]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}SearchDeletedItems_Add]
	@document nvarchar(max)
AS
BEGIN
	INSERT INTO {databaseOwner}{objectQualifier}SearchDeletedItems
		   (  document )
	VALUES ( @document )
END
GO

/********************************************************
 * SPROC: SearchDeletedItems_DeleteProcessed
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}SearchDeletedItems_DeleteProcessed]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}SearchDeletedItems_DeleteProcessed]
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SearchDeletedItems_DeleteProcessed
    @CutoffTime	DATETIME
AS
BEGIN
	DELETE FROM {databaseOwner}{objectQualifier}SearchDeletedItems
	WHERE [DateCreated] < @CutoffTime
END
GO

/********************************************************
 * SPROC: SearchDeletedItems_Select
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}SearchDeletedItems_Select]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}SearchDeletedItems_Select]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}SearchDeletedItems_Select]
    @CutoffTime	DATETIME
AS
BEGIN
	SELECT document
	FROM {databaseOwner}{objectQualifier}SearchDeletedItems
	WHERE [DateCreated] < @CutoffTime
END
GO


/********************************************************
 * SPROC: GetPortalSetting (fixing CultureCode use, DNN-5742
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetPortalSetting]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}GetPortalSetting]
GO


CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetPortalSetting]
    @PortalID    Int,		-- Not Null
    @SettingName nVarChar(50),	-- Not Null
    @CultureCode nVarChar(50)	-- Not Null
AS
BEGIN
	SELECT
		SettingName,
		CASE WHEN Lower(SettingValue) Like 'fileid=%'
		 THEN {databaseOwner}[{objectQualifier}FilePath](SettingValue)
		 ELSE SettingValue 
		END   AS SettingValue,
		CreatedByUserID,
		CreatedOnDate,
		LastModifiedByUserID,
		LastModifiedOnDate,
		CultureCode
	 FROM  {databaseOwner}[{objectQualifier}PortalSettings]
	 WHERE PortalID    = @PortalID
	   AND SettingName = @SettingName
	   AND IsNull(CultureCode, @CultureCode) = @CultureCode
END
GO

/********************************************************
 * SPROC: GetPortalSettings (fixing CultureCode use, DNN-5742
 ********************************************************/
IF OBJECT_ID(N'{databaseOwner}[{objectQualifier}GetPortalSettings]', N'P') IS NOT NULL
    DROP PROCEDURE {databaseOwner}[{objectQualifier}GetPortalSettings]
GO

CREATE PROCEDURE {databaseOwner}[{objectQualifier}GetPortalSettings]
    @PortalId    Int,            -- not Null!
    @CultureCode nVarChar(20)    -- totally ignored
AS
BEGIN
	SELECT
		SettingName,
		CASE WHEN Lower(SettingValue) Like 'fileid=%'
		 THEN {databaseOwner}[{objectQualifier}FilePath](SettingValue)
		 ELSE PS.SettingValue 
		END   AS SettingValue,
		CreatedByUserID,
		CreatedOnDate,
		LastModifiedByUserID,
		LastModifiedOnDate,
		CultureCode
	 FROM  {databaseOwner}[{objectQualifier}PortalSettings] 
	 WHERE PortalID = @PortalId
           AND IsNull(CultureCode, @CultureCode) = @CultureCode
END
GO


/********************************************************
 * Table: PortalSettings (allow CultureCode Null, DNN-5743
 ********************************************************/
IF EXISTS(SELECT * FROM sys.key_constraints WHERE name = 'PK_{objectQualifier}PortalSettings' AND parent_object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}PortalSettings]'))
	ALTER TABLE {databaseOwner}[{objectQualifier}PortalSettings] 
	DROP CONSTRAINT [PK_{objectQualifier}PortalSettings]
GO

IF EXISTS(SELECT * FROM sys.indexes WHERE name = 'IX_{objectQualifier}PortalSettings' AND object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}PortalSettings]'))
	DROP INDEX [IX_{objectQualifier}PortalSettings] ON {databaseOwner}[{objectQualifier}PortalSettings] 
	
GO

IF EXISTS(SELECT * FROM sys.indexes WHERE name = 'PK_{objectQualifier}PasswordHistory' AND object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}PortalSettings]'))
	DROP INDEX [PK_{objectQualifier}PortalSettings] ON {databaseOwner}[{objectQualifier}PortalSettings] 
GO

IF NOT Exists (SELECT * FROM sys.all_columns WHERE Name = 'PortalSettingsID' and Object_id = object_id(N'{databaseOwner}[{objectQualifier}PortalSettings]')) 
	ALTER TABLE {databaseOwner}[{objectQualifier}PortalSettings]
	  ADD PortalSettingsID int NOT NULL IDENTITY (1, 1);
GO

ALTER TABLE {databaseOwner}[{objectQualifier}PortalSettings] ADD CONSTRAINT
	[PK_{objectQualifier}PortalSettings] PRIMARY KEY NONCLUSTERED 
	(PortalSettingsID)
GO

CREATE UNIQUE CLUSTERED INDEX [IX_{objectQualifier}PortalSettings] ON {databaseOwner}[{objectQualifier}PortalSettings]
	(PortalID, CultureCode, SettingName)
GO
