<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Description.Help" xml:space="preserve">
    <value>A description of the package.</value>
  </data>
  <data name="Description.Text" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="Name.Help" xml:space="preserve">
    <value>The package name (e.g. CompanyName.Name).</value>
  </data>
  <data name="Name.Text" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="PackageType.Help" xml:space="preserve">
    <value>The type of package.</value>
  </data>
  <data name="PackageType.Text" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="Version.Help" xml:space="preserve">
    <value>The version of the package.</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="FriendlyName.Help" xml:space="preserve">
    <value>The friendly name of the package.</value>
  </data>
  <data name="FriendlyName.Text" xml:space="preserve">
    <value>Friendly Name:</value>
  </data>
  <data name="License.Help" xml:space="preserve">
    <value>The license for this package.</value>
  </data>
  <data name="License.Text" xml:space="preserve">
    <value>License:</value>
  </data>
  <data name="ReleaseNotes.Help" xml:space="preserve">
    <value>The release notes for this version.</value>
  </data>
  <data name="ReleaseNotes.Text" xml:space="preserve">
    <value>Release Notes:</value>
  </data>
  <data name="Name.Required" xml:space="preserve">
    <value>The name is a required field.</value>
  </data>
  <data name="Version.Required" xml:space="preserve">
    <value>The version is a required field.</value>
  </data>
  <data name="PackageType.Required" xml:space="preserve">
    <value>The package type is a required field.</value>
  </data>
  <data name="Version.Validation" xml:space="preserve">
    <value>A package must have a version number in the form of ##.##.##</value>
  </data>
  <data name="Owner.Help" xml:space="preserve">
    <value>The owner of the package.</value>
  </data>
  <data name="Owner.Text" xml:space="preserve">
    <value>Owner:</value>
  </data>
  <data name="Email.Help" xml:space="preserve">
    <value>The email address of the package's author.</value>
  </data>
  <data name="Email.Text" xml:space="preserve">
    <value>Email Address:</value>
  </data>
  <data name="Organization.Help" xml:space="preserve">
    <value>The organization responsible for the package.</value>
  </data>
  <data name="Organization.Text" xml:space="preserve">
    <value>Organization:</value>
  </data>
  <data name="URL.Help" xml:space="preserve">
    <value>The author's URL.</value>
  </data>
  <data name="URL.Text" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="FriendlyName.Required" xml:space="preserve">
    <value>The friendly name is required.</value>
  </data>
  <data name="Email.Validation" xml:space="preserve">
    <value>The email address must be valid.</value>
  </data>
  <data name="IconFile.Help" xml:space="preserve">
    <value>The icon filename for this package.</value>
  </data>
  <data name="IconFile.Text" xml:space="preserve">
    <value>Icon File:</value>
  </data>
  <data name="feedEndpoint.Text" xml:space="preserve">
    <value>catalog.dotnetnuke.com</value>
  </data>
  <data name="setupCredentials.Text" xml:space="preserve">
    <value>Enter Store Credentials</value>
  </data>
  <data name="WebserviceFailure.Text" xml:space="preserve">
    <value>We cannot connect to the web service.</value>
  </data>
  <data name="WebservicePermission.Text" xml:space="preserve">
    <value>This site does not allow external web service connections.</value>
  </data>
  <data name="StoreFile.Text" xml:space="preserve">
    <value>https://www.snowcovered.com/Snowcovered2/AppGalleryHandler.ashx?PortalID=0</value>
  </data>
  <data name="fetchExtensions.Text" xml:space="preserve">
    <value>Fetch List of Extensions</value>
  </data>
  <data name="PurchasedHelp.Text" xml:space="preserve">
    <value>Here you can view the extensions you have purchased from the DNN Store and optionally download and deploy them to the site.  You will need to provide your Store credentials to view your purchases.</value>
  </data>
  <data name="PurchasedTitle.Text" xml:space="preserve">
    <value>Purchased Extensions</value>
  </data>
  <data name="deleteCredentials.Text" xml:space="preserve">
    <value>Change Store Details</value>
  </data>
  <data name="updateCredentials.Text" xml:space="preserve">
    <value>Update Store Credentials</value>
  </data>
  <data name="deploy.Text" xml:space="preserve">
    <value>Deploy</value>
  </data>
  <data name="deploySuccess.Text" xml:space="preserve">
    <value>Extension - {0} - successfully deployed to site.  Select Install Extension to install your new extension.</value>
  </data>
  <data name="download.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="extensionDescLabel.Help" xml:space="preserve">
    <value>The description of the extension that has been selected for deployment.</value>
  </data>
  <data name="extensionDescLabel.Text" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="extensionNamelabel.Help" xml:space="preserve">
    <value>The name of the extension that has been selected for deployment.</value>
  </data>
  <data name="extensionNamelabel.Text" xml:space="preserve">
    <value>Extension Name:</value>
  </data>
  <data name="extensionTypeLabel.Help" xml:space="preserve">
    <value>The type of extension that has been selected for deployment.</value>
  </data>
  <data name="extensionTypeLabel.Text" xml:space="preserve">
    <value>Extension Type:</value>
  </data>
  <data name="Help.Text" xml:space="preserve">
    <value>A request is about to be made for an external file - if you were not expecting to make this request please select Cancel to return to the Extensions page - otherwise select from one of the available options below.</value>
  </data>
  <data name="install.Text" xml:space="preserve">
    <value>Install Extension</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>Deploy and Install Extension</value>
  </data>
  <data name="unexpectedRequest.Text" xml:space="preserve">
    <value>An attempt was made to access an unexpected external file.</value>
  </data>
  <data name="NoData.Text" xml:space="preserve">
    <value>There is no data to display.</value>
  </data>
  <data name="PackageErrors.Text" xml:space="preserve">
    <value>&lt;u&gt;The following packages are invalid:&lt;/u&gt;&lt;br/&gt;</value>
  </data>
</root>