<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_.Text" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="CreateExtension.Action" xml:space="preserve">
    <value>Create New Extension</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>UnInstall this Extension</value>
  </data>
  <data name="ExtensionInstall.Action" xml:space="preserve">
    <value>Install Extension Wizard</value>
  </data>
  <data name="Language.Header" xml:space="preserve">
    <value>Language?</value>
  </data>
  <data name="Name.Header" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="plPackageTypes.Help" xml:space="preserve">
    <value>Choose a type from this list, to show only extensions of the selected type.</value>
  </data>
  <data name="plPackageTypes.Text" xml:space="preserve">
    <value>Filter by Type:</value>
  </data>
  <data name="Title.Text" xml:space="preserve">
    <value>List of {0} Extensions Installed</value>
  </data>
  <data name="TreeHeader.Text" xml:space="preserve">
    <value>Installed Extensions</value>
  </data>
  <data name="Type.Header" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Upgrade.Header" xml:space="preserve">
    <value>Upgrade?</value>
  </data>
  <data name="Version.Header" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Description.Header" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ImportModule.Action" xml:space="preserve">
    <value>Import Module Definition</value>
  </data>
  <data name="CreateLanguagePack.Action" xml:space="preserve">
    <value>Create New Language</value>
  </data>
  <data name="CreateModule.Action" xml:space="preserve">
    <value>Create New Module</value>
  </data>
  <data name="LanguagePackInstall.Action" xml:space="preserve">
    <value>Install Language Pack</value>
  </data>
  <data name="ModuleInstall.Action" xml:space="preserve">
    <value>Install Module</value>
  </data>
  <data name="CreateSkin.Action" xml:space="preserve">
    <value>Create New Theme</value>
  </data>
  <data name="EditSkins.Action" xml:space="preserve">
    <value>Manage Themes</value>
  </data>
  <data name="SkinInstall.Action" xml:space="preserve">
    <value>Install New Theme</value>
  </data>
  <data name="plLocales.Text" xml:space="preserve">
    <value>Find available language packs:</value>
  </data>
  <data name="plLocales.Help" xml:space="preserve">
    <value>Choose a language from this list, to show what extensions have a language pack available in the selected language. If a language pack exists, follow the link to download and install the language pack.</value>
  </data>
  <data name="CreateContainer.Action" xml:space="preserve">
    <value>Create New Container</value>
  </data>
  <data name="InstallExtensions.Action" xml:space="preserve">
    <value>Install Available Extensions</value>
  </data>
  <data name="AppTitle.Text" xml:space="preserve">
    <value />
  </data>
  <data name="AppType.Text" xml:space="preserve">
    <value />
  </data>
  <data name="AppDescription.Text" xml:space="preserve">
    <value />
  </data>
  <data name="UpgradeMessage.Text" xml:space="preserve">
    <value>Click Here To Get The Upgrade</value>
  </data>
  <data name="LanguageMessage.Text" xml:space="preserve">
    <value>Click Here To Get The Language Pack</value>
  </data>
  <data name="Portal.Header" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="lblUpdate.Text" xml:space="preserve">
    <value>This application contains an Update Service which displays an icon when a new version of an Extension is available. The icon displayed will contain a visual indication if a currently installed Extension contains a potential security vulnerability. If a security vulnerability is identified, it is highly recommended that you upgrade to the newer version of the Extension. Clicking the icon will redirect you to a location where you will be able to acquire the Extension for immediate installation.</value>
  </data>
  <data name="CheckLanguage.Text" xml:space="preserve">
    <value>Use Update Service to check for updated Language Packs for Extensions</value>
  </data>
  <data name="Language.Text" xml:space="preserve">
    <value>Edit Language Files</value>
  </data>
  <data name="Extensions.Text" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="NoResults.Text" xml:space="preserve">
    <value>No Extensions were found</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Edit this Extension</value>
  </data>
  <data name="InstalledOnHost.Tooltip" xml:space="preserve">
    <value>Installed on Host</value>
  </data>
  <data name="InstalledOnPortal.Tooltip" xml:space="preserve">
    <value>Installed on {0}</value>
  </data>
  <data name="Auth_System.Type" xml:space="preserve">
    <value>Authentication Systems</value>
  </data>
  <data name="Container.Type" xml:space="preserve">
    <value>Containers</value>
  </data>
  <data name="CoreLanguagePack.Type" xml:space="preserve">
    <value>Core Language Packs</value>
  </data>
  <data name="DashboardControl.Type" xml:space="preserve">
    <value>Dashboard Controls</value>
  </data>
  <data name="ExtensionLanguagePack.Type" xml:space="preserve">
    <value>Extension Language Packs</value>
  </data>
  <data name="Library.Type" xml:space="preserve">
    <value>Libraries</value>
  </data>
  <data name="Module.Type" xml:space="preserve">
    <value>Modules</value>
  </data>
  <data name="MoreExtensions.Text" xml:space="preserve">
    <value> More Extensions</value>
  </data>
  <data name="Provider.Type" xml:space="preserve">
    <value>Providers</value>
  </data>
  <data name="Skin.Type" xml:space="preserve">
    <value>Themes</value>
  </data>
  <data name="SkinObject.Type" xml:space="preserve">
    <value>Skin Objects</value>
  </data>
  <data name="Widget.Type" xml:space="preserve">
    <value>Widgets</value>
  </data>
  <data name="InstalledExtensions.Text" xml:space="preserve">
    <value>Installed Extensions</value>
  </data>
  <data name="AvailableExtensions.Text" xml:space="preserve">
    <value>Available Extensions</value>
  </data>
  <data name="ExpandAll.Text" xml:space="preserve">
    <value>Expand All</value>
  </data>
  <data name="AuthSystem.Type" xml:space="preserve">
    <value>Authentication Systems</value>
  </data>
  <data name="Language.Type" xml:space="preserve">
    <value>Language Packs</value>
  </data>
  <data name="Catalog.Text" xml:space="preserve">
    <value>Extension Feed</value>
  </data>
  <data name="CatalogModule.Text" xml:space="preserve">
    <value>Module</value>
  </data>
  <data name="CatalogSearchTitle.Text" xml:space="preserve">
    <value>Search for Extensions</value>
  </data>
  <data name="CatalogSkin.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="SearchLabel.Help" xml:space="preserve">
    <value>Hit Enter to Search, Esc will clear and Cancel</value>
  </data>
  <data name="SearchLabel.Text" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="TypeLabel.Help" xml:space="preserve">
    <value>Select type of extension</value>
  </data>
  <data name="TypeLabel.Text" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="ClearSearch.Text" xml:space="preserve">
    <value>Clear Search</value>
  </data>
  <data name="NameAZ.Text" xml:space="preserve">
    <value>Name: A-Z</value>
  </data>
  <data name="NameZA.Text" xml:space="preserve">
    <value>Name: Z-A</value>
  </data>
  <data name="PriceHighLow.Text" xml:space="preserve">
    <value>Price: High - Low</value>
  </data>
  <data name="PriceLowHigh.Text" xml:space="preserve">
    <value>Price: Low - High</value>
  </data>
  <data name="Search.Text" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="By.Text" xml:space="preserve">
    <value>By</value>
  </data>
  <data name="TagCloud.Text" xml:space="preserve">
    <value>Tag Cloud</value>
  </data>
  <data name="NotSpecified.Text" xml:space="preserve">
    <value>Not Specified</value>
  </data>
  <data name="MoreInformation.Text" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="DetailsLabel.Text" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="LicenseLabel.Text" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="TagLabel.Text" xml:space="preserve">
    <value>Tag:</value>
  </data>
  <data name="VendorLabel.Text" xml:space="preserve">
    <value>Vendor:</value>
  </data>
  <data name="ExtensionsLabel.Text" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="NoneLabel.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="ErrorLabel.Text" xml:space="preserve">
    <value>Error...</value>
  </data>
  <data name="LoadingLabel.Text" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="OrderLabel.Text" xml:space="preserve">
    <value>Order:</value>
  </data>
  <data name="InUse.Header" xml:space="preserve">
    <value>In Use</value>
  </data>
  <data name="PurchasedExtensions.Text" xml:space="preserve">
    <value>Purchased Extensions</value>
  </data>
  <data name="installExtension.Text" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Minimum Version Required:</value>
  </data>
  <data name="DescriptionLabel.Text" xml:space="preserve">
    <value>Product Description</value>
  </data>
  <data name="ExtensionDetail.Text" xml:space="preserve">
    <value>More detail</value>
  </data>
  <data name="License.Text" xml:space="preserve">
    <value>License:</value>
  </data>
  <data name="ListExtensions.Text" xml:space="preserve">
    <value>Learn more about how to offer your extensions &lt;a href="http://store.dnnsoftware.com/make-money/become-a-seller" target="_blank" class="info"&gt;here&lt;/a&gt;.</value>
  </data>
  <data name="JavaScript_Library.Type" xml:space="preserve">
    <value>JavaScript Libraries</value>
  </data>
  <data name="EvoqConnector.Type" xml:space="preserve">
    <value>Evoq Connectors</value>
  </data>
</root>