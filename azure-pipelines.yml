pool:
  vmImage: 'windows-latest'

variables:
  - name: "Build.ArtifactStagingDirectory"
    value: "Artifacts/"
  # The following variables are defined as settable at queue time, so they cannot be included here
  # Branch.CdfProvider: dnn
  # Branch.CkEditor: development
  # CakeTarget: BuildAll
  # CakeVerbosity: Normal # valid values include Quiet, Minimal, Normal, Verbose, Diagnostic
  # ReleaseMode: Beta
  # RunTests: True

trigger:
  batch: true
  branches:
    include:
      - '*'

pr:
  autoCancel: true
  branches:
    include:
      - '*'

steps:

- task: PowerShell@2
  displayName: 'Run DNN Update Versions'
  inputs:
    targetType: filePath
    filePath: ./build.ps1
    arguments: '--target=BuildServerSetVersion --verbosity=$(CakeVerbosity)'

- script: 'sqllocaldb start mssqllocaldb'
  displayName: 'Start Sql LocalDb Service'
  condition: and(succeeded(), eq(variables['RunTests'], 'True'))

- powershell: 'npm config set registry https://www.myget.org/F/dnn-software-public/npm/'
  displayName: 'npm config set registry'
  enabled: false

- powershell: |
   $path = '.\DNN Platform\Library\Properties\AssemblyInfo.cs'
   $pattern3 = '\[assembly: AssemblyStatus'
   (Get-Content $path) | ForEach-Object{
      if($_ -match $pattern3){
       # We have found the matching line
       '[assembly: AssemblyStatus(ReleaseMode.{0})]' -f '$(ReleaseMode)'
      } else {
       $_
      }
     } | Set-Content $path
   
  displayName: 'Update Alpha/Beta/Stable flag'

- task: PowerShell@2
  displayName: 'Run DNN Build via Cake'
  inputs:
    targetType: filePath
    filePath: ./build.ps1
    arguments: '--target=$(CakeTarget) --verbosity=$(CakeVerbosity) --CkBranch="$(Branch.CkEditor)" --CdfBranch="$(Branch.CdfProvider)"'

- task: PowerShell@2
  displayName: 'Run Unit Tests via Cake'
  inputs:
    targetType: filePath
    filePath: ./build.ps1
    arguments: '--target=UnitTests --verbosity=$(CakeVerbosity)'
  continueOnError: true
  condition: and(succeeded(), eq(variables['RunTests'], 'True'))

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/TestResults/*.xml'
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/TestResults/*.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true
  condition: eq(variables['RunTests'], 'True')

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts'
  inputs:
    PathtoPublish: Artifacts
    ArtifactName: Artifacts
  continueOnError: true

- task: NuGetCommand@2
  displayName: 'Publish to MyGet'
  inputs:
    command: push
    packagesToPush: 'Artifacts/**/*.nupkg;!Artifacts/**/*.symbols.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'DNN-NuGet-MyGet'
  enabled: false

